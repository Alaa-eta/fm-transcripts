WEBVTT

1
00:00:02.094 --> 00:00:04.082
&gt;&gt; Scott Moss: I think this one does
have tests associated with it, so

2
00:00:04.082 --> 00:00:05.190
let's run that.

3
00:00:05.190 --> 00:00:06.769
If you run the tests yarn test.

4
00:00:06.769 --> 00:00:08.180
Oops, I'm in the wrong branch.

5
00:00:08.180 --> 00:00:10.360
Let me check out.
So this is less than three.

6
00:00:19.110 --> 00:00:21.290
&gt;&gt; Scott Moss: Yeah,
so I wrote some tests.

7
00:00:21.290 --> 00:00:23.110
Let's see.

8
00:00:23.110 --> 00:00:26.596
Yeah, so if you run the test on this, if
you check out to this branch lesson three

9
00:00:26.596 --> 00:00:28.640
and you run the test,
the test are gonna hang.

10
00:00:28.640 --> 00:00:31.620
Just like the site hang
when you wrote the code?

11
00:00:31.620 --> 00:00:33.190
As you see right now it's just,
it's failing.

12
00:00:33.190 --> 00:00:36.961
It's hitting MOCHA's timeout limit in
like ten seconds, and it's just failing,

13
00:00:36.961 --> 00:00:38.010
all right?

14
00:00:38.010 --> 00:00:42.140
So your objective is, to get this
test to one, not only not hang.

15
00:00:42.140 --> 00:00:46.650
But, two, if you can get them to pass,
that'd be great, too.

16
00:00:46.650 --> 00:00:49.300
So try to do that.

17
00:00:49.300 --> 00:00:52.450
The command for
that is mpm test or yarn test.

18
00:00:52.450 --> 00:00:55.010
You should be able to
run those pretty easily.

19
00:00:55.010 --> 00:00:58.294
If you're running yarn you just do
//watch and it'll watch the test.

20
00:00:58.294 --> 00:01:03.150
If you're running mpm
you gotta do -- --watch.

21
00:01:03.150 --> 00:01:03.910
And then you can watch them.

22
00:01:03.910 --> 00:01:05.340
It's pretty fast.

23
00:01:05.340 --> 00:01:08.225
The test had to compile on web pack,
so it can take a minute, but

24
00:01:08.225 --> 00:01:09.430
it's still pretty fast.

25
00:01:11.430 --> 00:01:13.743
So I'm gonna go to the exact
challenge of what we're doing.

26
00:01:13.743 --> 00:01:20.186
So basically, complete controllers on
query.js, get the route API specs to pass,

27
00:01:20.186 --> 00:01:25.030
they are probably handing right now and
ignore the model specs.

28
00:01:25.030 --> 00:01:27.604
There is some other tests in here that
are felling, that has to do with models.

29
00:01:27.604 --> 00:01:28.970
Ignore those.

30
00:01:28.970 --> 00:01:30.773
Don't even care about those.

