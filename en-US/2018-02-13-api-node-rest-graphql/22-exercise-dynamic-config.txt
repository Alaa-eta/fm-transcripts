[00:00:02]
>> Scott Moss: Okay, so I basically showed you what needs to happen here, but in order for me to explain it, I pretty much have to show you. There's no test associated with this, and an exercise is really just to create a configuration. It doesn't even have to look like mine.

[00:00:17]
You can create it however you want. I just want you to create a configuration that has a default.
>> Scott Moss: And it extends based off environment variables. So if you wanna look at mine, again, I have a default here. I'm requiring the one that has the appropriate environment. So if it's development or dev, I'm requiring this file.

[00:00:45]
If it's testing or test, I'm requiring this file. And then I merge it. So that's step one. It's create your system for that. You can piggy back my system, that's totally fine. Then the next thing is, go replace those places that we saw. So for instance, inside of index digest.

[00:01:01]
Replace this with your configuration. So in my case it would be something like this. I would import config here.
>> Scott Moss: Config from,
>> Scott Moss: Config, it's the index. So all I got to do, instead of putting 3000 I would put config.port,
>> Scott Moss: Boom, and now whatever my configuration says the port is, depending on my environment, it's gonna be that now.

[00:01:31]
Right, now also get rid of this.
>> Scott Moss: There we go.
>> Scott Moss: So that's one place. Like I said, the other place you would wanna do this is in DBJS. You don't wanna hard code. Mine's already changed. So yeah, you don't wanna hard code that URL in, you just wanna do that.

[00:01:55]
I would say for now, you probably only want. There's probably only two database zeros you'll have. You'll have one for testing and one for development. You should make those separate that way, because in testing the database gets wiped out every time, right? So if that's wiping out your development database, you'll probably be aggravated when you actually go to your app.

[00:02:09]
You'll be like, where's the seed data that I put in there? Well it got wiped out cuz you used it in testing. So whenever you make these configuration files, you can see right here, I have a different database for testing than I do for development. Development actually just defaults to this one, right?

[00:02:25]
The way my system works is, if I don't pass anything on these files, it's totally fine because the index has defaults for everything. So whatever is not there it just won't overwrite it. So this is gonna be as naive, as simple as you want, it does not matter as long as you have the port, the database and then for extra credit, you can go ahead and put in the auth jwt secret right here.

[00:02:50]
So instead of hard coding the secret that was right here, you're going to use the configuration to do that. That secret will probably be injected with a environment variable. And then for super extra credit you can also have your configuration disableAuth or not. So like, I wanna run in dev mode, and then for dev mode I'm going to say, what is it?

[00:03:12]
Let me go back to it. For dev mode I'm gonna turn off auth so I can not deal with logging in a user every time. So this one is called disableAuth. So if I were to say disableAuth and I go back to my config for dev and I put disableAuth: true.

[00:03:29]
And then now when I run my server
>> Scott Moss: Cool. So I run my server, now I try to hit it 300/api/notes. It still break because I turn off but, I think it's still looking for user, yeah. So, I turned off auth, but it's still doing all the middle ware which is this one right here.

[00:03:57]
It's still doing this. This is undefined right here, so it's still breaking right here. So maybe I'll extend it to also not do that, let's see.
>> Scott Moss: There we go.
>> Scott Moss: Let's try it again, there we go. Yeah, that was totally it. So that's extra credit. It's just to turn off authentication if that configuration is there, so you can see the power of this.

[00:04:20]
You can just come in like, yeah, for testing, you know, turn off authentication, or for development turn it on. Like, however you want to do it. But yeah. Make a system like that. Doesn't have to be intricate, doesn't have to be perfect. I just want you to get in to the habit of building your own configuration thing.

[00:04:35]
I'm gonna leave mine up. This one's not gonna take too long. Lets say it's 3:52 now, lets come back at. 4:15, and we'll talk about implementations that you might have done, any fallacies that you might have figured out, or any other optimizations we could have done, and then we'll go from there.

[00:04:56]

>> Speaker 2: Can you just do one, just hit dev js, or prod, or something like that. Just show us the example.
>> Scott Moss: Yeah, sure. Prod nothing, because I didn't do anything for prod. Dev I just put in expire time for the JWT. I put in secrets, here's my JWT_SECRET.

[00:05:14]
And I disableAuth. For testing I'll just add a database URL list here. So basically if you wanna know how it works in my system you create this base config, right? And every single file is the same shape as base config, minus the properties they don't want to override.

[00:05:34]
So if my dev file, all I want to do is override the port, that's all it would have. it would have a port, it wouldn't have anything else because the way it merges this, it's this overrides this.
>> Scott Moss: You can also do a dynamic require. Although I don’t recommend doing that, you can totally do that.

[00:05:53]
So what’s one, should I leave this one up or, I’ll leave this one up. Actually, let me see if I can split two of them. That’d probably be better. I'll split that one,
>> Scott Moss: And that one.
>> Scott Moss: Cool, okay, so let's come back at 4:15.

