WEBVTT

1
00:00:00.120 --> 00:00:03.170
&gt;&gt; Brian Holt: We're gonna
start writing some HTML now,

2
00:00:03.170 --> 00:00:04.230
which is gonna be super exciting.

3
00:00:06.610 --> 00:00:08.650
So, this is the raw building materials,
right?

4
00:00:08.650 --> 00:00:12.120
So we're actually gonna pile up our lumber
in front of our house before we start

5
00:00:12.120 --> 00:00:13.760
building it.

6
00:00:13.760 --> 00:00:16.750
So, HTML stands for
hypertext markup language.

7
00:00:16.750 --> 00:00:20.110
I had to look that up,
because I can never remember what it is.

8
00:00:20.110 --> 00:00:22.930
Or in other words, it's not important
what it stands for, it's HTML.

9
00:00:22.930 --> 00:00:27.770
[LAUGH] So like I said before,
you don't run HTML.

10
00:00:27.770 --> 00:00:30.410
HTML, it's like speaking English, right?

11
00:00:30.410 --> 00:00:32.810
You're literally just
describing what you want,

12
00:00:32.810 --> 00:00:37.680
and you have a browser that just reads it
and kind of just displays it as it is.

13
00:00:39.870 --> 00:00:43.390
So it is static which is
the opposite of dynamic.

14
00:00:43.390 --> 00:00:44.780
It is unchanging.

15
00:00:44.780 --> 00:00:50.790
You just, here's HTML, it's like
presenting you with like an essay, right.

16
00:00:50.790 --> 00:00:52.900
Your essay doesn't execute anything,
it's just an essay.

17
00:00:55.310 --> 00:00:59.640
So the basic building
block of HTML is a tag.

18
00:01:00.690 --> 00:01:05.050
Or, you'll hear me sometimes
use the word element, as well.

19
00:01:05.050 --> 00:01:08.531
And element is like one
specific instance of a tag, and

20
00:01:08.531 --> 00:01:11.350
we'll kind of explain
that as I go forward.

21
00:01:11.350 --> 00:01:12.440
But let's just get into an example.

22
00:01:12.440 --> 00:01:14.270
I think that's the best way to learn.

23
00:01:14.270 --> 00:01:17.250
So here, I have this h1, right.

24
00:01:17.250 --> 00:01:21.186
So this is called an angle bracket.

25
00:01:21.186 --> 00:01:24.800
Then h1, which is the type of tag this is.

26
00:01:25.840 --> 00:01:27.190
So this is an h1 tag.

27
00:01:29.180 --> 00:01:31.420
Then you have your text inside of it.

28
00:01:31.420 --> 00:01:34.840
And then here, we have the closing h1 tag,

29
00:01:34.840 --> 00:01:38.750
which is, you can tell, it is angle
brackets, slash, and then the tag.

30
00:01:39.830 --> 00:01:41.460
And then a closing angle bracket.

31
00:01:44.300 --> 00:01:47.630
So, I'll talk about what an &lt;h1&gt;
specifically is here in just a second, but

32
00:01:47.630 --> 00:01:51.050
I want you to get familiar with
the premise of what a tag is.

33
00:01:52.140 --> 00:01:57.780
So, this is basically saying that I
have this header, this &lt;h1&gt;, right?

34
00:01:57.780 --> 00:02:01.960
This is the text that's inside of there,
and this is where it ends, right.

35
00:02:01.960 --> 00:02:05.750
So you can see here,
this is the title to my document.

36
00:02:05.750 --> 00:02:07.868
Again, this is editable, so
you can put things in here and

37
00:02:07.868 --> 00:02:09.390
you can instantly see it inside of there.

38
00:02:12.190 --> 00:02:17.020
So, this is how HTML operates.

39
00:02:17.020 --> 00:02:20.300
It's just a bunch of tags with
stuff inside of it, right?

40
00:02:20.300 --> 00:02:25.526
In this case, we just have text inside of
it, but often tags will have other tags

41
00:02:25.526 --> 00:02:30.536
inside of it.
&gt;&gt; Brian Holt: So,

42
00:02:30.536 --> 00:02:33.799
when it's rendered out to the browser,
this is what it looks like.

43
00:02:34.990 --> 00:02:40.040
So an h1 specifically is a header,
right, that's what the h stands for.

44
00:02:40.040 --> 00:02:43.800
And the h1, the 1 part of it means
it's the most important one for

45
00:02:43.800 --> 00:02:45.670
whatever section it's in, right.

46
00:02:46.810 --> 00:02:52.920
There's also h2s,
which are the second level, right.

47
00:02:52.920 --> 00:02:57.421
As you might imagine, you can have an h1,
that's like the title of the page, and

48
00:02:57.421 --> 00:03:00.310
then you might have multiple subsections,
right?

49
00:03:00.310 --> 00:03:03.480
Like, maybe you have a blog, and
you have multiple blog posts, and

50
00:03:03.480 --> 00:03:07.370
each one of those titles of those blog
post might be h2, so for example, right?

51
00:03:07.370 --> 00:03:09.340
So it's the second most important level.

52
00:03:09.340 --> 00:03:12.830
It's not that you can't have multiple h2s,
you can even have multiple h1s,

53
00:03:12.830 --> 00:03:13.490
that's fine too.

54
00:03:16.770 --> 00:03:18.020
But it's kind of a hierarchy, right.

55
00:03:18.020 --> 00:03:21.020
So you're saying that,
when you say something is an h2,

56
00:03:21.020 --> 00:03:22.700
it's not as important as the h1.

57
00:03:24.350 --> 00:03:27.680
And again, this goes all the way down to,
actually, h6.

58
00:03:28.840 --> 00:03:32.310
There's no h7, I'm sorry,
it's just, hopefully,

59
00:03:32.310 --> 00:03:36.793
you don't have 6 different,
I don't think I've actually used an h6,

60
00:03:36.793 --> 00:03:41.842
like on a website that I've written.
&gt;&gt; Brian Holt: Maybe I'm

61
00:03:41.842 --> 00:03:44.950
doing something wrong,
but no, not typically.

62
00:03:44.950 --> 00:03:48.341
I think I've used like an h3 before,
I don't think I've gone any lower than

63
00:03:48.341 --> 00:03:53.281
h3.
&gt;&gt; Brian Holt: Okay,

64
00:03:53.281 --> 00:03:56.911
so this is the base layer
of like what HTML is,

65
00:03:56.911 --> 00:04:01.250
it's just a bunch of tags,
that's really about it.

66
00:04:01.250 --> 00:04:05.213
[LAUGH]
&gt;&gt; Brian Holt: So

67
00:04:05.213 --> 00:04:06.940
that's what this looks like.

68
00:04:06.940 --> 00:04:07.950
That's the h1 right there.

69
00:04:07.950 --> 00:04:14.373
That in and of itself is a h1.
&gt;&gt; Brian Holt: So,

70
00:04:14.373 --> 00:04:18.248
it's bigger and it's bolder,
because that's what browsers do with h1s,

71
00:04:18.248 --> 00:04:19.809
they make things big and bold.

72
00:04:21.270 --> 00:04:25.860
The browser has a bunch of defaults of
what it thinks an h1 should look like.

73
00:04:25.860 --> 00:04:27.070
Now, when we get into CSS,

74
00:04:27.070 --> 00:04:30.720
we'll figure out later how to
make it look like other things.

75
00:04:30.720 --> 00:04:33.600
But just, by putting an h1 on the page,
that's what it does.

76
00:04:33.600 --> 00:04:35.360
That's what the browser does,
that's what it's supposed to do,

77
00:04:35.360 --> 00:04:36.800
is make it big and bold.

78
00:04:36.800 --> 00:04:40.220
And you'll notice, when I was up here
messing around with this, when I put h1,

79
00:04:40.220 --> 00:04:42.830
it was really big, right?

80
00:04:42.830 --> 00:04:47.660
When I put h3 or
h2 it gets smaller each time, right?

81
00:04:47.660 --> 00:04:51.664
Down to h6, which is just a little
bit bigger than the normal text.

82
00:04:58.122 --> 00:04:59.889
&gt;&gt; Brian Holt: So, like I said, with CSS,

83
00:04:59.889 --> 00:05:04.940
you can change these things to make
them look and act differently, right?

84
00:05:04.940 --> 00:05:07.670
So why is it actually important
that we're using the correct tag?

85
00:05:07.670 --> 00:05:10.490
Why am I using h1,
if it's ultimately meaningless,

86
00:05:10.490 --> 00:05:12.910
if I can change the way it looks?

87
00:05:12.910 --> 00:05:13.440
Well, the reason why,

88
00:05:13.440 --> 00:05:16.750
it actually ends up being really
important for a couple of reasons.

89
00:05:16.750 --> 00:05:20.810
The first and foremost one,
what I would deem the most important one

90
00:05:20.810 --> 00:05:25.100
is that it makes this website more
accessible to people that are not

91
00:05:25.100 --> 00:05:28.050
using the website like you do,
or maybe you do, right.

92
00:05:29.280 --> 00:05:32.650
So, there's things like screen readers,
right, for people that are blind, or

93
00:05:32.650 --> 00:05:37.860
hard of seeing, or otherwise
permanently or temporarily disabled.

94
00:05:37.860 --> 00:05:40.892
That have this screen readers that I
go through, and I'll actually look for

95
00:05:40.892 --> 00:05:44.980
the h1s on the page, it's like, here
are the important parts of this website.

96
00:05:44.980 --> 00:05:49.110
And so, it's being used in ways that you
probably don't necessarily anticipate.

97
00:05:49.110 --> 00:05:53.298
So, it's actually up to you, as the
developer, to just use good practices and

98
00:05:53.298 --> 00:05:54.373
say, like, okay.

99
00:05:54.373 --> 00:05:56.830
This is the most important part of this
section, I'm gonna use an h1 here.

100
00:05:58.620 --> 00:06:01.094
It's really really important because
the web is for everyone, right.

101
00:06:01.094 --> 00:06:04.110
It's not for just seeing people,
it's for everyone.

102
00:06:04.110 --> 00:06:09.090
That's one of the actually the fundamental
tenets of the web, is that it's for

103
00:06:09.090 --> 00:06:09.846
everyone.

104
00:06:09.846 --> 00:06:11.842
So make sure that you're
doing things like that,

105
00:06:11.842 --> 00:06:13.420
because it really is an ethical issue.

106
00:06:15.160 --> 00:06:19.840
Beyond that, it's also good for Google and
Bing and DuckDuckGo, and things like that.

107
00:06:19.840 --> 00:06:21.790
That's how they are actually
looking at your website.

108
00:06:21.790 --> 00:06:25.520
It's like okay, here's your h1, this is
actually probably pretty important to you.

109
00:06:25.520 --> 00:06:28.940
And so they use that when they're kind of
crawling your websites to determine where

110
00:06:28.940 --> 00:06:31.770
you're ranked, and how you're ranked,
and what keywords you rank for and

111
00:06:31.770 --> 00:06:33.250
things like that.

112
00:06:33.250 --> 00:06:35.000
So, that's another reason
why it's really important.

113
00:06:35.000 --> 00:06:36.650
And then lastly, it's actually for

114
00:06:36.650 --> 00:06:41.250
your future self, and your colleagues that
will be working on the same code as you.

115
00:06:41.250 --> 00:06:44.670
You're gonna write this code, and then
six months later, you're gonna come back,

116
00:06:44.670 --> 00:06:46.990
it's like,
what the hell did I write, right?

117
00:06:46.990 --> 00:06:48.733
That always happens.

118
00:06:48.733 --> 00:06:51.337
[LAUGH] That's why it's
really important for

119
00:06:51.337 --> 00:06:53.879
you to write code that makes sense, right?

120
00:06:53.879 --> 00:06:55.990
Because when you come back later,
you want it to be descriptive, so

121
00:06:55.990 --> 00:06:58.094
that when you read it,
it makes sense to you.

122
00:06:58.094 --> 00:07:01.710
A little-known fact is that code is
actually more meant for you than it is for

123
00:07:01.710 --> 00:07:02.820
the machine.

124
00:07:02.820 --> 00:07:06.865
You're just basically taking notes in such
a way that the computer can understand it.

125
00:07:06.865 --> 00:07:10.190
[LAUGH] That's really what code is,
at the end of the day.

126
00:07:10.190 --> 00:07:14.350
It's notes that the computer can exercise,
or that can execute, but

127
00:07:14.350 --> 00:07:16.760
you can understand later,
when you come back to make changes to it.

128
00:07:17.850 --> 00:07:22.370
That's the point of writing good code,
is that you can make it more readable and

129
00:07:22.370 --> 00:07:24.900
easier to modify later by yourself and
by others.

130
00:07:26.010 --> 00:07:28.080
So, use good HTML.

131
00:07:28.080 --> 00:07:31.638
It's worth the thought that you put
into it to make sure that it's good

132
00:07:31.638 --> 00:07:36.644
HTML.
&gt;&gt; Brian Holt: Let's see what else.

133
00:07:38.980 --> 00:07:40.538
&gt;&gt; Brian Holt: The other thing is that,

134
00:07:40.538 --> 00:07:43.359
things like this,
when you write good HTML,

135
00:07:43.359 --> 00:07:45.748
you end up making your code reusable.

136
00:07:45.748 --> 00:07:49.232
Which is something that we,
as developers, strive a lot to do,

137
00:07:49.232 --> 00:07:50.853
is to make our code reusable.

138
00:07:50.853 --> 00:07:55.800
What's really nice about that is if I make
this really nice h1 that matches the style

139
00:07:55.800 --> 00:08:00.187
of my website and all that kind of stuff,
when I go later, and I make another

140
00:08:00.187 --> 00:08:05.610
web page, I can just reuse that same h1
and not have to do any additional work.

141
00:08:05.610 --> 00:08:08.743
We'll get into that with CSS,
and how we're able to do that.

142
00:08:08.743 --> 00:08:13.090
But, if you use good coding styles, you'll
end up making parts of your code reusable,

143
00:08:13.090 --> 00:08:15.967
which makes you able to go faster,
and less prone to bugs,

144
00:08:15.967 --> 00:08:19.260
that's another thing
that's really important.

145
00:08:19.260 --> 00:08:23.894
So hopefully, I've explained to you at
least a little bit why it's important to

146
00:08:23.894 --> 00:08:27.978
put a little bit of thought into HTML and
not just make everything a div or

147
00:08:27.978 --> 00:08:32.039
whatever it is.
&gt;&gt; Brian Holt: So, a tag,

148
00:08:32.039 --> 00:08:35.671
whether it's opening or closing,
it's surrounded by angle brackets,

149
00:08:35.671 --> 00:08:39.570
100% of the time,
all tags are surrounded by angle brackets.

150
00:08:39.570 --> 00:08:43.930
So, h1s, inputs, all that kind of stuff,
this is what you're looking for

151
00:08:43.930 --> 00:08:47.989
when you're reading HTML, are the opening
and closing angle brackets.

152
00:08:49.470 --> 00:08:52.400
Closing tags always have a slash,
right here,

153
00:08:52.400 --> 00:08:57.440
after the opening angle bracket for the,
that's how you know it's a closing tag.

154
00:08:58.890 --> 00:09:02.801
Lastly, you have things that are called
void tags or self-closing tags,

155
00:09:02.801 --> 00:09:07.810
and you'll see that slash here at the end,
next to the closing angle bracket.

156
00:09:07.810 --> 00:09:10.720
These are tags that open and
close themselves,

157
00:09:10.720 --> 00:09:13.234
right, so they're self-contained units.

158
00:09:14.710 --> 00:09:18.539
We'll explain here, in a second,
why you would have that.

159
00:09:18.539 --> 00:09:21.546
But just know you have
both self-closing tags and

160
00:09:21.546 --> 00:09:25.870
then you also have tags that open and
then close eventually, right.

161
00:09:25.870 --> 00:09:30.055
So this one, right here,
opens here, closes here,

162
00:09:30.055 --> 00:09:35.364
right?
&gt;&gt; Brian Holt: It's really important that,

163
00:09:35.364 --> 00:09:39.390
you basically treat these
like parentheses, right?

164
00:09:39.390 --> 00:09:41.280
If you have an opening parenthesis,

165
00:09:41.280 --> 00:09:44.390
you need to close it before you close
any of the other parentheses, right?

166
00:09:44.390 --> 00:09:49.482
So, if I have parentheses like that,
that's really hard to see.

167
00:09:49.482 --> 00:09:50.320
It's easier to see up there.

168
00:09:52.470 --> 00:09:56.530
If I had, like a square bracket there,
I wouldn't close it like that, right,

169
00:09:56.530 --> 00:09:58.350
that doesn't really make any sense.

170
00:10:00.200 --> 00:10:02.077
Maybe I'll make it a little
bit bigger just temporarily,

171
00:10:02.077 --> 00:10:03.410
so you can see what I'm talking about.

172
00:10:03.410 --> 00:10:09.060
This is what I'm talking about.
&gt;&gt; Brian Holt: So,

173
00:10:09.060 --> 00:10:13.004
if you're doing parentheses, you would
have parentheses on the interior, and

174
00:10:13.004 --> 00:10:15.963
then you would have square
brackets on the outside, right?

175
00:10:15.963 --> 00:10:17.020
That would make sense, right?

176
00:10:17.020 --> 00:10:19.490
So you have to close the last
one that was opened.

177
00:10:19.490 --> 00:10:20.760
That's basically what I'm saying here.

178
00:10:20.760 --> 00:10:25.040
So if I have an h1 here that opens,
I can't close the div.

179
00:10:25.040 --> 00:10:27.360
I have to close the h1 first.

180
00:10:27.360 --> 00:10:32.179
So, like you see here, where I have the h1
here and the div here, this is wrong.

181
00:10:32.179 --> 00:10:34.014
This is not valid html.

182
00:10:34.014 --> 00:10:36.880
So this h1 has to close
before I can close this div.

183
00:10:36.880 --> 00:10:39.210
That make sense?

184
00:10:39.210 --> 00:10:45.471
It's just one of the rules of html.
&gt;&gt; Brian Holt: So,

185
00:10:45.471 --> 00:10:47.570
we'll talk about divs here in a second.

186
00:10:47.570 --> 00:10:57.117
So, at the end, we go over a lot of tags.
&gt;&gt; Brian Holt: Cool.

187
00:10:59.120 --> 00:11:01.220
So, a self-closing tag.

188
00:11:01.220 --> 00:11:03.470
I'm just gonna put it right here.

189
00:11:03.470 --> 00:11:04.560
Something like an input.

190
00:11:08.200 --> 00:11:10.330
So, you're going to say here,
this is a text box, right?

191
00:11:12.540 --> 00:11:16.820
The way that you make this text box
on this page is with this input tag.

192
00:11:16.820 --> 00:11:21.320
That's what it does, is it allows
the user to input stuff into, like,

193
00:11:21.320 --> 00:11:25.130
a website so that you eventually that
HTML, or whatever the user puts there,

194
00:11:25.130 --> 00:11:26.600
can be sent to you, right.

195
00:11:27.790 --> 00:11:29.360
So it makes sense that this
is a self-closing tag.

196
00:11:29.360 --> 00:11:30.940
You wouldn't actually have
anything inside of it.

197
00:11:30.940 --> 00:11:32.590
That wouldn't make any sense, right.

198
00:11:32.590 --> 00:11:36.290
Because this is like one atomic
unit that cannot be split apart.

199
00:11:36.290 --> 00:11:38.703
So that's kind of what these
self-closing tags are,

200
00:11:38.703 --> 00:11:41.225
they're things that really
just can't be split apart.

201
00:11:41.225 --> 00:11:42.456
There's nothing inside of it,

202
00:11:42.456 --> 00:11:45.612
it doesn't make any sense to have anything
other than a self-closing tag there.

203
00:11:47.750 --> 00:11:50.310
So you see here that's what
this trailing slash here means,

204
00:11:50.310 --> 00:11:52.520
that means this is a self-closing tag.

205
00:11:52.520 --> 00:11:54.710
Unfortunately, to make this
a little bit more confusing,

206
00:11:54.710 --> 00:11:57.970
you actually don't have
to put that slash there.

207
00:11:57.970 --> 00:11:59.450
So you can have an input like this.

208
00:11:59.450 --> 00:12:07.990
This is actually a valid HTML.
&gt;&gt; Brian Holt: So, it is in fact optional.

209
00:12:07.990 --> 00:12:12.140
But no matter what, input tags are always
self-closing, and there are several others

210
00:12:12.140 --> 00:12:15.070
that are that way, but for
now we will just talk about inputs.

