WEBVTT

1
00:00:00.250 --> 00:00:05.900
&gt;&gt; Brian Holt: So far we've just kind of
been executing just little statements.

2
00:00:05.900 --> 00:00:08.640
If we had to do everything like this,
there's actually a term for

3
00:00:08.640 --> 00:00:10.620
what we're doing,
it's called procedural programming.

4
00:00:10.620 --> 00:00:13.010
Again one of those words that
you do not have to remember,

5
00:00:13.010 --> 00:00:16.070
it's just kind of an FYI.

6
00:00:16.070 --> 00:00:20.628
If we had to do everything this way it
would be kind of crappy [LAUGH] right?

7
00:00:20.628 --> 00:00:25.155
Because we would have to like write our
program just entirely like a procedure and

8
00:00:25.155 --> 00:00:26.430
that's far less fun.

9
00:00:26.430 --> 00:00:29.830
There is a thing in
JavaScript called functions.

10
00:00:29.830 --> 00:00:32.290
Which is pretty common,
most programming languages have them.

11
00:00:33.420 --> 00:00:35.940
And they basically
encapsulate little pieces of

12
00:00:35.940 --> 00:00:38.280
logic that you can reuse
all over the place.

13
00:00:40.070 --> 00:00:44.008
So let's just dive right into it and
see what it looks like.

14
00:00:44.008 --> 00:00:49.905
So I have a function here called add
to that accepts a number, right.

15
00:00:49.905 --> 00:00:51.852
So inside of this parenthesis,

16
00:00:51.852 --> 00:00:55.609
this is all the input that this
function would accept, okay.

17
00:00:55.609 --> 00:01:02.129
So this one accepts one number and
then it returns that number plus two.

18
00:01:03.240 --> 00:01:07.337
So as you might imagine,
if I do add two to five,

19
00:01:07.337 --> 00:01:12.775
what do you think I'm gonna get
down here for the final answer?

20
00:01:12.775 --> 00:01:13.937
Seven, right?

21
00:01:13.937 --> 00:01:17.790
Cuz it takes five,
five then becomes the number right here.

22
00:01:17.790 --> 00:01:23.610
So then it returns five plus two,
you get seven, right?

23
00:01:25.100 --> 00:01:31.887
I can go down here and
say console, dot, log,

24
00:01:31.887 --> 00:01:38.961
add 2 to 100.
&gt;&gt; Brian Holt: So, what's cool

25
00:01:38.961 --> 00:01:43.830
about add two now is I have this function
that I can reuse all over the place.

26
00:01:43.830 --> 00:01:45.190
I write it once and

27
00:01:45.190 --> 00:01:48.330
I get to reuse this function over and
over and over again, which is

28
00:01:48.330 --> 00:01:52.550
really nice because then I don't have to
rewrite this a bunch of different times.

29
00:01:52.550 --> 00:01:55.720
Now this is totally worthless.

30
00:01:55.720 --> 00:01:57.860
There's absolutely no reason
that I would write, add two,

31
00:01:57.860 --> 00:02:01.310
I would just normally add two to
something, that's not really that useful.

32
00:02:01.310 --> 00:02:04.758
But you can make these functions
quite involved that do a lot of

33
00:02:04.758 --> 00:02:09.618
things.
&gt;&gt; Brian Holt: So

34
00:02:09.618 --> 00:02:14.013
here's a really good one, I wrote this
function called greet that takes in

35
00:02:14.013 --> 00:02:18.893
a first name, a last name, an honorific,
that's the term for like Mr., Mrs.,

36
00:02:18.893 --> 00:02:23.890
Ms, all those things, that's called,
Dr., that's considered an honorific.

37
00:02:25.680 --> 00:02:26.990
And a greeting.

38
00:02:26.990 --> 00:02:30.817
And I return this really long string here,
right?

39
00:02:30.817 --> 00:02:35.948
So I can console.log down here greet,
Brian, holt, lord and salutations.

40
00:02:35.948 --> 00:02:39.024
And so you can see down here,
salutations, lord, holt.

41
00:02:39.024 --> 00:02:39.913
I was having fun.

42
00:02:39.913 --> 00:02:43.158
[LAUGH] I'm extremely pleased
that you could join us Brian.

43
00:02:43.158 --> 00:02:44.749
I hope you enjoy, Lord Holt.

44
00:02:45.920 --> 00:02:47.170
Okay.

45
00:02:47.170 --> 00:02:50.880
And then down here I do with Jack Sparrow,
captain, and a-hoy.

46
00:02:50.880 --> 00:02:53.900
It says, A-hoy Captain Sparrow.

47
00:02:53.900 --> 00:02:56.190
I feel ridiculous reading this out loud.

48
00:02:56.190 --> 00:02:57.645
It doesn't matter, I'm still doing it.

49
00:02:57.645 --> 00:02:59.560
A-hoy Captain Sparrow!

50
00:02:59.560 --> 00:03:01.220
I'm extremely pleased you could join us,
Jack.

51
00:03:01.220 --> 00:03:05.470
I hope you enjoy your stay,
Captain Sparrow.

52
00:03:05.470 --> 00:03:06.710
But you can see that here,

53
00:03:06.710 --> 00:03:09.310
I didn't have to rewrite that
whole string every single time.

54
00:03:09.310 --> 00:03:13.165
I was able to use template strings and
just plug in the various variables,

55
00:03:13.165 --> 00:03:17.440
right?
&gt;&gt; Brian Holt: So does that make sense?

56
00:03:17.440 --> 00:03:20.480
See a little bit more how functions
can be useful and like they get even

57
00:03:20.480 --> 00:03:23.080
more involved than this, you can start
doing some really cool stuff with them.

58
00:03:25.160 --> 00:03:30.795
No questions so far?
&gt;&gt; Brian Holt: Okay.

59
00:03:33.384 --> 00:03:34.958
&gt;&gt; Brian Holt: So let's just kinda break

60
00:03:34.958 --> 00:03:40.200
mechanics like you say function to declare
that you're making a new function.

61
00:03:40.200 --> 00:03:41.770
This is the name of
the function right here.

62
00:03:41.770 --> 00:03:43.540
So this is something that you name.

63
00:03:43.540 --> 00:03:47.650
And again, try and
give this a really descriptive name.

64
00:03:48.750 --> 00:03:51.810
So greet is a pretty good one because
you know that whatever comes back out of

65
00:03:51.810 --> 00:03:54.740
greet is going to be some
sort of greeting, right?

66
00:03:54.740 --> 00:03:57.960
Also, kind of a rule of thumb,
this is not a hard and fast rule, but

67
00:03:57.960 --> 00:04:03.230
it's kind of a useful one, generally,
function names are verbs, right?

68
00:04:03.230 --> 00:04:05.490
Because the function does something,
right?

69
00:04:05.490 --> 00:04:09.850
So greet is a verb, add to, you're
doing something to something, right?

70
00:04:09.850 --> 00:04:13.640
So a function is generally a verb where
as variable names are typically nouns

71
00:04:13.640 --> 00:04:16.010
because it represents a thing, right?

72
00:04:16.010 --> 00:04:19.990
So, first name is a thing, last name
is a thing, honorific is a thing, like.

73
00:04:19.990 --> 00:04:25.104
So generally, variables are
&gt;&gt; Brian Holt: Nouns, generally functions

74
00:04:25.104 --> 00:04:30.610
are verbs.
&gt;&gt; Brian Holt: There's

75
00:04:30.610 --> 00:04:32.325
nothing that's gonna
make you do it that way.

76
00:04:32.325 --> 00:04:38.343
It's just a useful practice to get into.
&gt;&gt; Brian Holt: Let's

77
00:04:38.343 --> 00:04:41.140
talk about how you call functions.

78
00:04:41.140 --> 00:04:45.710
So whenever you invoke a function,
whenever you're using a function

79
00:04:45.710 --> 00:04:48.740
the way that you say that is
you are calling a function.

80
00:04:48.740 --> 00:04:51.150
I don't actually really
know where that came from.

81
00:04:51.150 --> 00:04:52.850
That's just the name for it.

82
00:04:53.870 --> 00:04:56.701
Or you can say invoke, but
generally people say call.

83
00:04:56.701 --> 00:05:01.212
The way you do that is you
put parentheses after it.

84
00:05:01.212 --> 00:05:06.508
So even if this took in nothing,
&gt;&gt; Brian Holt: You

85
00:05:06.508 --> 00:05:10.944
would just do this.
&gt;&gt; Brian Holt: Let's just say

86
00:05:10.944 --> 00:05:11.579
this is five.

87
00:05:13.180 --> 00:05:16.030
So even though I am not giving
it anything, you just put

88
00:05:16.030 --> 00:05:19.940
empty parentheses at the end to signify
that you are calling the functions.

89
00:05:19.940 --> 00:05:21.980
So that's what those
parentheses at the end mean,

90
00:05:21.980 --> 00:05:24.370
it means a function is being invoked.

91
00:05:24.370 --> 00:05:26.600
Make sense?

92
00:05:28.250 --> 00:05:31.360
Okay, that will become important later,

93
00:05:31.360 --> 00:05:34.070
because you can actually pass
around functions as well.

94
00:05:34.070 --> 00:05:36.350
We'll see how that works in a bit.

95
00:05:36.350 --> 00:05:39.340
But you do need to put the parentheses
there if you intend to call it.

96
00:05:39.340 --> 00:05:44.860
If I just put add two right here,
this is not useful because

97
00:05:44.860 --> 00:05:49.630
actually what happens is now final answer
actually represents the function add two.

98
00:05:49.630 --> 00:05:52.330
It's not actually invoking the function.

99
00:05:52.330 --> 00:05:55.770
It's a little confusing that now
final answer's actually the function,

100
00:05:55.770 --> 00:05:59.700
so I can call final answer which
they'll call the function.

101
00:06:01.130 --> 00:06:05.120
Again, we'll get there, that'll make total
sense, I like, I have a section on this.

102
00:06:05.120 --> 00:06:12.645
So, make sure you put in parenthesis.
&gt;&gt; Brian Holt: Okay,

103
00:06:17.546 --> 00:06:18.785
&gt;&gt; Brian Holt: Call, that's, yeah,

104
00:06:18.785 --> 00:06:21.920
it's calling a function, and
just look out for parentheses.

105
00:06:21.920 --> 00:06:23.550
Any time you see parentheses,

106
00:06:23.550 --> 00:06:25.708
you know that functions
are being invoked somewhere.

107
00:06:25.708 --> 00:06:30.410
Like for example,
notice that console.log here, right?

108
00:06:30.410 --> 00:06:34.110
You put parentheses there
log is a function, right?

109
00:06:34.110 --> 00:06:41.870
It's a function that is being called.
&gt;&gt; Brian Holt: Okay so logout your home.

110
00:06:41.870 --> 00:06:46.100
This is another function I wrote, I put my
home city, my home state, my home country.

111
00:06:46.100 --> 00:06:46.670
Right?

112
00:06:46.670 --> 00:06:50.330
And then I call logout your home here, I
call it with my home city, my home state,

113
00:06:50.330 --> 00:06:51.450
my home country.

114
00:06:51.450 --> 00:06:53.696
Right?
And then this gets passed into log

115
00:06:53.696 --> 00:06:55.131
out your home, right?

116
00:06:55.131 --> 00:06:58.606
As city, state and country.

117
00:06:58.606 --> 00:07:01.715
I'm calling console log here.

118
00:07:01.715 --> 00:07:07.201
But I could've just as easily said

119
00:07:07.201 --> 00:07:11.936
logOutYour [SOUND] HomeWith.

120
00:07:11.936 --> 00:07:16.684
I don't know, you could have said

121
00:07:16.684 --> 00:07:21.759
like Torrino which is in Piamonte and

122
00:07:21.759 --> 00:07:26.720
Italy.
&gt;&gt; Brian Holt: You

123
00:07:26.720 --> 00:07:31.334
are from Torrino, Pimont Italy,
I guess that, Italia.

124
00:07:31.334 --> 00:07:36.874
Cuz that's [INAUDIBLE] an Italian,
&gt;&gt; Brian Holt: Right?

125
00:07:36.874 --> 00:07:39.527
So you can either pass variables
into there, that works, or

126
00:07:39.527 --> 00:07:42.990
you can put strings directly in there,
both of those things work.

127
00:07:42.990 --> 00:07:46.010
Because my home city represents a string.

128
00:07:46.010 --> 00:07:49.920
So that those things, you can put
either the representation of it or

129
00:07:49.920 --> 00:07:52.790
you can put the direct raw data in there,
both of those work.

