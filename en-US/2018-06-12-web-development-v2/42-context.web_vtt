WEBVTT

1
00:00:00.000 --> 00:00:04.282
&gt;&gt; Brian Holt: Okay, so
let's talk about context.

2
00:00:04.282 --> 00:00:08.661
You're gonna find context
has a similar feel to scope.

3
00:00:08.661 --> 00:00:11.373
They are different.

4
00:00:11.373 --> 00:00:16.059
But you apply a lot of the same thinking.

5
00:00:16.059 --> 00:00:19.129
Okay, so I have this me object.

6
00:00:20.600 --> 00:00:21.410
Has a name.

7
00:00:21.410 --> 00:00:23.280
It has a location.

8
00:00:23.280 --> 00:00:29.340
And then it has a getAddress
function associated with it.

9
00:00:29.340 --> 00:00:33.550
It'd be really nice if this
getAddress function could reference

10
00:00:33.550 --> 00:00:37.170
other pieces of data attached
to my object, right?

11
00:00:37.170 --> 00:00:38.550
That would make sense.

12
00:00:38.550 --> 00:00:42.580
Because I wanna be able to return
to a well-formatted address.

13
00:00:42.580 --> 00:00:45.289
So that's what this getAddress does,

14
00:00:45.289 --> 00:00:48.663
it does something you can
put on a posting label.

15
00:00:48.663 --> 00:00:53.819
So the way that you do that is you
use something called this, and

16
00:00:53.819 --> 00:00:59.169
this refers to whatever object it's on,
so when I use this inside

17
00:00:59.169 --> 00:01:04.360
of getAddress, it refers to me
because that's what it's on.

18
00:01:04.360 --> 00:01:10.559
If I had a function inside a location,

19
00:01:10.559 --> 00:01:15.404
I can even do getCityandState

20
00:01:15.404 --> 00:01:21.563
function.
&gt;&gt; Brian Holt: And

21
00:01:21.563 --> 00:01:27.501
I'll write return.
&gt;&gt; Brian Holt: This,

22
00:01:27.501 --> 00:01:34.531
dot, city,
&gt;&gt; Brian Holt: Comma,

23
00:01:37.678 --> 00:01:39.594
&gt;&gt; Brian Holt: This, dot,

24
00:01:39.594 --> 00:01:45.050
State,
&gt;&gt; Brian Holt: Right?

25
00:01:45.050 --> 00:01:46.380
Cuz what's this doing?

26
00:01:46.380 --> 00:01:50.525
This refers to, so this this.

27
00:01:50.525 --> 00:01:53.783
[LAUGH] This this refers to location,

28
00:01:53.783 --> 00:01:58.196
cuz that function is on
the location object here so

29
00:01:58.196 --> 00:02:04.728
it refers to not the whole object,
it refers to just the location object.

30
00:02:04.728 --> 00:02:09.639
The general rule of thumb,
which this is an imperfect rule,

31
00:02:09.639 --> 00:02:12.543
is it's the closest object right?

32
00:02:12.543 --> 00:02:18.345
Or the nearest object that it is within,
that that is what this refers to.

33
00:02:18.345 --> 00:02:23.256
Now, that's not always true
&gt;&gt; Brian Holt: I will

34
00:02:23.256 --> 00:02:28.050
invite you to take Kyle Simpson's courses.

35
00:02:28.050 --> 00:02:30.673
He explains this really well,
for Front End Masters.

36
00:02:30.673 --> 00:02:33.142
He also has a book series called
You Don't Know JavaScript and

37
00:02:33.142 --> 00:02:34.660
it goes into that really well.

38
00:02:34.660 --> 00:02:38.320
It's free on GitHub or
you can buy it from O'Riley.

39
00:02:39.650 --> 00:02:41.700
And he really gets deep into this.

40
00:02:41.700 --> 00:02:44.790
Context in JavaScript can be,
it's a deep rabbit hole.

41
00:02:44.790 --> 00:02:46.010
It's a really deep rabbit hole.

42
00:02:47.460 --> 00:02:51.050
But suffice to say,
in this particular thing,

43
00:02:51.050 --> 00:02:56.165
your intuition here is going to be
correct, that this refers to me up

44
00:02:56.165 --> 00:03:01.383
here.
&gt;&gt; Brian Holt: We follow so far?

45
00:03:01.383 --> 00:03:04.656
Okay.
&gt;&gt; Brian Holt: So

46
00:03:04.656 --> 00:03:08.658
what happens if I refer to this
outside of an object, right?

47
00:03:08.658 --> 00:03:11.624
Select right here on line one,
where I just referred to this.

48
00:03:11.624 --> 00:03:13.772
It's not inside of an object.

49
00:03:13.772 --> 00:03:19.140
Well, JavaScript executes in what's
called the global scope, right?

50
00:03:19.140 --> 00:03:22.890
If you're in a browser
the name of that is Window.

51
00:03:22.890 --> 00:03:28.020
That's just what it happens to be called,
it refers to the entire window.

52
00:03:28.020 --> 00:03:31.770
So if I like I'm in here and
I say, Window, right?

53
00:03:31.770 --> 00:03:34.630
Window is like the entire
window that I'm inside of.

54
00:03:34.630 --> 00:03:37.100
It's the global context.

55
00:03:37.100 --> 00:03:40.410
And if I do this,
notice that it's the same.

56
00:03:40.410 --> 00:03:43.692
In fact I can say this === window.

57
00:03:43.692 --> 00:03:50.330
And it's gonna say true.
&gt;&gt; Brian Holt: Okay.

58
00:03:50.330 --> 00:03:54.950
So the global context in this
particular case is window.

59
00:03:54.950 --> 00:03:58.420
We're gonna get into node at
the end of the course today.

60
00:03:58.420 --> 00:04:05.740
In a couple hours and in that case it's
not called window, it's called global.

61
00:04:05.740 --> 00:04:07.380
It depends on where you're running.

62
00:04:07.380 --> 00:04:10.540
And everything we've done so far has so
far been inside of a browser,

63
00:04:10.540 --> 00:04:13.770
so window has been the global
context this entire time.

64
00:04:15.980 --> 00:04:20.455
So Window has a bunch of stuff on it for
you.

65
00:04:20.455 --> 00:04:23.071
It has more of these, kind of,
quote, unquote built-in's.

66
00:04:23.071 --> 00:04:28.271
So, for example, it has this scroll y,
when you're scrolling up and down on

67
00:04:28.271 --> 00:04:34.450
a browser it has your scroll position and
you can actually ask the window for that.

68
00:04:34.450 --> 00:04:37.880
So, that this executes as soon
as I run the, open the page,

69
00:04:37.880 --> 00:04:40.380
so when I first open the page,
it's at zero, zero.

70
00:04:40.380 --> 00:04:44.520
If I change this right now,
it's going to rerun the code and

71
00:04:44.520 --> 00:04:47.170
this is going to be a different number,
it's gonna be how far down the page I am.

72
00:04:47.170 --> 00:04:51.890
So if I hit delete, notice that I'm
a lot further down the page now.

73
00:04:51.890 --> 00:04:57.820
Now, if I change this right now, it still
says that because I haven't scrolled any.

74
00:04:57.820 --> 00:04:59.670
If I scroll a little bit more, and

75
00:04:59.670 --> 00:05:02.240
I change it again,
it's gonna be a different number, right?

76
00:05:02.240 --> 00:05:04.070
So it's my scroll position on the page.

77
00:05:04.070 --> 00:05:06.670
That's how many pixels
I'm down on the page.

78
00:05:07.730 --> 00:05:09.940
There's also a scroll x as well,
as you might imagine.

79
00:05:11.640 --> 00:05:13.670
That's how far I've been
scrolling side to side.

80
00:05:13.670 --> 00:05:17.090
If you noticed, I actually have disallowed
you from scrolling side to side.

81
00:05:17.090 --> 00:05:19.490
So that's why it's
always going to be zero.

82
00:05:19.490 --> 00:05:23.397
But if I didn't disallow that, it would
also tell you where your scroll is on

83
00:05:23.397 --> 00:05:27.555
the x-axis as well.
&gt;&gt; Brian Holt: Make sense?

84
00:05:27.555 --> 00:05:29.730
So there's a bunch of stuff like this.

85
00:05:29.730 --> 00:05:34.290
If you come in here again,
if you say window.,

86
00:05:34.290 --> 00:05:38.622
you can see here it's got
a ton of stuff on it,

87
00:05:38.622 --> 00:05:41.536
a ton.
&gt;&gt; Brian Holt: Okay,

88
00:05:41.536 --> 00:05:45.390
I don't even know what
a fifth of those are.

89
00:05:45.390 --> 00:05:52.826
So you don't have to know what they are.
&gt;&gt; Brian Holt: Yeah,

90
00:05:52.826 --> 00:05:59.886
I give you a link down here to Kyle's,
&gt;&gt; Brian Holt: Kyle's course on,

91
00:05:59.886 --> 00:06:01.500
I didn't I need to go fix that.

92
00:06:01.500 --> 00:06:04.050
I will put a link to
Kyle's course on here but

93
00:06:04.050 --> 00:06:06.310
you can also just check
out Front End Masters.

94
00:06:06.310 --> 00:06:10.120
They got a bunch of stuff from Kyle
Simpson and he is the king of teaching

95
00:06:10.120 --> 00:06:15.528
this stuff.
&gt;&gt; Brian Holt: Questions

96
00:06:15.528 --> 00:06:18.870
about objects, or context?

97
00:06:18.870 --> 00:06:20.850
That's what we were talking about [LAUGH].

98
00:06:20.850 --> 00:06:23.450
Or objects you can have some with
objects I'm okay with that too.

99
00:06:26.730 --> 00:06:28.517
&gt;&gt; Brian Holt: Context is hard and

100
00:06:28.517 --> 00:06:33.320
it gets harder because when
context breaks down and

101
00:06:33.320 --> 00:06:38.550
it's really not obvious.
&gt;&gt; Brian Holt: So

102
00:06:38.550 --> 00:06:43.469
the deeper rule of thumb,
is it matters where a function's called.

103
00:06:45.400 --> 00:06:48.460
And in what context a function is called,
and

104
00:06:48.460 --> 00:06:52.600
how a function is called, so there's
a bunch of ways you can fiddle with

105
00:06:55.190 --> 00:06:58.330
context, and it's subtle and insidious.

106
00:06:58.330 --> 00:07:03.950
And so my advice to you is as much
as possible, do not rely on this and

107
00:07:03.950 --> 00:07:09.520
in context, rather pass those
things in as variables, right?

108
00:07:09.520 --> 00:07:14.500
So, what I could have done here for this
getAddress, I could have made getAddress

109
00:07:14.500 --> 00:07:20.050
a function that you passed in an object to
that read things off of the object, right?

110
00:07:20.050 --> 00:07:22.712
So I would've pulled getAddress
off totally as it's own

111
00:07:22.712 --> 00:07:27.505
function.
&gt;&gt; Brian Holt: That took in some

112
00:07:27.505 --> 00:07:30.015
sort of person, right?

113
00:07:30.015 --> 00:07:32.336
And then it returned this for that person.

114
00:07:32.336 --> 00:07:37.500
Thus we have a far better design
pattern than putting a getAddress

115
00:07:37.500 --> 00:07:42.945
function on the person, personal opinion,
but also, it's right, so just do that.

116
00:07:42.945 --> 00:07:44.560
[LAUGH] Just kidding.

117
00:07:44.560 --> 00:07:47.629
[LAUGH] Cool, that make sense?

118
00:07:48.790 --> 00:07:50.970
It's just a better
programming practice for

119
00:07:50.970 --> 00:07:54.660
JavaScript because this is
really easy to mess up.

