WEBVTT

1
00:00:00.060 --> 00:00:03.980
&gt;&gt; Brian Holt: Okay, so
let's talk about context.

2
00:00:03.980 --> 00:00:08.540
You're gonna find context
has a similar feel to scope.

3
00:00:08.540 --> 00:00:11.371
They are different.

4
00:00:11.371 --> 00:00:14.360
But you apply a lot of the same thinking.

5
00:00:16.290 --> 00:00:19.100
Okay, so I have this me object.

6
00:00:20.200 --> 00:00:21.410
It has a name.

7
00:00:21.410 --> 00:00:23.280
It has a location.

8
00:00:23.280 --> 00:00:29.210
And then it has a getAddress
function associated with it.

9
00:00:29.210 --> 00:00:33.550
It would be really nice if this
getAddress function could reference

10
00:00:33.550 --> 00:00:37.170
other pieces of data attached
to my object, right?

11
00:00:37.170 --> 00:00:38.550
That would make sense.

12
00:00:38.550 --> 00:00:42.580
Because I wanna be able to return
to a well-formatted address.

13
00:00:42.580 --> 00:00:44.260
So that's what this getAddress does,

14
00:00:44.260 --> 00:00:46.780
it does something you
could put on a post label.

15
00:00:48.620 --> 00:00:52.620
So the way that you do that is
you use something called this.

16
00:00:53.780 --> 00:00:56.940
And this refers to
whatever object it's on.

17
00:00:56.940 --> 00:01:02.380
So when I use this inside of getAddress,
it refers to me, right?

18
00:01:02.380 --> 00:01:03.190
Because that's what it's on.

19
00:01:04.450 --> 00:01:09.798
If I had a function inside a location.
&gt;&gt; Brian Holt: I could

20
00:01:09.798 --> 00:01:16.908
even do like I don't know
getCityAndState function

21
00:01:21.371 --> 00:01:26.812
&gt;&gt; Brian Holt: And that would

22
00:01:26.812 --> 00:01:34.975
return this.city,

23
00:01:34.975 --> 00:01:44.050
this.state, right?

24
00:01:45.050 --> 00:01:50.565
Cuz what's this doing,
this refers to, so this this.

25
00:01:50.565 --> 00:01:55.560
[LAUGH] This this refers to
location cuz that function

26
00:01:55.560 --> 00:01:59.400
is on the location object here, so
it refers to not the whole object,

27
00:01:59.400 --> 00:02:02.980
it refers to just the location object.

28
00:02:04.870 --> 00:02:08.260
The general rule of thumb, which,

29
00:02:08.260 --> 00:02:12.350
this is an imperfect rule,
is it's the closest object, right?

30
00:02:12.350 --> 00:02:16.810
Or like the nearest object that it's
within, that that's what this refers to.

31
00:02:18.440 --> 00:02:23.297
Now, that's not always true.

32
00:02:23.297 --> 00:02:28.050
And I would invite you to
take Kyle Simpson's courses.

33
00:02:28.050 --> 00:02:30.750
He explains this really well for
Frontend Masters.

34
00:02:30.750 --> 00:02:33.390
He also has a book series called
You Don't Know JavaScript, and

35
00:02:33.390 --> 00:02:34.660
it goes into that really well.

36
00:02:34.660 --> 00:02:36.920
It's free on GitHub.

37
00:02:36.920 --> 00:02:38.320
Or you can buy it from O'Reilly.

38
00:02:39.650 --> 00:02:41.700
And he really gets deep into this.

39
00:02:41.700 --> 00:02:44.790
Context in JavaScript,
it's a deep rabbit hole.

40
00:02:44.790 --> 00:02:46.010
It's a really deep rabbit hole.

41
00:02:47.460 --> 00:02:51.045
But suffice to say,
in this particular thing,

42
00:02:51.045 --> 00:02:54.360
your intuition here is
going to be correct,

43
00:02:54.360 --> 00:02:59.550
that this refers to me up here.
&gt;&gt; Brian Holt: Do we follow so far?

44
00:03:01.530 --> 00:03:02.030
Okay.

45
00:03:05.070 --> 00:03:08.880
So what happens if I refer to
this outside of an object?

46
00:03:08.880 --> 00:03:11.710
Like right here, on line 1,
where I just refer to this,

47
00:03:11.710 --> 00:03:13.000
it's not inside of an object.

48
00:03:14.380 --> 00:03:19.140
Well, JavaScript executes in what's
called a global scope, right?

49
00:03:19.140 --> 00:03:22.610
If you're in a browser,
the name of that is window.

50
00:03:22.610 --> 00:03:28.020
That's just what it happens to be called,
it refers to the entire window.

51
00:03:28.020 --> 00:03:31.116
So if I like, I'm in here and
I say window, right,

52
00:03:31.116 --> 00:03:34.630
window is like the entire
window that I'm inside of.

53
00:03:34.630 --> 00:03:40.410
It's the global context, and
if I do this, notice that it's the same.

54
00:03:40.410 --> 00:03:44.715
In fact I can say this === window,
and it's gonna say

55
00:03:44.715 --> 00:03:50.330
true.
&gt;&gt; Brian Holt: Okay?

56
00:03:50.330 --> 00:03:54.950
So the global context in this
particular case is window.

57
00:03:54.950 --> 00:04:00.240
We're gonna get into Node at the end of
the course today, in a couple of hours.

58
00:04:00.240 --> 00:04:05.397
And in that case, it's not called window,
it's called global.

59
00:04:05.397 --> 00:04:07.380
But it depends on where you're running.

60
00:04:07.380 --> 00:04:10.540
And everything we've done so far has so
far been inside of a browser.

61
00:04:10.540 --> 00:04:13.770
So window has been the global
context this entire time.

62
00:04:15.980 --> 00:04:20.540
So window has like a bunch of stuff for
you.

63
00:04:20.540 --> 00:04:23.620
It has more of these kind
of quote unquote built-ins.

64
00:04:23.620 --> 00:04:25.710
So for example, it has like this scrollY.

65
00:04:25.710 --> 00:04:29.600
When you're scrolling up and
down on a browser,

66
00:04:29.600 --> 00:04:34.450
it has your scroll position and
you can actually ask the window for that.

67
00:04:34.450 --> 00:04:37.880
So, this executes as
soon as I open the page,

68
00:04:37.880 --> 00:04:40.380
so when I first open the page it's at 0,
0.

69
00:04:40.380 --> 00:04:44.350
If I change this right now,
it's going to rerun the code,

70
00:04:44.350 --> 00:04:45.630
and this is gonna be a different number.

71
00:04:45.630 --> 00:04:47.290
It's gonna be how far down the page I am,
so

72
00:04:47.290 --> 00:04:51.890
if I hit Delete, notice that I'm
a lot further down the page now.

73
00:04:51.890 --> 00:04:58.000
Now, if I change this right now, it still
says that because I haven't scrolled any.

74
00:04:58.000 --> 00:05:00.129
If I scroll a little bit more and
I change it again,

75
00:05:00.129 --> 00:05:02.210
it's gonna be a different number, right?

76
00:05:02.210 --> 00:05:04.070
So that's my scroll position on the page.

77
00:05:04.070 --> 00:05:06.670
That's how many pixels
I'm down on the page.

78
00:05:07.730 --> 00:05:10.930
There's also a scrollX as well,
as you might imagine.

79
00:05:10.930 --> 00:05:13.670
And that's how far I've been
scrolling side to side.

80
00:05:13.670 --> 00:05:17.190
If you notice, I actually have disallows
you from scrolling side to side, so

81
00:05:17.190 --> 00:05:18.636
that's why it's always going to be 0.

82
00:05:18.636 --> 00:05:23.499
But, if I didn't disallow that it
would also tell you where you're

83
00:05:23.499 --> 00:05:26.080
scroll is on the x-axis, as well.

84
00:05:26.080 --> 00:05:26.650
Make sense?

85
00:05:27.890 --> 00:05:31.070
So, there is a bunch of stuff like this,

86
00:05:31.070 --> 00:05:36.217
if you come in here again,
if you say window., you can see here,

87
00:05:36.217 --> 00:05:41.310
it's got a ton of stuff on it, a ton.
&gt;&gt; Brian Holt: Okay?

88
00:05:42.740 --> 00:05:45.390
I don't even know what
a fifth of those are.

89
00:05:45.390 --> 00:05:52.866
So you don't have to know what they are.
&gt;&gt; Brian Holt: Yeah,

90
00:05:52.866 --> 00:05:59.730
I gave you a link down here to Kyle's,
&gt;&gt; Brian Holt: House course on it.

91
00:05:59.730 --> 00:06:00.640
I didn't.

92
00:06:00.640 --> 00:06:01.500
I need to go fix that.

93
00:06:01.500 --> 00:06:05.038
I will put a link to Kyle's course on
here, but you can also just check out

94
00:06:05.038 --> 00:06:08.403
Frontend Masters, they've got
a bunch of stuff from Kyle Simpson.

95
00:06:08.403 --> 00:06:10.410
And he is the king of teaching this stuff.

96
00:06:14.440 --> 00:06:20.810
Questions about objects, or context,
that's what we were talking about.

97
00:06:20.810 --> 00:06:22.323
Or objects, you can ask about objects,

98
00:06:22.323 --> 00:06:28.100
I'm okay with that too.
&gt;&gt; Brian Holt: Context is hard,

99
00:06:28.100 --> 00:06:34.290
and it gets harder because,
&gt;&gt; Brian Holt: When context breaks down,

100
00:06:34.290 --> 00:06:38.616
and it's really not obvious.
&gt;&gt; Brian Holt: So

101
00:06:38.616 --> 00:06:43.469
the deeper rule of thumb is it
matters where a function's called.

102
00:06:45.400 --> 00:06:50.500
And in what context a function is
called and how a function is called.

103
00:06:50.500 --> 00:06:56.430
So there's a bunch of ways
you can fiddle with context,

104
00:06:56.430 --> 00:06:58.330
and it's subtle and insidious.

105
00:06:58.330 --> 00:07:03.950
And so my advice to you is as much
as possible do not rely on this and

106
00:07:03.950 --> 00:07:05.080
in context.

107
00:07:05.080 --> 00:07:09.520
Rather, pass those things in as variables,
right.

108
00:07:09.520 --> 00:07:14.500
So what I could have done here for this
getAddress, I could have made getAddress

109
00:07:14.500 --> 00:07:20.050
a function that you passed in an object to
that read things off of the object, right?

110
00:07:20.050 --> 00:07:22.718
So I would have pulled getAddress
totally off as its own

111
00:07:22.718 --> 00:07:27.516
function.
&gt;&gt; Brian Holt: That took him some

112
00:07:27.516 --> 00:07:30.000
sort of person, right?

113
00:07:30.000 --> 00:07:32.790
And then, it returned this for
that person, right?

114
00:07:32.790 --> 00:07:37.500
This would be a far better design
pattern than putting a getAddress

115
00:07:37.500 --> 00:07:39.870
function on the person.

116
00:07:39.870 --> 00:07:43.206
Personal opinion, but also,
it's right, so just do that.

117
00:07:43.206 --> 00:07:44.512
[LAUGH] Just kidding.

118
00:07:44.512 --> 00:07:46.800
[LAUGH] Cool.

119
00:07:46.800 --> 00:07:47.629
Does that make sense?

120
00:07:48.790 --> 00:07:51.702
It's just a better
programming practice for

121
00:07:51.702 --> 00:07:55.005
JavaScript because this is
really easy to mess up.

