[00:00:00]
>> Brian Holt: Overview of what you'll be learning in this course.
>> Brian Holt: A large part of what you're gonna be learning today is just terminology. And I'm trying to like strip away like the ones that you don't need. There's some in here, like monads and functors. And I know someone online is gonna be super pissed off that I'm making fun of functional programming, but I don't care [LAUGH].

[00:00:22]
I'm sure I've already pissed him off before. There's stuff like that you can just ignore, it's just high and mighty computer science terminology that actually is not gonna serve you too much in your day to day. What I'm trying to distill this down into is words that you need today to be able to search for the answers that you need.

[00:00:40]
So that's why you're gonna need to know things like HTML tags, and functions, and scope, because that actually is gonna serve you really well when you're trying to solve a problem. And that's a big problem with computer science in general, is people wanna use like the most technically accurate term.

[00:00:58]
There's a framework called Angular, that's quite well-known for this, that they use things like transclusion which is like, yes, that perfectly describes what they're doing. But most people don't actually understand what that means, which means it's worthless to me. So, I'm trying to not use terms like that, and I'm trying to give you the best terms to be able to solve your problems.

[00:01:20]
But again, if I use a term that you don't understand, I guarantee you that someone else doesn't understand, and so you should definitely stop me and ask about it.
>> Brian Holt: So, let's see a good Litmus test, if you should understand the term, like if you should spend the time.

[00:01:38]
If you repeatedly hear it in whatever you're doing, you should probably look it up. But if you see a term that you don't understand, at least the first or second time, you can probably just ignore it and move on. At least that's how I handle it.
>> Brian Holt: Something else, you're gonna have to learn three languages today.

[00:01:58]
Which is cool, I think [LAUGH]. It's like going into your language class. It's like, by the way, you're gonna learn Japanese, German and Italian today. So, buckle up [LAUGH]. Hopefully, it's a little bit easier than that. But we're gonna learn HTML, CSS, and JavaScript. Luckily, two of those are kind of considered, they're not programming languages because they don't actually execute, they don't run.

[00:02:26]
You can think of them more like English, that they're declarative in the sense that you kinda state what you mean. And it's like English, right? You can't run English, you just say English, right? And that's what HTML and CSS are, they're not run languages, they are just, you're stating something, and then a computer later is interpreting what you stated, right?

[00:02:48]
Whereas JavaScript is actually a full-fledged programming language that you run, you run JavaScript, right? If that doesn't make total sense right now, well, let me kinda get into those. Hopefully, that will make a bit more sense, but just know that HTML and CSS are declared languages, where you're just stating something.

[00:03:07]
Whereas, JavaScript, you're telling the computer to do something.
>> Brian Holt: Yeah, and then we'll also go over the command line, and how to use git. And we'll talk about that when we get there, that will definitely be tomorrow. So,
>> Brian Holt: Make sure I cover everything I wanted to talk about.

[00:03:32]

>> Brian Holt: So I wanna make an analogy, and I'm gonna reference this analogy a lot during this course. And that's the analogy of building a house. If you're thinking that your website is a house, right? Then we can kind of use HTML, CSS and JavaScript to kind of describe the various parts of it.

[00:03:53]
So you can think of HTML as like the raw building materials, the drive walls, it's the two by four, it's the frame of the house, right? In of itself, if I just like take a bunch of lumber to like a lot and just leave it there, it's not a very good house.

[00:04:10]
Despite the fact that you have everything to make a house, you need to make the house, right? You can't just leave the building materials there, and expect it to be like a website. So that's kind of what HTML is, it's all the raw building materials. And then you're gonna use CSS and JavaScript to kind of put the house together.

[00:04:29]
So think of HTML as the raw building materials. You can think of CSS more as like blueprints for the house. It's a bunch of rules that you use to describe where you want things to go, right? So I want this two by four to go on the south wall, I want this one to go on the north wall, I want you know these ones to go on like the roof and things like that.

[00:04:48]
So, it's a bunch of rules that describe what you want the house to be organized as, and like what we want the colors to be, and those sorts of things. So the CSS is the blueprints of the house, it's where everything's laid out, it's where everything goes.
>> Brian Holt: It's both the layout and the style, so it's like what wallpaper is gonna go on the walls.

[00:05:11]
It's gonna be those sorts of things, so it's the stylist presentation of your website is what CSS does.
>> Brian Holt: And then lastly, so you have the whole house together. You can actually just stop there with HTML and CSS. If your website doesn't have any really interaction with it.

[00:05:32]
If you're just making a website to describe like events happening, like your local communities center. There's not really much interaction with that, it's basically like a flyer that ou put online [LAUGH], right? Or PDF, right? That you've just put on the internet. You can't stop there, like HTML CSS is enough to make just that.

[00:05:54]
However, if you want anything to be interactive with your website, you need JavaScript. That's the programming language of the web. And that would kind of make the analogy of that to be like a smart house, right? Like what if you wanted to drive your car into your driveway, have the garage door open, and the thermostat turn on, and it makes you a cup of coffee.

[00:06:14]
I don't know, something like that, all right? You would make like a bunch of like programmatic things, like if this happens, then do this, and do this, and do this, right? Like once I do this thing, a bunch of other things should happen, right? That's kind of like the smart house mentality.

[00:06:31]
And that's kind of what JavaScript does for you. You kind of making your website reactive, right? So if the users clicks this button, then send this request over here, and show them this dialog, and gather this information for them, and show them this image, right? So it's kind of all these kind of interactions that are happening.

[00:06:51]
And that's what JavaScript is gonna buy for you.
>> Brian Holt: Yeah.
>> Brian Holt: So, yes, you can make a website with zero JavaScript. However, most sites on the web now, almost everything is using JavaScript. So,
>> Brian Holt: You don't have to necessarily have to have a smart home, right? But these days, it's almost everything does have JavaScript on them.

[00:07:20]
So, it is more common than being a smart home. Lastly, we're gonna talk a little bit about servers at the end. We're gonna work with something called, Node JS, which is a server side programming using JavaScript. So, some of you might've heard of things like Python, or Ruby, or Java, or Go, or CSharp.

[00:07:43]
These are languages that you're going to write on the server. We're not gonna learn any of those things. One, cuz you definitely don't want to learn those things from me [LAUGH]. And two, this is for the masters, so we're gonna work with JavaScript. And the nice thing about working with Node, is Node is still JavaScript.

[00:07:59]
So we're going to be running JavaScript inside of your browser, which is like the client side code. That's the smart home kind of stuff. And then we're also going to be running it on the server. And you can think of the server like the pizza place in your neighborhood.

[00:08:12]
So you have a bunch of different houses, right, a bunch of different people that are browsing your website, all calling into the one pizza place, right? So one server serves multiple clients, or multiple browsers, and phones, and things like that, right? And you think with like when you want a pizza, you pick up your phone.

[00:08:33]
You call them, you ask for something, and then they send you something, right? That's kind of the request response cycle of what it's like to order, to interact with the server. So, that's kind of what the pizza place is. So to recap here, I just wrote it down.

[00:08:52]
If you were missing some of that, HTML is the structure. It's gonna contain all the text, the images, kinda just like the raw content, right? Mostly it's gonna be text, text and structuring. The CSS the blueprint, this is gonna be where everything goes, what color it is, what size it is, what font it is, what the decorative images are.

[00:09:19]
And like HTML CSS doesn't do anything in of itself, right? You're not going to be executing anything with CSS, you're just going to be describing what you want. Then the front-end JavaScript, which is the JavaScript that run inside of the browser. It's the smart home stuff. That's gonna be, if they click this, then show them this dialog, or show them this image.

[00:09:43]
Or if they scroll down far enough in their Instagram feed, that we're gonna load more images at the bottom, that's going to be the kind of stuff that JavaScript is going to do for you and the client. And then the backend code, which is the pizza place, that's going to be, someone's going to request more images to show someone in their Instagram feed.

[00:10:03]
So, the pizza place is gonna go in, it's gonna find everything that the user asked for, and then it's going to give that back to them. So that's gonna be reading from databases, it's going to be doing service like calculations. Like anything that you would need to centralize into your server, that's gonna go into that.

[00:10:22]
When in one service, it's gonna serve many clients just like one pizza place serves many household.
>> Brian Holt: Any questions about that?
>> Brian Holt: Yes, please.
>> Speaker 2: Still don't understand why haven't we taken HTML and CSS, even though they were created at different times. Why don't we meld them both in the JavaScript, and then just use JavaScript for everything?

[00:10:48]

>> Brian Holt: That's a good question. Why don't we just use JavaScript for anything. That's a lively debate that we could have. So, there are people doing that, actually. In fact, one of my other courses, which is Complete Intro to React, React more or less achieves that. It uses JavaScript to generate HTML, which is something very common to do, especially with a modern day kind of infrastructure.

[00:11:14]
But, right now, it's actually really important for you to understand the primitives that it generates, so the HTML that it does generate. It's gonna make you a better programmer. But eventually, I'm not gonna say it's better, but there are people doing it. I don't know if I have a better answer than that.

[00:11:36]
Okay, [LAUGH] it's a good question. Anyone else?
>> Brian Holt: Cool. So a note about this course's website. If you see a code sample like this, say it's on a yellow background. That's probably hard to see, but I promise you that it is the light yellow background there. This code is not editable, but if you see something like these.

[00:12:04]
This code is editable, editable, that's hard to say. So if I put,
>> Brian Holt: This is super cool, you'll see it actually being used down here. So I really hope that as you're following along.
>> Brian Holt: That you are messing with these, that you're breaking them, that you're unbreaking them, and like discovering and like playing with it.

[00:12:34]
Cuz I think that's gonna really help instruct you. And help you understand that if I make this an H5 instead of H2, H1, it makes look different, and things like that.
>> Brian Holt: So, I spent a bunch of time making this work, so you better use it [LAUGH]. That's the song of my story.

[00:13:02]

>> Brian Holt: The one thing that I will say, is that if you break, if you write something that breaks in here, and it breaks really badly, you might actually crash the webpage. So just refresh the page. So that is something that you can do. And if you do refresh the page, it's going to reset everything back to the way it was.

[00:13:19]
So if you find some code that you're really happy with and you wanna keep, you should just copy and paste it into a separate file that you're keeping. So, that would be a good idea, as well.
>> Brian Holt: Any questions about that?
>> Brian Holt: Cool.
>> Speaker 3: So earlier when you said the lighter color, we cannot edit it, is that because of the value of the color?

[00:13:50]
Or is that the background that make it, you couldn't edit it?
>> Brian Holt: So that's a good question. I made it look different, so that you can tell that you can't edit it. And I did it on purpose, because some of these things, if you edit them, you will definitely crash the webpage [LAUGH].

[00:14:07]
So it's to protect you from yourself, or protect you from me, I think is probably more accurate [LAUGH]. So there's no necessarily technical reason. It was a reason that I chose to make it not editable. Does that answer your question?
>> Speaker 3: Yeah.
>> Brian Holt: Cool, anyone else?
>> Speaker 4: Someone was asking inside that what is that code that you're just editing.

[00:14:35]

>> Brian Holt: You're about to find out. Good question, what is that? I will tell you, very soon.
>> Brian Holt: And like I'm being cheeky by saying it that way but, there's a very deliberate order that these things kind of build together. And so, if we go into many diatraps too early, wouldn't get off track and there is a lot of content.

[00:14:56]
Just so you know, it's insane to try and learn web development in two days. it is just a ton of content, right? So you're gonna kinda have the fire hose pointed at you and, sorry not sorry, a little bit, right [LAUGH]. Allows us to expose these things to you, so you kind of like understand the things that you don't understand.

[00:15:19]
And this is kind of a theory that I have a little bit. You have what you don't know, that you don't know, and you can't Google or you can't talk about things that you don't know that you don't know about, right? But as soon as things enter into this realm, like, I know that these things exist.

[00:15:36]
And so when I go to try and use that was like, I don't know how to use it right now but, I know how to Google it [LAUGH]. And I think that's really important. So that's kind of like a big point of this just to introduce you to these things.

[00:15:47]
I don't expect you to walk away, understanding all these things are 100%. What I expect you to be able to do is that you would be able to, if you needed to do that, right? So I'm exposing you to these concepts, so that you can learn them more deeply, as necessary.

[00:16:03]
And hopefully, that makes some sense.
>> Brian Holt: So if I kind of like say, I'm not gonna answer that right now, that's the reason why I'm doing it. It's so that I can come back later in the course, and teach you some of these things. The other thing is that a lot of these, I'm covering this broad range of topics.

[00:16:21]
And what's nice about frontend masters is they have a lot of like depth into each one of these. So for example, we're gonna just like scratch the surface of Git, but if you wanna like deep dive into Git there is an advance Git course on here by Nina Zakharenko, that is really good.

[00:16:37]
So you can check that out later.

