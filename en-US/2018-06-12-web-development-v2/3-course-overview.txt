[00:00:00]
>> Brian Holt: Overview of what you'll be learning in this course.
>> Brian Holt: A large part of what you're gonna be learning today is just terminology. And I'm trying to strip away the ones that you don't need. There's some in here like monads and functors. And I know someone online is gonna be super pissed off that I'm making fun of functional programming, but I don't care.

[00:00:22]
I'm sure I've already pissed them off before. There's stuff like that you can just ignore. It's just high and mighty computer science terminology that actually is not gonna serve you too much in your day to day. What I'm trying to distill this down to is words that you need today to be able to search for the answers that you need.

[00:00:40]
So that's why you're gonna need to know things like HTML tags, and functions and scope. Because that actually is gonna serve you really well when you're trying to solve a problem. And that's a big problem with computer science in general is people wanna use the most technically accurate term.

[00:00:58]
There's a framework called Angular that's quite well known for this that they use things like transclusion, which is like, yes, that perfectly describes what they're doing. But most people don't actually understand what that means, which means it's worthless to me. So I'm trying to not use terms like that, and I'm trying to give you the best terms to be able to solve your problems.

[00:01:20]
But again, if I use a term that you don't understand, I guarantee you that someone else doesn't understand. And so you should definitely stop me and ask about it.
>> Brian Holt: So let's see, a good litmus test of if you should understand the term, like if you should spend the time.

[00:01:38]
If you repeatedly hear it in whatever you're doing, you should probably look it up. But if you see a term that you don't understand, at least the first or second time, you can probably just ignore and move on. At least, that's how I handle it.
>> Brian Holt: Something else, you're gonna have to learn three languages today, which is cool, I think.

[00:02:00]
[LAUGH] It's like going into your language class, it's like, by the way, you're gonna learn Japanese, German and Italian today, so buckle up. [LAUGH] Hopefully it's a little easier than that, but we're gonna learn HTML, CSS and JavaScript. Luckily, two of those are kind of considered, they're not programming languages.

[00:02:22]
Because they don't actually execute, they don't run. You can think of them more like English, that they're declarative in the sense that you kinda state what you mean. And it's like English, right, you can't run English, you just say English, right? And that's what HTML and CSS are, they're not run languages.

[00:02:43]
You're stating something, and then a computer later is interpreting what you stated, right? Whereas JavaScript is actually a full-fledged programming language that you run. You run JavaScript, right? If that doesn't make total sense right now, when we kinda get into those, hopefully that'll make a bit more sense.

[00:03:00]
But just know that HTML and CSS are declared languages where you're just stating something, whereas JavaScript you're telling the computer to do something. Okay, and then we'll also go over the command line and how to use Git. And we'll talk about that when we get there, that'll definitely be tomorrow.

[00:03:23]
So,
>> Brian Holt: Make sure I covered everything I wanted to talk about.
>> Brian Holt: So I wanna make an analogy. And I'm gonna reference this analogy a lot during this course. And that's the analogy of building a house.
>> Brian Holt: If you're thinking about your website is a house, then we can kind of use HTML, CSS and JavaScript to kind of describe the various parts of it.

[00:03:53]
So you can think of HTML as the raw building material. It's the drywall, it's the 2x4s, it's the frame of the house, right? In and of itself, if I just take a bunch of lumber to a lot, then just leave it there, it's not a very good house.

[00:04:10]
Despite the fact that you have everything to make a house, you need to make the house. You can't just leave the building materials there and expect it to be a website. So that's kinda what HTML is. It's all the raw building materials, and then you're gonna use CSS and JavaScript to kind of put the house together.

[00:04:29]
So think of HTML as the raw building materials. You can think of CSS more as like blueprints for the house. It's a bunch of rules that you use to describe where you want things to go, right? So I want this 2x4 to go on the south wall, I want this one to go on the north wall.

[00:04:45]
I want these ones to go on the roof and things like that. It's a bunch of rules that describe what you want the house to be organized as, and what you want the colors to be and those sorts of things. So the CSS is the blueprints of the house.

[00:05:01]
It's where everything's laid out, it's where everything goes.
>> Brian Holt: It's both the layout and the style, so it's like what wallpaper is gonna go on the walls. It's gonna be those sorts of things, so it's the stylistic presentation of your website is what CSS does.
>> Brian Holt: And then lastly, so you have the whole house together.

[00:05:26]
You can actually just stop there with HTML and CSS. If your website doesn't have any really interaction with it, like if you're just like making like a website that describes events happening at your local community center. There's not really much interaction with that. It's basically like a flyer that you've put online, or a PDF that you've just put up on the internet.

[00:05:49]
You can stop there, HTML and CSS is enough to make just that. However, if you want anything to be interactive with your website, you need JavaScript. That's the porgramming language of the web. And I will kind of make the analogy of that to being like a smart house, right?

[00:06:06]
What if you wanted to drive your car into your driveway, have the garage door open and the thermostat turn on. And it makes you a cup of coffee, I don't know, something like that. You would make a bunch of programmatic things, like if this happens then do this, and do this, and do this, right?

[00:06:23]
Once I do this thing, a bunch of other things should happen, right? That's kinda like the smart house mentality. And that's kinda what JavaScript does for you. You're kind of making your website reactive, right? So if the user clicks this button, then send this request over here, and show him this dialogue.

[00:06:43]
And gather this information from them and show them this image, right. So it's kind of all these kind of interactions that are happening. And that's what JavaScript is gonna buy for you.
>> Brian Holt: Yeah.
>> Brian Holt: So, yes, you can make a website with zero JavaScript. However, most sites on the web now, almost everything is using JavaScript.

[00:07:10]
So you don't necessarily have to have a smart home, right? But these days, almost everything does have JavaScript on it. So it is more common than being a smart home. Lastly, we're gonna talk a little bit about servers at the end. We're gonna work with something called Node.js, which is a server side programming using JavaScript.

[00:07:38]
So, some of you might have heard of things like Python, or Ruby, or Java, or Go or C#. These are languages that you are going to write on the server. We're not gonna learn any of those things, one, cuz you definitely don't wanna learn those things from me.

[00:07:51]
And two, this is Frontend Masters, so we're gonna work with JavaScript. And the nice thing about working with Node is Node is still JavaScript. So we're going to be running JavaScript inside of your browser, which is the client-side code. That's the smart home kind of stuff. And then we're also going to be running it on the server.

[00:08:08]
And you can think of the server like the pizza place in your neighborhood. So you have a bunch of different houses, a bunch of different people that are browsing your website all calling into the one pizza place, right. So one server serves multiple clients or multiple browsers and phones, and things like that, right?

[00:08:28]
And then you think when you want a pizza, you pick up your phone. You call them, you ask for something, and then they send you something, right? That's kind of the request response cycle of what it's like to interact with a server. So that's kinda what the pizza place is.

[00:08:50]
So to recap here, I just wrote it down if you missed some of that. HTML is the structure, it's going to contain all the text, the images, kinda just the raw content, right. Mostly it's gonna be text, text and structuring. The CSS is the blueprint, this is gonna be where everything goes, what color it is, what size it is, what font it is, what the decorative background images are.

[00:09:19]
And like HTML, CSS doesn't do anything itself, right? You're not going to be executing anything with CSS, you're just going to be describing what you want. Then the front-end JavaScript, which is the JavaScript that's run inside of the browser. It's the smart home stuff, that's gonna be if they click this, then show them this dialogue, or download this image.

[00:09:43]
Or if they scroll down far enough in their Instagram feed that we're gonna load more images at the bottom. That's gonna be the kinda stuff that JavaScript is gonna do for you on the client. And then the back-end code, which is the pizza place, someone's going to request more images to show someone in their Instagram feed.

[00:10:03]
So the pizza place is gonna go in, it's gonna find everything that the user asks for, and then it's going to give that back to them. So that's gonna be, reading from databases, it's going to be doing server-side calculations. Anything that you would need to centralize into your server, that's gonna go into that.

[00:10:22]
And one server is going to serve many clients just like one pizza place serves many households. Any questions about that?
>> Brian Holt: Yes, please.
>> Speaker 2: So I don't understand, why haven't we taken HTML and CSS, even though they're created at different times? Why don't we meld them both in the JavaScript, and then just use JavaScript for everything?

[00:10:47]

>> Brian Holt: That's a good question, why don't we just use JavaScript for anything? It's a lively debate that we could have. So there are people doing that, actually. In fact, one of my other courses, which is Complete Intro to React, React more or less achieves that. It uses JavaScript to generate HTML, which is something very common to do, especially with a modern day kind of infrastructure.

[00:11:14]
But right now, it's actually really important for you to understand the primitives that it generates, so the HTML that it does generate. It's gonna make you a better programmer. But eventually, I'm not gonna say it's better, but there are people doing it.
>> Brian Holt: I don't know if I have a better answer than that.

[00:11:34]
Okay, [LAUGH] that's a good question. Anyone else?
>> Brian Holt: Cool.
>> Brian Holt: So, a note about this course's website. If you see a code sample like this, and it's on a yellow background, that's kind of probably hard to see. But I promise you that is kind of a light yellow background there.

[00:11:59]
This code is not editable, but if you see something like this, this code is editable, editable, it's hard to say. So if I put This is super cool, you'll see it actually being used down here.
>> Brian Holt: So I really hope that as you're following along,
>> Brian Holt: That you are messing with these, that you're breaking them, that you're unbreaking them and discovering and playing with it.

[00:12:33]
Cuz I think that's gonna really help instruct you. And help you understand that if I make this an h5 instead of an h1, it makes it look different, and things like that.
>> Brian Holt: So I spent a bunch of time making this work, so you better use it. [LAUGH] That's the sum of my story.

[00:13:02]

>> Brian Holt: The one thing that I will say is that if you write something that breaks in here, and it breaks really badly, it might actually crash the web page. So just refresh the page, so that is something that you can do. And if you do reresh the page, it's going to reset everything back to the way it was.

[00:13:20]
So if you find some code that you're really happy with and you wanna keep, you should just copy and paste it into a separate file that you're keeping. So that would be a good idea as well.
>> Brian Holt: Any questions about that?
>> Brian Holt: Cool.
>> Speaker 2: So earlier when you said the lighter color we cannot edit it, is it because of the lighter of the color, or is it the background that make it you can't edit it?

[00:13:53]

>> Brian Holt: So, that's a good question. I made it look different, so that you can tell that you can't edit it. And I did it on purpose, because some of these things if you edit them, you will definitely crash the web page. [LAUGH] So, it's to protect you from yourself, or protect you from me.

[00:14:10]
I think it's probably more accurate. [LAUGH]
So there's no necessarily technical reason. It was a reason that I chose to make it not editable. Does that answer your question? Cool.
>> Brian Holt: Anyone else?
>> Speaker 3: Someone was asking, inside that, what is that code that you're just editing?
>> Brian Holt: You're about to find out, good question, what is that?

[00:14:38]
I will tell you very soon. And I'm being cheeky by saying it that way. But there's a very deliberate order that these things kind of build together. And so if you go on too many diatribes too early, we're gonna get off track a and there is a lot of content.

[00:14:56]
Just so you know, it's insane to try and learn web development in two days. It is just a ton of content, right? So, you're gonna kinda have the firehose pointed at you, and sorry, not sorry, a little bit, right? [LAUGH] A lot of this is to expose these things to you so you, kind of like, understand the things that you don't understand and this is, kind of, a theory that I have a little bit.

[00:15:23]
You have these. You have what you don't know that you don't know, and you can't Google, or you can't talk about the things that you don't know that you don't know about, right? But as soon as these things enter into this realm that you like, I know these things exist, and so when I go to try and use Is that.

[00:15:38]
I was like, I don't know how to use it right now, but I know how to Google it. [LAUGH] And I think that's really important. So that's kinda like a big point of this is to introduce you to these things. I don't expect you to walk away understanding all these things 100%.

[00:15:50]
What I expect you to be able to do is that you would be able to if you If you needed to do that, right? So I'm exposing you to these concepts so that you can learn them more deeply as necessary. Hopefully that makes some sense. So, if I kinda like say, I'm not gonna answer that right now, that's the reason why I'm doing it, is so that I can come back later in the course and teach you some of these things.

[00:16:16]
The other thing is that A lot of these, I'm covering this broad range of topics. And what's nice about Frontend Masters is they have a lot of dpeth into each one of these. So for example, we're gonna just scratch the surface of Git, but if you wanna deep dive into Git there's and avanced Git course on her by Nina Zakharenko that is really good.

[00:16:37]
So you can check that out later.

