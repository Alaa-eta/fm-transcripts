WEBVTT

1
00:00:00.310 --> 00:00:05.306
&gt;&gt; Brian Holt: So floats and flex.
&gt;&gt; Brian Holt: We talked a little bit

2
00:00:05.306 --> 00:00:06.060
about floats.

3
00:00:08.620 --> 00:00:14.358
Do I do it here?
&gt;&gt; Brian Holt: So,

4
00:00:14.358 --> 00:00:18.800
yeah, we'll talk about floats
here in just a second.

5
00:00:18.800 --> 00:00:21.090
What I wanna say is for
the rest of this page,

6
00:00:21.090 --> 00:00:24.150
we are gonna be talking a lot about
how to get things to lay out.

7
00:00:24.150 --> 00:00:29.220
Like how to get them to stay in relation
to each other the way that you want.

8
00:00:29.220 --> 00:00:33.700
So the entire time I'm gonna be
using three different boxes,

9
00:00:33.700 --> 00:00:35.980
box 1 box 2 and box 3.

10
00:00:35.980 --> 00:00:42.470
Box 1 is both tall and wide box-2 is
just wide and box-3 is just tall.

11
00:00:42.470 --> 00:00:45.810
So, this is the CSS I used to make them.

12
00:00:47.410 --> 00:00:50.470
Just so you know,
I'm gonna be reusing these boxes over and

13
00:00:50.470 --> 00:00:52.580
over again, this is where they're styled.

14
00:00:56.780 --> 00:01:00.530
So Floats, they're the old
bullet-proof way of laying things out,

15
00:01:00.530 --> 00:01:03.770
if you need to support Windows XP,
you're gonna be using floats.

16
00:01:04.980 --> 00:01:09.948
Also I'm sorry.
&gt;&gt; Brian Holt: Internet Explorer

17
00:01:09.948 --> 00:01:12.222
6 has literally taken years of my life.

18
00:01:12.222 --> 00:01:17.129
[LAUGH] I used to work at a company
that worked on a website, and

19
00:01:17.129 --> 00:01:23.097
a good quarter of our people browsing
our site were from the state of Utah,

20
00:01:23.097 --> 00:01:25.139
board state employees.

21
00:01:25.139 --> 00:01:30.589
And all of the computers, I think, for the
state of Utah, are still on Windows XP, so

22
00:01:30.589 --> 00:01:35.950
we had to support Windows XP, which means
we have to support Internet Explorer 6.

23
00:01:35.950 --> 00:01:39.710
Now, if you're just getting into web
development, you will hopefully never have

24
00:01:39.710 --> 00:01:44.400
to know the woe of supporting IE6,
but it's hard.

25
00:01:44.400 --> 00:01:49.370
I never had to support IE5,
which I'm told was yet worse, but

26
00:01:49.370 --> 00:01:51.770
IE6 was pretty damn bad.

27
00:01:51.770 --> 00:01:56.020
Now you just have to deal with IE11,
which is Has its own problems,

28
00:01:56.020 --> 00:01:57.240
just not necessarily as bad.

29
00:01:58.290 --> 00:02:02.950
It's supports Flex, so [LAUGH] Okay.

30
00:02:02.950 --> 00:02:05.020
So, floats.

31
00:02:05.020 --> 00:02:08.370
You would use floats typically
when you cannot use flex.

32
00:02:08.370 --> 00:02:09.240
This isn't totally true, though.

33
00:02:09.240 --> 00:02:12.840
There are still occasions
where floats can be useful.

34
00:02:14.020 --> 00:02:19.870
Nonetheless, if I do floated div,

35
00:02:20.950 --> 00:02:28.020
so all these divs in here,
I didn't talk about descendents, did I.

36
00:02:28.020 --> 00:02:30.430
I guess that bears mentioning for
just a second.

37
00:02:30.430 --> 00:02:35.350
So this is all the divs inside
of float div, typically,

38
00:02:35.350 --> 00:02:36.930
I would not tell you to do this.

39
00:02:36.930 --> 00:02:38.900
Typically, I would tell you
to select each one of these.

40
00:02:38.900 --> 00:02:45.030
Like I would maybe give each one of these,
like, box, box, box.

41
00:02:45.030 --> 00:02:48.172
If I was doing this from my, like a, real
production website this is what I would do

42
00:02:48.172 --> 00:02:53.981
instead.
&gt;&gt; Brian Holt: But,

43
00:02:53.981 --> 00:02:59.498
so if you put that space there,
you're saying a descendant of this.

44
00:02:59.498 --> 00:03:03.888
So,.floated, space .box is a box

45
00:03:03.888 --> 00:03:08.689
inside all floated.
&gt;&gt; Brian Holt: So,

46
00:03:08.689 --> 00:03:10.149
do we follow up, does it make sense?

47
00:03:13.000 --> 00:03:17.390
Now if I even have boxes nested deeply
inside, it doesn't matter how far nested,

48
00:03:17.390 --> 00:03:21.420
It's just like any box that's in floated,
or that's inside any floated.

49
00:03:21.420 --> 00:03:27.230
Any box that's inside of any floated.

50
00:03:27.230 --> 00:03:30.751
If you wanted to limit it to just
the immediate descendant, so

51
00:03:30.751 --> 00:03:33.406
it has to be the first
layer underneath there.

52
00:03:33.406 --> 00:03:37.135
You can use this little arrow,
and that will save,

53
00:03:37.135 --> 00:03:41.670
only directly inside of it,
so, that is actually possible.

54
00:03:43.500 --> 00:03:46.720
But don't, usually these are called
structural selectors, and

55
00:03:46.720 --> 00:03:47.960
there are a few of them.

56
00:03:47.960 --> 00:03:50.460
For the most part you want
to steer clear of them.

57
00:03:53.110 --> 00:03:55.700
Because as soon as someone changes
the structure of your HTML,

58
00:03:55.700 --> 00:04:02.049
all of your CSS breaks,
that's a bad thing.

59
00:04:02.049 --> 00:04:07.960
So I have this blue floated right here.

60
00:04:07.960 --> 00:04:11.540
So this is box 1, it's blue,
it floats to the left.

61
00:04:11.540 --> 00:04:13.370
So it pushes as far to
the left as it possibly can.

62
00:04:13.370 --> 00:04:14.760
Then I have box 2,

63
00:04:14.760 --> 00:04:17.770
which is the red one, pushes as far
to the left as it possibly can.

64
00:04:17.770 --> 00:04:21.470
And then box 3 does not
fit here on the right, so

65
00:04:21.470 --> 00:04:25.290
then it wraps to the next line,
and it goes here.

66
00:04:25.290 --> 00:04:30.520
And it pushes against the blue one, and
since it hits it there it stops there.

67
00:04:30.520 --> 00:04:36.660
Which is kind of curious, so it doesn't
go down here, it actually goes her.

68
00:04:36.660 --> 00:04:38.940
Now, if I zoom out enough,

69
00:04:40.880 --> 00:04:45.550
you'll see here that it actually, well,
because it can still fit on that line,

70
00:04:45.550 --> 00:04:48.200
it's still trying to float left,
it'll stay on that line.

71
00:04:48.200 --> 00:04:57.640
But if I zoom in further, where am I?

72
00:04:57.640 --> 00:05:05.620
Okay, there we go, so now,
this one wraps cuz it doesn't fit right.

73
00:05:05.620 --> 00:05:07.900
But what's curious is
this number three one.

74
00:05:07.900 --> 00:05:09.690
This is one of the limitations of flow,

75
00:05:10.710 --> 00:05:16.510
you would think that this would just push
all the way up here, I thought it would.

76
00:05:16.510 --> 00:05:23.510
But it doesn't, because it will never push
up higher than a box that comes before it.

77
00:05:24.750 --> 00:05:29.660
So this is box three, box three will
never be higher than box two, so

78
00:05:29.660 --> 00:05:30.589
that's why it stops here.

79
00:05:32.500 --> 00:05:34.390
Why?
I don't know.

80
00:05:34.390 --> 00:05:35.380
That's the way it is.

81
00:05:37.570 --> 00:05:38.697
And in case you're wondering,

82
00:05:38.697 --> 00:05:45.139
if I make it even smaller.
&gt;&gt; Brian Holt: It

83
00:05:45.139 --> 00:05:51.129
just pushes the next line, make sense?

84
00:06:02.370 --> 00:06:07.471
That should be enough for floats,
you can also float write as well,

85
00:06:07.471 --> 00:06:14.536
just the opposite.
&gt;&gt; Brian Holt: So

86
00:06:14.536 --> 00:06:17.871
let's get into display-flex, then,

87
00:06:17.871 --> 00:06:24.410
which is fun stuff.
&gt;&gt; Brian Holt: So

88
00:06:24.410 --> 00:06:29.674
a key thing to know about flex is,
if I put display-flex on some element

89
00:06:29.674 --> 00:06:34.870
when I set the properties,
I'm controlling all the children of it.

90
00:06:34.870 --> 00:06:38.174
I'm not controlling that element itself,
which is different from floating.

91
00:06:38.174 --> 00:06:45.250
I said here this box,
I told that to float left.

92
00:06:45.250 --> 00:06:48.300
Which means that it's controlling
itself and pushing itself to the left.

93
00:06:48.300 --> 00:06:52.710
When I'm doing flex, I'm then
controlling everything inside of it, so

94
00:06:52.710 --> 00:06:56.000
you put display flex on
the parent container.

95
00:06:56.000 --> 00:06:58.290
That's a key thing, and
we'll get there and I'll show you.

96
00:06:59.700 --> 00:07:03.914
So I have flex-container right here, and

97
00:07:03.914 --> 00:07:09.550
here on flex-container,
I'm saying display: flex.

98
00:07:09.550 --> 00:07:12.450
And right now all that's its doing
is just making everything lay out on

99
00:07:12.450 --> 00:07:14.050
the same line.

100
00:07:14.050 --> 00:07:17.488
But whats cute is that compared
to the flow not if I make this

101
00:07:17.488 --> 00:07:23.086
smaller
&gt;&gt; Brian Holt: With

102
00:07:23.086 --> 00:07:28.550
display flex its squishes it rather,
these even have width.

103
00:07:28.550 --> 00:07:31.150
Remember, up top that
we set widths on these.

104
00:07:31.150 --> 00:07:32.670
But with display flex,

105
00:07:32.670 --> 00:07:38.620
I did not give it permission to wrap,
not like the hip-hop style.

106
00:07:38.620 --> 00:07:43.210
I also did not give it permission to rap
that way, but in this particular case,

107
00:07:43.210 --> 00:07:45.240
it just squishes the proportionally.

108
00:07:46.290 --> 00:07:52.789
I could come up here and say flex-wrap and
wrap, and then it would,

109
00:07:52.789 --> 00:07:59.562
it would wrap at that point.
&gt;&gt; Brian Holt: But by default it thinks

110
00:07:59.562 --> 00:08:03.020
like no, you want to try and squinch
much as much on a same line as possible.

111
00:08:12.798 --> 00:08:13.790
&gt;&gt; Brian Holt: Which is pretty cool,

112
00:08:13.790 --> 00:08:19.689
I think, right?
&gt;&gt; Brian Holt: So

113
00:08:19.689 --> 00:08:23.101
now, we're gonna mess with three
things pretty extensively.

114
00:08:23.101 --> 00:08:26.520
I think, in my opinion,
these are the most useful things from Flex

115
00:08:26.520 --> 00:08:29.900
are flex-direction,
justify-content, and align-items.

116
00:08:29.900 --> 00:08:32.006
These are kinda the three
that you toy around with.

117
00:08:32.006 --> 00:08:36.240
There are a far more powerful things
you can do with display flex.

118
00:08:36.240 --> 00:08:38.830
And you should definitely watch Jen's
course on it, on Frontend Masters.

119
00:08:38.830 --> 00:08:41.340
I think she goes more into
depth on some of these things.

120
00:08:41.340 --> 00:08:44.150
I'm giving you the 90% use.

121
00:08:44.150 --> 00:08:46.246
She will definitely teach you the 10% use,

122
00:08:46.246 --> 00:08:50.982
as well.
&gt;&gt; Brian Holt: So

123
00:08:50.982 --> 00:08:56.930
flex-direction, something that you
could not really previously do.

124
00:08:58.270 --> 00:09:01.150
I can tell, it's like, hey, reverse.

125
00:09:01.150 --> 00:09:05.900
So notice that one comes first, but
it's also the furthest to the right.

126
00:09:05.900 --> 00:09:08.780
This was really difficult/impossible
to do previously.

127
00:09:08.780 --> 00:09:13.060
But with Flex, you can just say, yeah,
reverse that, and it just works.

128
00:09:13.060 --> 00:09:16.080
Just blows my mind still to this day,
super cool.

129
00:09:19.720 --> 00:09:21.370
It knows I'm still using flex container.

130
00:09:21.370 --> 00:09:23.230
Everything is still the same
from what was up here.

131
00:09:24.970 --> 00:09:29.030
So right now, I'm just adding just
flex-direction, and it just reverses.

132
00:09:29.030 --> 00:09:32.650
So trying to kind of isolate these
things to show you them in a vacuum.

133
00:09:35.000 --> 00:09:36.380
Questions about any of this so far?

134
00:09:39.140 --> 00:09:44.120
Again, notice that I'm messing
with the parent container,

135
00:09:44.120 --> 00:09:46.420
I'm not messing with the boxes at all.

136
00:09:46.420 --> 00:09:50.460
All of the boxes and all of these
flex examples are exactly the same.

137
00:09:50.460 --> 00:09:52.210
I'm just messing with
the parent container.

138
00:09:53.740 --> 00:09:56.050
That's a key thing to kind
of keep in your head.

139
00:09:56.050 --> 00:10:01.395
With Flex, you're messing with the parent.
&gt;&gt; Brian Holt: Okay,

140
00:10:01.395 --> 00:10:06.777
now I can say,
rather than go in backwards or

141
00:10:06.777 --> 00:10:11.300
in a row, I want you to go in a column.

142
00:10:11.300 --> 00:10:12.870
So I want you to go up and down.

143
00:10:12.870 --> 00:10:15.740
So you just say it,
flex-direction column, and

144
00:10:15.740 --> 00:10:18.050
it just goes in a column,
and it just works.

145
00:10:21.720 --> 00:10:28.470
I think you can even do column reverse,
and you have three two one.

146
00:10:28.470 --> 00:10:29.780
So that's also possible as well.

147
00:10:29.780 --> 00:10:31.920
You can just keep doing that.

148
00:10:33.450 --> 00:10:37.540
Again, really cool stuff that was
really difficult/impossible to do.

149
00:10:37.540 --> 00:10:39.050
In fact, this was impossible to do before.

150
00:10:39.050 --> 00:10:44.735
You could not do this with floats.
&gt;&gt; Brian Holt: So

151
00:10:44.735 --> 00:10:51.205
let's put this back to column.
&gt;&gt; Brian Holt: Yeah,

152
00:10:51.205 --> 00:10:53.700
column-reverse also works.

153
00:10:53.700 --> 00:10:55.760
So I think that that's it for
flex direction.

154
00:10:55.760 --> 00:10:57.525
I don't think there's really
much else you can do with it.

155
00:11:00.204 --> 00:11:04.076
&gt;&gt; Brian Holt: So justify-content.

156
00:11:07.067 --> 00:11:10.521
&gt;&gt; Brian Holt: I'm just gonna zoom out of

157
00:11:10.521 --> 00:11:18.061
this a little bit, so
you can see these a little bit more.

158
00:11:18.061 --> 00:11:19.192
Otherwise, it's hard to see.

159
00:11:19.192 --> 00:11:23.970
So justify-content right.

160
00:11:23.970 --> 00:11:27.833
I do justify-content flex-end,
and when I say flex-end,

161
00:11:27.833 --> 00:11:31.115
it moves everything as far
to the right as possible.

162
00:11:31.115 --> 00:11:33.440
And that's what flex-end does,
moves everything to the right.

163
00:11:34.860 --> 00:11:37.990
As you might imagine,
flex-start is everything to the left.

164
00:11:37.990 --> 00:11:41.600
But if you don't change anything,
it's flex-start.

165
00:11:41.600 --> 00:11:48.281
So by default, it's flex-start,
which is why you don't typically see it.

166
00:11:48.281 --> 00:11:51.131
Okay, justify content center,
as you might imagine,

167
00:11:51.131 --> 00:11:53.770
squishes everything into the middle.

168
00:11:53.770 --> 00:11:56.900
Now, notice we're not doing
anything vertically at all yet.

169
00:11:56.900 --> 00:12:02.120
And you can see this box here,
this shows you that,

170
00:12:02.120 --> 00:12:05.840
this is how tall the element is, right,
cause it's as tall as number three is.

171
00:12:05.840 --> 00:12:08.783
But we're just moving things left and
right,

172
00:12:08.783 --> 00:12:11.584
we're not moving anything up and down yet.

173
00:12:11.584 --> 00:12:14.480
So this is what justify-content center
does, it moves everything to the middle.

174
00:12:14.480 --> 00:12:17.620
I want you to be extremely
grateful right now

175
00:12:17.620 --> 00:12:19.719
that this is how easy
it is to center things.

176
00:12:20.750 --> 00:12:25.285
The goats I had to sacrifice
[LAUGH] to get things to

177
00:12:25.285 --> 00:12:29.500
center previously,
not proud of what I did.

178
00:12:29.500 --> 00:12:33.510
Just [LAUGH], yeah.

179
00:12:33.510 --> 00:12:35.640
Centering used to be an extremely
difficult thing to do.

180
00:12:37.520 --> 00:12:39.750
But now with Flex,
it's just really simple.

181
00:12:40.880 --> 00:12:42.800
I'll go with more simple
than it was before.

182
00:12:45.790 --> 00:12:50.080
So now if I wanna space things
out evenly where the left and

183
00:12:50.080 --> 00:12:53.190
the right are as far to the left and
right as they possibly can.

184
00:12:53.190 --> 00:12:56.030
And then have equal space in between.

185
00:12:56.030 --> 00:12:59.530
You can do space between,
and that's what this does.

186
00:12:59.530 --> 00:13:03.808
So it will optimize to make these
things as evenly spaced as it possibly

187
00:13:03.808 --> 00:13:07.805
can.
&gt;&gt; Brian Holt: And

188
00:13:07.805 --> 00:13:12.701
then space-around,
what it's going to do is is it's going

189
00:13:12.701 --> 00:13:17.770
to put space between the flex-start and
the flex-end.

190
00:13:17.770 --> 00:13:19.750
As well as space between these things.

191
00:13:19.750 --> 00:13:24.110
So this is space-around
where the beginning and

192
00:13:24.110 --> 00:13:26.600
the end is half of these ones.

193
00:13:26.600 --> 00:13:28.390
Did that make sense?

194
00:13:28.390 --> 00:13:33.461
You can also do space-evenly, and
then everything will be spaced literally

195
00:13:33.461 --> 00:13:39.003
evenly.
&gt;&gt; Brian Holt: I tend use space-between

196
00:13:39.003 --> 00:13:44.050
more.
&gt;&gt; Brian Holt: Not space between but

197
00:13:44.050 --> 00:13:48.650
space around, rather.
&gt;&gt; Brian Holt: Any

198
00:13:48.650 --> 00:13:53.404
questions about justify content?
&gt;&gt; Brian Holt: So again,

199
00:13:53.404 --> 00:13:55.700
that's left and right, not up and down.

200
00:13:55.700 --> 00:13:58.411
Now, we're gonna do align-items,
which is up and

201
00:13:58.411 --> 00:14:05.624
down.
&gt;&gt; Brian Holt: So

202
00:14:05.624 --> 00:14:11.204
align-items.
&gt;&gt; Brian Holt: I

203
00:14:11.204 --> 00:14:14.980
don't why it needs to do that.

204
00:14:14.980 --> 00:14:19.271
It should just be able to do that.
&gt;&gt; Brian Holt: Anyway, so

205
00:14:19.271 --> 00:14:23.290
flex-end align-items flex-end.

206
00:14:23.290 --> 00:14:25.940
That's moving everything from the top.

207
00:14:25.940 --> 00:14:27.270
It's actually gonna be on the bottom now.

208
00:14:27.270 --> 00:14:29.270
So this is all aligned against the bottom.

209
00:14:29.270 --> 00:14:33.901
It's not aligned against the top.
&gt;&gt; Brian Holt: Again, previously this

210
00:14:33.901 --> 00:14:37.730
would have been extremely difficult and
now it's just like one property.

211
00:14:37.730 --> 00:14:40.649
It's just align-items flex-end, and
everything just moves down to the bottom.

212
00:14:42.390 --> 00:14:43.520
It moves down to the bottom, right?

213
00:14:43.520 --> 00:14:47.800
Notice that this container is
as big as number three, right?

214
00:14:47.800 --> 00:14:51.950
Cuz that's the tallest one, and it moves
everything to the bottom of three.

215
00:14:53.270 --> 00:14:56.890
So I could say here,

216
00:15:01.102 --> 00:15:05.650
&gt;&gt; Brian Holt: Padding top 20 pixels.

217
00:15:05.650 --> 00:15:08.788
And notice that everything continues
moving down to the bottom as far as it

218
00:15:08.788 --> 00:15:14.970
could possibly go.
&gt;&gt; Brian Holt: So that make sense?

219
00:15:16.470 --> 00:15:22.977
Cool.
&gt;&gt; Brian Holt: Align-items center,

220
00:15:22.977 --> 00:15:25.600
so now,
this is going to vertically center it.

221
00:15:27.900 --> 00:15:31.190
So this one has equal space here,
equal space there, equal space,

222
00:15:31.190 --> 00:15:32.400
equal space, right?

223
00:15:32.400 --> 00:15:34.323
And this one's up against the top and
the bottom.

224
00:15:39.640 --> 00:15:41.600
&gt;&gt; Brian Holt: Okay, align-items stretch.

225
00:15:41.600 --> 00:15:44.830
This is the only one that I had to
modify actually the boxes themselves.

226
00:15:44.830 --> 00:15:47.950
Cuz if you set a height,
it will actually respect the height.

227
00:15:47.950 --> 00:15:50.270
And I wanted it to actually
just stretch everything out.

228
00:15:50.270 --> 00:15:55.050
So if you see align-item stretch, anything
that doesn't have a height necessarily,

229
00:15:55.050 --> 00:15:58.920
it's going to stretch out to
fit inside of that div, right?

230
00:15:58.920 --> 00:16:01.390
So this stretches from the top to
the bottom, top to the bottom,

231
00:16:01.390 --> 00:16:01.919
top to the bottom.

232
00:16:04.670 --> 00:16:07.210
So I had to set a height here of
how much I want it to stretch, and

233
00:16:07.210 --> 00:16:11.610
if I set this to 400,
it would be stretched even further.

234
00:16:13.460 --> 00:16:16.200
Really, really cool stuff that's really
easy to change with just a couple of

235
00:16:16.200 --> 00:16:25.150
properties.
&gt;&gt; Brian Holt: Or

236
00:16:25.150 --> 00:16:30.010
I mean, really just awesome
stuff you could do here.

237
00:16:30.010 --> 00:16:35.840
If I said get rid of the no height thing,
and I got rid of this height thing.

238
00:16:37.820 --> 00:16:41.180
So, now this container doesn't
actually have any sort of

239
00:16:42.460 --> 00:16:45.070
heights that are on the parent,
but if I come in here and

240
00:16:45.070 --> 00:16:49.838
say box-3.
&gt;&gt; Brian Holt: And

241
00:16:49.838 --> 00:16:54.250
I set just the heights of box-3 to be 250

242
00:16:54.250 --> 00:16:59.194
pixels.
&gt;&gt; Brian Holt: Yeah,

243
00:16:59.194 --> 00:17:01.138
no, I messed up a lot of
things by doing that.

244
00:17:01.138 --> 00:17:06.393
Notice that,
&gt;&gt; Brian Holt: It's stretched its sibling

245
00:17:06.393 --> 00:17:13.820
containers to match the height of
the tallest element, which is awesome.

246
00:17:13.820 --> 00:17:17.030
It's really cool that you can
just set one of the heights and

247
00:17:17.030 --> 00:17:23.574
all of them stretch to match that.
&gt;&gt; Brian Holt: You might be thinking like,

248
00:17:23.574 --> 00:17:29.440
okay, cool, I don't care, it was so hard
to do that before, [LAUGH] so, so hard.

249
00:17:31.110 --> 00:17:33.500
So I'm using the cascade
like I told you not to.

250
00:17:33.500 --> 00:17:39.350
[LAUGH] And I'm telling it, hey,
you've previously had heights set on you.

251
00:17:39.350 --> 00:17:40.650
Ignore it.

252
00:17:40.650 --> 00:17:43.140
So it's saying that you
had something set on you.

253
00:17:43.140 --> 00:17:46.460
Ignore it, and
just get whatever the ancestor

254
00:17:46.460 --> 00:17:50.300
height was previously.
&gt;&gt; Brian Holt: Makes

255
00:17:50.300 --> 00:17:53.638
sense?
&gt;&gt; Speaker 2: [INAUDIBLE] Ancestor instead

256
00:17:53.638 --> 00:17:57.931
of the parent?
&gt;&gt; Brian Holt: Either, so in this case,

257
00:17:57.931 --> 00:18:01.310
I have up here box-1, box-2, and box-3.

258
00:18:01.310 --> 00:18:03.800
It's like their heights
are set way up there.

259
00:18:03.800 --> 00:18:08.566
I'm telling you to ignore those.
&gt;&gt; Speaker 2: And then whatever's after it

260
00:18:08.566 --> 00:18:12.640
too, right, why did you do the inherit?
&gt;&gt; Brian Holt: Cuz if I do this,

261
00:18:12.640 --> 00:18:15.300
then they're gonna have height.

262
00:18:15.300 --> 00:18:18.790
And so this stretch isn't gonna work.
&gt;&gt; Speaker 2: Okay.

263
00:18:18.790 --> 00:18:19.469
&gt;&gt; Brian Holt: And that stretch is

264
00:18:19.469 --> 00:18:21.256
only gonna work when they
don't have height set.

265
00:18:21.256 --> 00:18:22.537
&gt;&gt; Speaker 2: Got it.

266
00:18:24.550 --> 00:18:26.931
&gt;&gt; Brian Holt: Good question.

267
00:18:28.972 --> 00:18:30.940
&gt;&gt; Speaker 3: And then I'm assuming once

268
00:18:30.940 --> 00:18:35.821
we get further into it,
instead of saying height is 200 pixels,

269
00:18:35.821 --> 00:18:41.120
you'll be able to set it according
to your device size, right?

270
00:18:41.120 --> 00:18:44.127
So you can do some sort of variable.
&gt;&gt; Brian Holt: Sure,

271
00:18:44.127 --> 00:18:47.160
you can say things like width 50%.

272
00:18:47.160 --> 00:18:50.680
Yeah, and that's actually probably
what you're gonna use the most.

273
00:18:50.680 --> 00:18:53.435
I don't really talk too much about
responsive web design in here or

274
00:18:53.435 --> 00:18:54.730
responsive coding.

275
00:18:54.730 --> 00:18:58.545
That's the name of that technique,
is making things fit screens.

276
00:18:58.545 --> 00:19:03.336
Cuz scrolling side to side on
a phone is the great evil,

277
00:19:03.336 --> 00:19:06.678
[LAUGH] I don't like it.
&gt;&gt; Brian Holt: You do that using

278
00:19:06.678 --> 00:19:11.817
percentages and another thing called
media queries, which are kind of

279
00:19:11.817 --> 00:19:16.970
an advanced feature of CSS,
worth investigation and understanding.

280
00:19:18.280 --> 00:19:19.688
You do have a responsive course,

281
00:19:19.688 --> 00:19:20.662
don't you?
&gt;&gt; Speaker 4: Yeah,

282
00:19:20.662 --> 00:19:24.112
the title of the course is
Responsive Web Design with CSS and

283
00:19:24.112 --> 00:19:27.460
Flex, or CSS Grade in Flex Box.
&gt;&gt; Brian Holt: Cool, yeah, and

284
00:19:27.460 --> 00:19:30.429
grid in particular is really, really cool.

285
00:19:30.429 --> 00:19:35.740
Cuz you can just basically make
your page into a grid of things.

286
00:19:35.740 --> 00:19:38.960
And you say like, okay, this takes up
one unit, this takes up two units, and

287
00:19:38.960 --> 00:19:39.790
this takes up one unit.

288
00:19:39.790 --> 00:19:43.550
And it just kinda figures out all
the spacing for you, which is really cool.

289
00:19:44.860 --> 00:19:45.940
So, yes,
the answer to your question is yes.

290
00:19:45.940 --> 00:19:50.260
[LAUGH]
&gt;&gt; Brian Holt: Other questions?

291
00:19:50.260 --> 00:19:55.728
Great questions so far.
&gt;&gt; Brian Holt: Cool,

292
00:19:55.728 --> 00:19:57.885
so what I wanted to show you here,

293
00:19:57.885 --> 00:20:02.850
is you can start combining these
things to get really cool effects.

294
00:20:02.850 --> 00:20:05.770
So one that I will use
quite often is I'll have

295
00:20:05.770 --> 00:20:08.110
a div that's gonna be of a certain size.

296
00:20:08.110 --> 00:20:11.414
And I wanna make sure everything
is horizontally centered and

297
00:20:11.414 --> 00:20:12.692
vertically centered.

298
00:20:12.692 --> 00:20:14.638
So I will justify center and
align item center, and

299
00:20:14.638 --> 00:20:16.550
that just makes everything
sit in the middle.

300
00:20:16.550 --> 00:20:18.300
If you remember at the top,

301
00:20:18.300 --> 00:20:24.045
go up here to the top of the page.
&gt;&gt; Brian Holt: See

302
00:20:24.045 --> 00:20:27.900
how this Box 2 is sitting exactly
in the middle of the div?

303
00:20:29.040 --> 00:20:31.956
The way that I did that,
if you noticed, display flex,

304
00:20:31.956 --> 00:20:34.860
align-item center, justify-content center.

305
00:20:34.860 --> 00:20:38.682
And that makes everything just be exactly
in the middle of the box at all times.

306
00:20:38.682 --> 00:20:42.879
And what's nice about that,
if I make this width 400,

307
00:20:42.879 --> 00:20:47.438
still centered, if I do this height 400,
still centered.

308
00:20:47.438 --> 00:20:52.595
If you wanna make this width,
&gt;&gt; Brian Holt: Let's say,

309
00:20:52.595 --> 00:20:56.571
50%.
&gt;&gt; Brian Holt: It's too big cuz there's

310
00:20:56.571 --> 00:21:01.039
margins around it, but let's say 40%,

311
00:21:01.039 --> 00:21:05.147
everything is still totally centered,

312
00:21:05.147 --> 00:21:09.100
in terms of the Box 2 inside of it.

313
00:21:09.100 --> 00:21:14.380
So that's the trick for
centering something inside of something,

314
00:21:14.380 --> 00:21:18.210
is display flex, align item center,
and justify-content center.

315
00:21:18.210 --> 00:21:25.027
You'll use that quite a bit.
&gt;&gt; Brian Holt: Cool,

316
00:21:25.027 --> 00:21:29.530
so yeah, this is align item center,
reverse, and

317
00:21:29.530 --> 00:21:35.317
justify-content space around,
that's what that looks like.

318
00:21:35.317 --> 00:21:40.011
Or if I do flex-container,
align items, flex end and

319
00:21:40.011 --> 00:21:43.481
column, looks like that, pushed up and

320
00:21:43.481 --> 00:21:48.279
the column on the right.
&gt;&gt; Brian Holt: So

321
00:21:48.279 --> 00:21:52.380
I'm teaching you a bunch of these
individual properties in a vacuum.

322
00:21:52.380 --> 00:21:54.750
And the truth is, you don't really
use them in a vacuum too much.

323
00:21:54.750 --> 00:21:58.306
It's usually in conjunction with a bunch
of these properties to achieve some effect

324
00:21:58.306 --> 00:21:59.870
that you're trying to set, right?

325
00:21:59.870 --> 00:22:02.820
I don't know why you would
make something look like that.

326
00:22:02.820 --> 00:22:05.180
But for some reason, some day,
you're gonna have to,

327
00:22:05.180 --> 00:22:06.860
and that's how you do it, right?

328
00:22:06.860 --> 00:22:10.820
Is you combine all these things together
to get everything pushed to the right and

329
00:22:10.820 --> 00:22:16.390
in a column.
&gt;&gt; Brian Holt: Questions?

330
00:22:19.100 --> 00:22:20.400
&gt;&gt; Brian Holt: Cool.

331
00:22:23.110 --> 00:22:24.424
&gt;&gt; Brian Holt: We talked a hot second

332
00:22:24.424 --> 00:22:29.170
about flex-wrap, which is right now,
if you have too many things on a line,

333
00:22:29.170 --> 00:22:33.360
it squishes them together, and
it starts squishing their widths.

334
00:22:33.360 --> 00:22:36.350
And if you wanted to say no,
if this is too wide,

335
00:22:36.350 --> 00:22:39.190
if I have too many things on this line,
go down to the next line.

336
00:22:39.190 --> 00:22:43.338
That's flex wrap, that's what that does.
&gt;&gt; Brian Holt: And

337
00:22:43.338 --> 00:22:49.180
then the last thing is you can
start doing crazy stuff with order.

338
00:22:49.180 --> 00:22:53.800
So, everything I showed you
right now goes on the container.

339
00:22:53.800 --> 00:22:58.754
Not the container level,
the parent level, there's actually

340
00:22:58.754 --> 00:23:04.780
properties that you can do with,
&gt;&gt; Brian Holt: On the children themselves.

341
00:23:04.780 --> 00:23:06.090
So, I wonder if I could just do this and

342
00:23:06.090 --> 00:23:09.296
show you.
&gt;&gt; Brian Holt: I'm gonna do it on this

343
00:23:09.296 --> 00:23:10.900
one, actually.

344
00:23:12.390 --> 00:23:19.126
So if I do another style here,
&gt;&gt; Brian Holt: And

345
00:23:19.126 --> 00:23:23.596
I do box-2, dangers of live coding.

346
00:23:23.596 --> 00:23:29.537
If I do box-2 and
I say align-self: flex-end,

347
00:23:29.537 --> 00:23:34.374
I can actually individually move boxes,

348
00:23:34.374 --> 00:23:40.320
and I can even start
messing with the order.

349
00:23:40.320 --> 00:23:44.760
I can say order: 5, and
I moved that to the beginning from,

350
00:23:46.170 --> 00:23:53.303
whereas if I do box-1 here,
&gt;&gt; Brian Holt: I

351
00:23:53.303 --> 00:23:55.970
can use order to move that 10.

352
00:23:55.970 --> 00:23:59.400
And that'll move it to the beginning.

353
00:23:59.400 --> 00:24:02.672
So the higher ones
are gonna be ordered first.

354
00:24:02.672 --> 00:24:05.790
But if I do one,
then it's gonna move it back, right?

355
00:24:05.790 --> 00:24:09.529
So now, you have two, then one,
then the one that's unordered.

356
00:24:09.529 --> 00:24:12.592
Again, this was totally impossible before,
without flex and

357
00:24:12.592 --> 00:24:14.570
being able to set order on these things.

358
00:24:17.190 --> 00:24:24.680
And again, you could do align-self
here as well, align-self: flex-start.

359
00:24:24.680 --> 00:24:29.150
So now this is in the bottom, this is in
the top, and this one's technically in

360
00:24:29.150 --> 00:24:33.611
the middle.
&gt;&gt; Brian Holt: So, crazy stuff,

361
00:24:33.611 --> 00:24:38.682
pretty cool stuff anyway.
&gt;&gt; Brian Holt: I

362
00:24:38.682 --> 00:24:40.871
don't wanna get too much more into that.

363
00:24:40.871 --> 00:24:43.270
Well, you can see this
got really messed up.

364
00:24:43.270 --> 00:24:49.817
[LAUGH]
&gt;&gt; Brian Holt: The place to look on this,

365
00:24:49.817 --> 00:24:55.289
something I find myself constantly
referring to is CSS Tricks,

366
00:24:55.289 --> 00:24:57.840
A Complete Guide to Flexbox.

367
00:24:57.840 --> 00:25:00.360
I was talking to the guy
that writes this blog.

368
00:25:00.360 --> 00:25:03.420
This is by far their most popular page,

369
00:25:03.420 --> 00:25:05.370
literally ten times more
than any other page.

370
00:25:05.370 --> 00:25:07.480
It's because there's
a ton of stuff on here.

371
00:25:09.890 --> 00:25:11.470
It's impossible to keep all
this stuff in your head,

372
00:25:11.470 --> 00:25:13.610
there's just too much that
you can do with the Flexbox.

373
00:25:13.610 --> 00:25:15.760
So this page is a definitive reference for

374
00:25:15.760 --> 00:25:19.466
it, and it's all really clear to
understand, which is what I like about it.

375
00:25:19.466 --> 00:25:22.471
So flex-direction's on here.

376
00:25:22.471 --> 00:25:24.832
I didn't even talk about flex-grow,

377
00:25:24.832 --> 00:25:27.701
you can have things grow
to take up their space.

378
00:25:27.701 --> 00:25:28.976
That's really interesting.

379
00:25:28.976 --> 00:25:33.360
You can tell them this one should
be twice as big as the next one.

380
00:25:33.360 --> 00:25:35.865
You can give them kind of ratios
like that, which is really cool.

381
00:25:35.865 --> 00:25:39.040
There's some really,
really cool stuff you can do with it.

382
00:25:39.040 --> 00:25:43.940
So, become familiar with this page.

383
00:25:43.940 --> 00:25:45.900
They have one for grid as well,
which is quite good.

