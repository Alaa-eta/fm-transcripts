WEBVTT

1
00:00:00.310 --> 00:00:02.207
&gt;&gt; Brian Holt: So floats and flex.

2
00:00:04.419 --> 00:00:05.843
&gt;&gt; Brian Holt: We talked
a little bit about floats.

3
00:00:08.623 --> 00:00:09.884
&gt;&gt; Brian Holt: Do I do it here?

4
00:00:14.144 --> 00:00:18.609
&gt;&gt; Brian Holt: So yeah, we'll talk
about floats here in just a second.

5
00:00:18.609 --> 00:00:21.329
What I want to say is,
for the rest of this page,

6
00:00:21.329 --> 00:00:24.938
we're gonna be talking a lot about
how to get things to lay out,

7
00:00:24.938 --> 00:00:29.046
how to get them to stay in relation to
each other the way that you want to.

8
00:00:29.046 --> 00:00:33.935
So the entire time,
I'm gonna be using three different boxes,

9
00:00:33.935 --> 00:00:36.114
Box 1, Box 2, and Box 3.

10
00:00:36.114 --> 00:00:39.410
Box 1 is both tall and wide.

11
00:00:39.410 --> 00:00:42.470
Box 2 is just wide and box 3 is just tall.

12
00:00:42.470 --> 00:00:45.810
So this is the CSS I used to make them.

13
00:00:47.140 --> 00:00:51.690
So just so you know, I'm gonna be
reusing these boxes over and over again.

14
00:00:51.690 --> 00:00:52.750
This is where they're styled.

15
00:00:56.591 --> 00:01:00.274
&gt;&gt; Brian Holt: So floats does the old,
bullet-proof way of laying things out.

16
00:01:00.274 --> 00:01:05.500
If you need to support Windows XP,
you're gonna be using floats.

17
00:01:05.500 --> 00:01:06.254
I'm sorry.

18
00:01:08.654 --> 00:01:12.010
&gt;&gt; Brian Holt: Internet Explorer 6
has literally taken years of my life.

19
00:01:12.010 --> 00:01:16.665
[LAUGH] I used to work at a company
that worked on a website and

20
00:01:16.665 --> 00:01:21.320
a good quarter of our people
browsing our website were from

21
00:01:21.320 --> 00:01:25.370
the state of Utah, board state employees.

22
00:01:25.370 --> 00:01:29.850
And all of the computers, I think, for
the state of Utah are still on Windows XP.

23
00:01:29.850 --> 00:01:31.310
So we had to support Windows XP,

24
00:01:31.310 --> 00:01:34.329
which means we have to
support Internet Explorer 6.

25
00:01:35.950 --> 00:01:39.710
Now if you're just getting in to web
development, you will hopefully never have

26
00:01:39.710 --> 00:01:44.400
to know the woes of supporting IE6,
but it's hard.

27
00:01:44.400 --> 00:01:49.190
I never had to support IE5,
which I am told it was yet worse.

28
00:01:49.190 --> 00:01:51.770
But IE6 was pretty damn bad.

29
00:01:51.770 --> 00:01:56.020
Now you just have to deal with IE11,
which is has its own problems,

30
00:01:56.020 --> 00:01:57.240
just not necessarily as bad.

31
00:01:58.290 --> 00:01:59.340
It supports flex.

32
00:01:59.340 --> 00:02:02.651
So [LAUGH], okay.

33
00:02:02.651 --> 00:02:04.567
So floats.

34
00:02:04.567 --> 00:02:08.370
If you would use floats typically
when you could not use flex,

35
00:02:08.370 --> 00:02:09.230
this isn't totally true.

36
00:02:09.230 --> 00:02:14.589
There are still occasions where
floats can be useful, nonetheless.

37
00:02:16.900 --> 00:02:22.750
If I do floated div, so
all these divs in here.

38
00:02:25.270 --> 00:02:28.020
I guess I didn't talk about descendents,
did I?

39
00:02:28.020 --> 00:02:30.430
I guess that bears mentioning for
just a second.

40
00:02:30.430 --> 00:02:34.664
So this is all the divs inside of floated.

41
00:02:34.664 --> 00:02:39.766
Typically, I would not tell you to do
this, typically I would tell you to select

42
00:02:39.766 --> 00:02:44.887
each one of these like I would may be just
give each of these like box, box, box.

43
00:02:44.887 --> 00:02:48.844
If I was doing this from my production
website, this is what I would do instead.

44
00:02:56.018 --> 00:02:58.999
&gt;&gt; Brian Holt: So if you put that space
there you're saying a descendent of

45
00:02:58.999 --> 00:03:00.110
this, right?

46
00:03:00.110 --> 00:03:06.750
So .floated .box is
a box inside of floated.

47
00:03:08.800 --> 00:03:09.338
Do we follow?

48
00:03:09.338 --> 00:03:10.559
Does that make sense?

49
00:03:12.776 --> 00:03:15.418
&gt;&gt; Brian Holt: Now if I even
have boxes nested deeply inside,

50
00:03:15.418 --> 00:03:17.459
it doesn't matter how far nested.

51
00:03:17.459 --> 00:03:20.515
It's just any box that's
inside of any floated,

52
00:03:20.515 --> 00:03:24.420
any box that's inside of any floated,
right?

53
00:03:24.420 --> 00:03:24.920
Cool.

54
00:03:27.500 --> 00:03:30.530
If you wanted to limit it to
just the immediate descendent,

55
00:03:30.530 --> 00:03:35.770
so it has to be the first layer underneath
here, you can use this little arrow,

56
00:03:35.770 --> 00:03:40.110
and that will say,
only directly inside of it.

57
00:03:40.110 --> 00:03:41.670
So that is actually possible.

58
00:03:43.500 --> 00:03:46.720
But don't, usually these are called
structural selectors, and

59
00:03:46.720 --> 00:03:47.960
there are a few of them.

60
00:03:47.960 --> 00:03:53.410
For the most part,
you want to steer clear of them because

61
00:03:53.410 --> 00:03:57.790
as soon as someone changes the structure
of your HTML, all of your CSS breaks.

62
00:03:57.790 --> 00:03:58.448
That's a bad thing.

63
00:03:58.448 --> 00:04:02.856
So okay, so I have this

64
00:04:02.856 --> 00:04:07.960
blue floated right here.

65
00:04:07.960 --> 00:04:11.540
So this is box 1, it's blue,
floats to the left, right?

66
00:04:11.540 --> 00:04:13.830
So it pushes as far to
the left as it possibly can.

67
00:04:13.830 --> 00:04:18.380
Then at box 2 which is the red one, pushes
as far to the left as it possibly can and

68
00:04:18.380 --> 00:04:21.340
then box 3 does not fit here on the right.

69
00:04:21.340 --> 00:04:25.410
So then it wraps to the next line as and
it goes here and

70
00:04:25.410 --> 00:04:28.610
it pushes against the blue one and
then since it did hit it there,

71
00:04:28.610 --> 00:04:31.570
it stops there,
just kind of curious, right?

72
00:04:31.570 --> 00:04:34.930
So it doesn't go down here,
it actually goes here, right?

73
00:04:36.660 --> 00:04:38.940
Now if I zoom out enough,

74
00:04:40.880 --> 00:04:45.550
you'll see here that it actually,
because it can still fit on that line,

75
00:04:45.550 --> 00:04:48.200
it's still trying to float left,
it'll stay on that line.

76
00:04:48.200 --> 00:04:57.640
But if I zoom in further,
&gt;&gt; Brian Holt: Where am I?

77
00:04:57.640 --> 00:05:00.400
Okay, there we go.

78
00:05:02.140 --> 00:05:05.439
So now, this one wraps because
it doesn't fit, right, but

79
00:05:05.439 --> 00:05:07.778
what's curious is this number three one.

80
00:05:07.778 --> 00:05:10.825
This is one of the limitations of float.

81
00:05:10.825 --> 00:05:14.810
You would think that this would just
push up all the way up here, right?

82
00:05:14.810 --> 00:05:19.570
I thought it would, but
it doesn't because it will

83
00:05:19.570 --> 00:05:24.820
never push up higher than a box
that comes before it, right.

84
00:05:24.820 --> 00:05:26.116
So this is box 3.

85
00:05:26.116 --> 00:05:30.589
Box 3 will never be higher than box 2,
so that's why it stops here.

86
00:05:32.500 --> 00:05:35.380
Why?
I don't know, it's the way it is.

87
00:05:37.580 --> 00:05:38.984
And in case you're wondering,

88
00:05:38.984 --> 00:05:45.347
if I make it even smaller,
&gt;&gt; Brian Holt: It

89
00:05:45.347 --> 00:05:50.389
just pushes the next line.

90
00:05:50.389 --> 00:05:51.567
Makes sense?

91
00:05:57.852 --> 00:05:59.596
&gt;&gt; Brian Holt: Okay, cool.

92
00:06:02.890 --> 00:06:04.820
&gt;&gt; Brian Holt: That should be enough for
floats.

93
00:06:04.820 --> 00:06:06.260
You can also float right as well.

94
00:06:08.470 --> 00:06:09.312
That's the opposite.

95
00:06:14.157 --> 00:06:18.979
&gt;&gt; Brian Holt: So let's get into
display flex then, which is fun stuff.

96
00:06:22.887 --> 00:06:27.410
&gt;&gt; Brian Holt: So,
a key thing to know about flex is if I put

97
00:06:27.410 --> 00:06:31.390
display flex on some element.

98
00:06:31.390 --> 00:06:34.870
When I set the properties, I am
controlling all of the children of it.

99
00:06:34.870 --> 00:06:38.860
I'm not controlling that element itself
which is different from floating, right.

100
00:06:38.860 --> 00:06:44.510
I said here, this box, right, I told that

101
00:06:44.510 --> 00:06:48.300
to float left which means it's controlling
itself and pushing itself to the left.

102
00:06:48.300 --> 00:06:52.560
When I'm doing flex, I'm then controlling
everything inside of it, right?

103
00:06:52.560 --> 00:06:56.680
So you put display flex on the parent
container, that's a key thing.

104
00:06:56.680 --> 00:06:58.290
And we'll get there and I'll show you.

105
00:06:59.700 --> 00:07:02.180
So I have flex-container right here,
right?

106
00:07:04.490 --> 00:07:09.670
And here on flex-container I'm saying,
display flex and

107
00:07:09.670 --> 00:07:13.420
right now, all that's doing is just making
everything lay out on the same line.

108
00:07:13.420 --> 00:07:18.310
But what's curious about this compared to
float, notice that if I make this smaller,

109
00:07:22.799 --> 00:07:24.699
&gt;&gt; Brian Holt: With display flex,

110
00:07:24.699 --> 00:07:26.941
it squishes it rather.

111
00:07:26.941 --> 00:07:28.197
These even have width, right?

112
00:07:28.197 --> 00:07:30.945
Remember, up top that
we set widths on these.

113
00:07:30.945 --> 00:07:34.464
But with this display flex,
I did not give it permission to wrap.

114
00:07:36.324 --> 00:07:38.141
&gt;&gt; Brian Holt: Not like the hip hop style,

115
00:07:38.141 --> 00:07:41.387
I also did not give it
permission to rap that way.

116
00:07:41.387 --> 00:07:45.737
But in this particular case,
it just squishes them proportionally.

117
00:07:45.737 --> 00:07:51.170
I could come up here and say,
&gt;&gt; Brian Holt: Flex-wrap and

118
00:07:51.170 --> 00:07:56.026
wrap, and
then it would wrap at that point.

119
00:07:58.546 --> 00:08:00.990
&gt;&gt; Brian Holt: But by default,
it thinks like, no, you want to try and

120
00:08:00.990 --> 00:08:03.020
squish as much onto
the same line as possible.

121
00:08:12.765 --> 00:08:14.462
&gt;&gt; Brian Holt: Which is
pretty cool I think, right.

122
00:08:19.505 --> 00:08:23.100
&gt;&gt; Brian Holt: So now we're gonna mess
with three things pretty extensively.

123
00:08:23.100 --> 00:08:25.920
I think, in my opinion,
these are the most useful things from

124
00:08:25.920 --> 00:08:29.900
flex are flex-direction,
justify-content, and align-items.

125
00:08:29.900 --> 00:08:31.990
These are kinda three
that you toy around with.

126
00:08:31.990 --> 00:08:36.330
There are far more powerful things
that you can do with display flex and

127
00:08:36.330 --> 00:08:38.830
you should definitely watch Jen's
course on it, on Frontend Masters.

128
00:08:38.830 --> 00:08:41.340
I think she goes more into
depth on some of these things.

129
00:08:41.340 --> 00:08:48.956
I'm giving you the 90% use, she will
definitely give you the 10% use as well.

130
00:08:50.711 --> 00:08:54.136
&gt;&gt; Brian Holt: So flex-direction.

131
00:08:54.136 --> 00:08:58.075
Something that you could
not previously really do,

132
00:08:58.075 --> 00:09:00.859
I can tell it's like hey, reverse.

133
00:09:00.859 --> 00:09:05.627
So notice that one comes first, but
it's also the furthest to the right.

134
00:09:05.627 --> 00:09:09.709
This was really difficult/impossible
to do previously, but with flex,

135
00:09:09.709 --> 00:09:12.834
you can just say yeah,
reverse that, and it just works.

136
00:09:12.834 --> 00:09:15.990
Just blows my mind still to this day,
super cool.

137
00:09:19.492 --> 00:09:21.370
&gt;&gt; Brian Holt: It knows I'm
still using flex-container.

138
00:09:21.370 --> 00:09:23.230
Everything is still the same
from what was up here.

139
00:09:24.970 --> 00:09:29.030
So right now, I'm just adding just
flex-direction and then it just reverses.

140
00:09:29.030 --> 00:09:32.600
So trying to show to kinda isolate these
things to show you them in a vacuum.

141
00:09:35.000 --> 00:09:36.380
Questions about any of this so far?

142
00:09:39.140 --> 00:09:44.120
Again, notice that I'm messing
with the parent container.

143
00:09:44.120 --> 00:09:46.420
I'm not messing with the boxes at all.

144
00:09:46.420 --> 00:09:50.460
All of the boxes in all of these
flex examples are exactly the same.

145
00:09:50.460 --> 00:09:52.210
I'm just messing with
the parent container.

146
00:09:53.740 --> 00:09:56.050
That's a key thing to
kinda keep in your head.

147
00:09:56.050 --> 00:09:57.729
With flex, you're messing with the parent.

148
00:10:00.560 --> 00:10:01.060
&gt;&gt; Brian Holt: Okay?

149
00:10:04.010 --> 00:10:09.190
Now I can say rather
than go in backwards or

150
00:10:09.190 --> 00:10:11.300
forward in a row,
I want you to go in a column.

151
00:10:11.300 --> 00:10:12.870
So I want you to go up and down.

152
00:10:12.870 --> 00:10:17.137
So you just say, flex-direction column and
it just goes in the column, and

153
00:10:17.137 --> 00:10:18.013
it just works.

154
00:10:21.461 --> 00:10:28.740
&gt;&gt; Brian Holt: I think you can even do
column reverse and you have 3, 2, 1.

155
00:10:28.740 --> 00:10:33.242
That's also possible as well,
you can just keep doing that.

156
00:10:33.242 --> 00:10:36.780
Again, really cool stuff,
really difficult slash impossible,

157
00:10:36.780 --> 00:10:39.001
in fact this was impossible to do before.

158
00:10:39.001 --> 00:10:40.697
You could not do this with floats.

159
00:10:44.567 --> 00:10:46.800
&gt;&gt; Brian Holt: So
let's put this back to column.

160
00:10:50.561 --> 00:10:53.422
&gt;&gt; Brian Holt: Yeah,
column-reverse also works.

161
00:10:53.422 --> 00:10:55.802
So I think that that's it for
flex-direction.

162
00:10:55.802 --> 00:10:57.463
I don't think there's really
much else you can do with it.

163
00:10:57.463 --> 00:11:01.984
So justify-content.

164
00:11:07.814 --> 00:11:13.334
&gt;&gt; Brian Holt: Let me make this, I'm just
gonna zoom out of this a little bit,

165
00:11:13.334 --> 00:11:16.680
so you can see these a little bit more.

166
00:11:18.160 --> 00:11:19.190
Otherwise, it's hard to see.

167
00:11:21.010 --> 00:11:26.300
So justify-content right,
I do justify-content flex-end.

168
00:11:26.300 --> 00:11:28.680
And when I say flex-end,

169
00:11:28.680 --> 00:11:30.800
it moves everything as far
to the right as possible.

170
00:11:30.800 --> 00:11:33.440
And that's what flex-end does,
move everything to the right.

171
00:11:34.860 --> 00:11:38.030
As you might imagine flex-start
is everything to the left.

172
00:11:38.030 --> 00:11:41.600
If you don't change anything,
it's flex-start.

173
00:11:41.600 --> 00:11:48.644
So by default, it's flex-start which
is why you don't typically see it.

174
00:11:48.644 --> 00:11:51.560
Okay, justify-content center
as you might imagine,

175
00:11:51.560 --> 00:11:53.770
squishes everything into the middle.

176
00:11:53.770 --> 00:11:56.990
Now notice, we're not doing
anything vertically at all yet, and

177
00:11:56.990 --> 00:11:58.940
you can see this box here.

178
00:12:00.850 --> 00:12:03.880
This shows you that this is how
tall the element is, right?

179
00:12:03.880 --> 00:12:07.540
Cuz it's as tall as number three is, but
we're just moving things left and right.

180
00:12:07.540 --> 00:12:11.568
We're not moving anything up and down yet.

181
00:12:11.568 --> 00:12:14.480
So this is what justify-content center
does, it moves everything to the middle.

182
00:12:14.480 --> 00:12:17.620
I want you to be extremely
grateful right now

183
00:12:17.620 --> 00:12:19.719
that this is how easy
it is to center things.

184
00:12:20.750 --> 00:12:25.889
The like goats I had to
sacrifice [LAUGH] to

185
00:12:25.889 --> 00:12:33.310
get things to center previously,
not proud of what I did.

186
00:12:33.310 --> 00:12:35.640
[LAUGH] Centering used to be
an extremely difficult thing to do.

187
00:12:37.520 --> 00:12:40.450
But now with flex,
it's just really simple.

188
00:12:40.450 --> 00:12:42.985
Or I'll go with more
simple than it was before.

189
00:12:45.589 --> 00:12:49.438
&gt;&gt; Brian Holt: So now if I want to space
things out evenly, where the left and

190
00:12:49.438 --> 00:12:53.588
the right are as far to the left and
right as they possibly can, and

191
00:12:53.588 --> 00:12:57.460
then have equal space in between,
you can do space between.

192
00:12:59.530 --> 00:13:03.986
So it will optimize to make these things
as evenly spaced as it possibly can.

193
00:13:07.681 --> 00:13:09.427
&gt;&gt; Brian Holt: And then space around,

194
00:13:09.427 --> 00:13:15.017
what it's going to do is it's going to
put space between the flex-start and

195
00:13:15.017 --> 00:13:19.140
the flex-end,
as well as space between these things.

196
00:13:19.140 --> 00:13:23.634
So there's a space around
where the beginning and

197
00:13:23.634 --> 00:13:28.238
the end is half of these ones,
if that makes sense.

198
00:13:28.238 --> 00:13:30.462
You can also do space evenly, and

199
00:13:30.462 --> 00:13:33.884
then everything will be
spaced literally evenly.

200
00:13:37.717 --> 00:13:39.345
&gt;&gt; Brian Holt: I tend to
use space between more.

201
00:13:43.026 --> 00:13:47.026
&gt;&gt; Brian Holt: Not space-between but
space-around, rather.

202
00:13:48.522 --> 00:13:50.280
&gt;&gt; Brian Holt: Any questions
about justify-content?

203
00:13:53.130 --> 00:13:55.700
So again, that's left and
right not up and down.

204
00:13:55.700 --> 00:13:58.531
Now we're gonna do align-items
which is up and down.

205
00:14:05.229 --> 00:14:06.315
&gt;&gt; Brian Holt: So align-items.

206
00:14:11.193 --> 00:14:16.980
&gt;&gt; Brian Holt: I don't know why needed to
do that, should just be able to do that.

207
00:14:18.220 --> 00:14:23.290
Anyway, so flex-end, align-items flex-end.

208
00:14:23.290 --> 00:14:25.940
That's moving everything from the top.

209
00:14:25.940 --> 00:14:30.235
It's actually gonna be on the bottom now,
so this is aligned against the bottom,

210
00:14:30.235 --> 00:14:32.680
it's not aligned against the top.

211
00:14:32.680 --> 00:14:35.897
&gt;&gt; Brian Holt: Again, previously this
would have been extremely difficult and

212
00:14:35.897 --> 00:14:37.730
now it's just like one property.

213
00:14:37.730 --> 00:14:40.649
It's just align-items flex-end, and
everything just moves down to the bottom.

214
00:14:42.390 --> 00:14:43.293
It moves down to the bottom, right.

215
00:14:43.293 --> 00:14:47.413
Notice that this container is
as big as number 3, right,

216
00:14:47.413 --> 00:14:52.640
cuz that's the tallest one, and
it moves everything to the bottom of 3.

217
00:14:52.640 --> 00:14:56.529
So I could say here like,

218
00:15:01.232 --> 00:15:05.650
&gt;&gt; Brian Holt: padding-top, 20 pixels.

219
00:15:05.650 --> 00:15:08.571
And notice that everything continues
moving down to the bottom as far as it

220
00:15:08.571 --> 00:15:09.381
could possibly go.

221
00:15:13.858 --> 00:15:15.026
&gt;&gt; Brian Holt: So that make sense?

222
00:15:15.026 --> 00:15:15.943
Cool.

223
00:15:21.613 --> 00:15:25.542
&gt;&gt; Brian Holt: Align-items, center, so
now this is going to vertically center it.

224
00:15:27.650 --> 00:15:30.710
&gt;&gt; Brian Holt: So this one has equal
space here to equal space there.

225
00:15:30.710 --> 00:15:32.400
Equal space, equal space, right?

226
00:15:32.400 --> 00:15:34.457
And this one's up against the top and
the bottom.

227
00:15:39.793 --> 00:15:40.640
&gt;&gt; Brian Holt: Okay?

228
00:15:40.640 --> 00:15:41.660
Align-items, stretch.

229
00:15:41.660 --> 00:15:44.770
This is the only one that I had to modify,
actually, the boxes themselves

230
00:15:44.770 --> 00:15:47.950
because if you set a height,
it will actually respect the height.

231
00:15:47.950 --> 00:15:50.270
And I wanted it to actually
just stretch everything out.

232
00:15:50.270 --> 00:15:53.920
So if you say align-items, stretch,
anything that doesn't have a height

233
00:15:53.920 --> 00:15:58.920
necessarily, it's going to stretch
out to fit inside of that div, right.

234
00:15:58.920 --> 00:16:01.390
So this stretches from the top to
the bottom, top to the bottom,

235
00:16:01.390 --> 00:16:01.919
top to the bottom.

236
00:16:04.519 --> 00:16:07.095
&gt;&gt; Brian Holt: So I had to set a height
here of how much I want this to stretch.

237
00:16:07.095 --> 00:16:13.633
So if I set this to 400,
it'll be stretched even further.

238
00:16:13.633 --> 00:16:16.393
Really, really cool stuff that's really
easy to change with just a couple of

239
00:16:16.393 --> 00:16:16.907
properties.

240
00:16:24.849 --> 00:16:30.589
&gt;&gt; Brian Holt: Or I mean, really just
awesome stuff you could do here.

241
00:16:30.589 --> 00:16:36.799
If I said get rid of that no height thing,
and I got rid of this height thing,

242
00:16:36.799 --> 00:16:44.340
so now this container doesn't actually
have any sort of height set on the parent.

243
00:16:44.340 --> 00:16:50.272
But if I come in here and say box-3,
&gt;&gt; Brian Holt: And

244
00:16:50.272 --> 00:16:56.814
I set just the heights of
box-3 to be 250 pixels.

245
00:16:59.209 --> 00:17:01.440
&gt;&gt; Brian Holt: Yeah, no,
I messed up a lot of things by doing that.

246
00:17:01.440 --> 00:17:07.157
Notice that,
it's stretched its sibling containers

247
00:17:07.157 --> 00:17:13.749
to match the height of the tallest
element, which is awesome.

248
00:17:13.749 --> 00:17:18.920
It's really cool that you can
just set one of the heights and

249
00:17:18.920 --> 00:17:21.931
all of them stretch to match that.

250
00:17:21.931 --> 00:17:25.655
You might be thinking like,
okay, cool, I don't care,

251
00:17:25.655 --> 00:17:28.190
it was so hard to do that before.

252
00:17:28.190 --> 00:17:29.440
So, so hard.

253
00:17:31.110 --> 00:17:33.525
So I'm using the cascade
like I told you not to.

254
00:17:33.525 --> 00:17:36.810
[LAUGH] And I'm telling it, hey,

255
00:17:36.810 --> 00:17:40.650
you previously had height set on you,
ignore it.

256
00:17:40.650 --> 00:17:45.365
So it's saying that you had
something set on you, ignore it, and

257
00:17:45.365 --> 00:17:50.363
just get whatever the parent,
the ancestor height was previously.

258
00:17:50.363 --> 00:17:51.414
Make sense?

259
00:17:51.414 --> 00:17:54.641
&gt;&gt; Speaker 2: Because
the ancestor inside the parent?

260
00:17:54.641 --> 00:17:56.448
&gt;&gt; Brian Holt: Either.

261
00:17:56.448 --> 00:18:01.371
So it's in this case like I have
up here box 1, box 2, and box 3.

262
00:18:01.371 --> 00:18:06.290
So their heights set way up there,
I'm telling you to ignore those.

263
00:18:06.290 --> 00:18:12.160
&gt;&gt; Speaker 2: And then whatever is after
it to pick, why did you do the inherit?

264
00:18:12.160 --> 00:18:15.300
&gt;&gt; Brian Holt: Cuz if I do this
then they're gonna have height.

265
00:18:15.300 --> 00:18:17.717
And so the stretch isn't gonna work.

266
00:18:17.717 --> 00:18:18.495
&gt;&gt; Speaker 2: Okay.

267
00:18:18.495 --> 00:18:21.293
&gt;&gt; Brian Holt: And that stretch is
only gonna work when they don't

268
00:18:21.293 --> 00:18:22.279
have height set.

269
00:18:22.279 --> 00:18:23.122
&gt;&gt; Speaker 2: Okay.

270
00:18:26.289 --> 00:18:27.364
&gt;&gt; Brian Holt: Good question.

271
00:18:28.993 --> 00:18:32.669
&gt;&gt; Speaker 2: And then I'm assuming
once we get further into it,

272
00:18:32.669 --> 00:18:35.833
instead of saying height is 200 pixels,

273
00:18:35.833 --> 00:18:41.120
you'll be able to set it according
to your device size, right?

274
00:18:41.120 --> 00:18:43.560
So you could do some sort of variable?

275
00:18:43.560 --> 00:18:46.985
&gt;&gt; Brian Holt: Sure,
you can say things like width 50%.

276
00:18:46.985 --> 00:18:47.671
&gt;&gt; Speaker 2: Okay.

277
00:18:47.671 --> 00:18:50.680
&gt;&gt; Brian Holt: Yeah, and that's actually
probably what we're gonna use the most.

278
00:18:50.680 --> 00:18:53.210
I don't really talk too much
about responsive webdesign,

279
00:18:53.210 --> 00:18:54.730
like responsive coding.

280
00:18:54.730 --> 00:18:58.780
That's the name of that technique,
is making things like fit screens.

281
00:18:58.780 --> 00:19:02.388
Cuz scrolling side to side on
a phone is like the great evil,

282
00:19:02.388 --> 00:19:03.842
[LAUGH] I don't like it.

283
00:19:05.571 --> 00:19:07.986
&gt;&gt; Brian Holt: You do that
using percentages and

284
00:19:07.986 --> 00:19:12.815
another thing called media queries,
which are kind of an advanced

285
00:19:12.815 --> 00:19:16.970
feature in CSS worth investigation and
understanding.

286
00:19:18.280 --> 00:19:20.344
You do have a responsive course,
don't you?

287
00:19:20.344 --> 00:19:24.884
&gt;&gt; Speaker 3: Yeah, the title of the
course is responsive design with CSS and

288
00:19:24.884 --> 00:19:26.115
flexible apps.

289
00:19:26.115 --> 00:19:26.615
&gt;&gt; Brian Holt: Cool.

290
00:19:27.980 --> 00:19:33.340
Yeah, and grid in particular,
is really, really cool cuz you

291
00:19:33.340 --> 00:19:36.760
can make your page into like a grid
of things, and you say okay,

292
00:19:36.760 --> 00:19:39.790
this takes up one unit, this takes up
two units, and this takes up one unit.

293
00:19:39.790 --> 00:19:42.300
And it just kind of like,
figures out all those spacing for

294
00:19:42.300 --> 00:19:43.550
you, which is really cool.

295
00:19:44.860 --> 00:19:46.653
So yes, the answer for
your question is yes.

296
00:19:48.468 --> 00:19:50.050
&gt;&gt; Brian Holt: Other questions?

297
00:19:50.050 --> 00:19:51.197
Great questions so far.

298
00:19:55.529 --> 00:19:58.935
&gt;&gt; Brian Holt: Cool, so what I wanted
to show you here is you can start

299
00:19:58.935 --> 00:20:02.850
combining these things to
get really cool effects.

300
00:20:02.850 --> 00:20:05.770
So one that I will use
quite often is I'll have

301
00:20:05.770 --> 00:20:08.110
a div that's gonna be of a certain size.

302
00:20:08.110 --> 00:20:12.050
And I want to make sure everything
is horizontally centered and

303
00:20:12.050 --> 00:20:12.800
vertically centered.

304
00:20:12.800 --> 00:20:14.890
So I will justify center and
align item center.

305
00:20:14.890 --> 00:20:16.550
And that just makes
everything sit in the middle.

306
00:20:16.550 --> 00:20:21.135
If you remember at the top,
if you go up here to the top of the page.

307
00:20:24.180 --> 00:20:27.900
&gt;&gt; Brian Holt: See how this box 2 is
sitting exactly in the middle of the div?

308
00:20:29.040 --> 00:20:30.230
The way that I did that,

309
00:20:30.230 --> 00:20:34.860
if you notice, display flex,
align item center, justify content center.

310
00:20:34.860 --> 00:20:39.440
And that make everything just be exactly
in the middle of the box at all times.

311
00:20:39.440 --> 00:20:43.930
And what's nice about that,
if I make this width 400, still centered.

312
00:20:43.930 --> 00:20:48.904
If I do this height 400, still centered.

313
00:20:48.904 --> 00:20:51.664
If you want to make this width,

314
00:20:53.672 --> 00:20:57.498
&gt;&gt; Brian Holt: Let's say 50%.

315
00:20:57.498 --> 00:20:59.535
No, that's too big because
there's margins around it.

316
00:20:59.535 --> 00:21:03.333
But let's say 40%.

317
00:21:03.333 --> 00:21:09.100
Everything is still totally centered
in terms of the box 2 inside of it.

318
00:21:09.100 --> 00:21:13.569
So, that's the trick for
centering something inside of something,

319
00:21:13.569 --> 00:21:18.210
is display flex, align-item center,
and justify-content center.

320
00:21:18.210 --> 00:21:20.105
You'll use that quite a bit.

321
00:21:24.988 --> 00:21:28.140
&gt;&gt; Brian Holt: Cool, so yeah.

322
00:21:28.140 --> 00:21:33.820
This is a line item, center, reverse,
and justify content space around.

323
00:21:33.820 --> 00:21:39.967
That's what that looks like or
if I do flex-container, align items,

324
00:21:39.967 --> 00:21:46.123
flex end, and column looks like that
pushed up in a column on the right.

325
00:21:48.130 --> 00:21:51.042
&gt;&gt; Brian Holt: So I'm teaching you
a bunch of these individual properties in

326
00:21:51.042 --> 00:21:54.630
a vacuum, and the truth is, you don't
really use them in a vacuum too much.

327
00:21:54.630 --> 00:21:58.502
It's usually in conjunction with a bunch
of these properties to achieve some

328
00:21:58.502 --> 00:22:00.776
effects that you're trying to see, right?

329
00:22:00.776 --> 00:22:03.975
I don't know why you would make something
look like that, but for some reason,

330
00:22:03.975 --> 00:22:06.767
some day, you're gonna have to,
and that's how you do it, right?

331
00:22:06.767 --> 00:22:11.409
Cuz you combine all these things together
to get everything pushed to the right and

332
00:22:11.409 --> 00:22:12.156
in a column.

333
00:22:14.581 --> 00:22:15.832
&gt;&gt; Brian Holt: Questions?

334
00:22:21.263 --> 00:22:25.722
&gt;&gt; Brian Holt: Cool, we talked a hot
second about flex wrap which is right now,

335
00:22:25.722 --> 00:22:30.511
if you have too many things on a line,
it squishes them together, and

336
00:22:30.511 --> 00:22:33.360
it starts squishing their widths.

337
00:22:33.360 --> 00:22:37.240
And if you wanted to say no, if this is
too wide, if I have too many things on

338
00:22:37.240 --> 00:22:41.270
this line, go down to the next line,
that's flex wrap, that's what that does.

339
00:22:43.520 --> 00:22:49.180
And then the last thing is you can
start doing crazy stuff with order.

340
00:22:49.180 --> 00:22:54.300
So everything I showed you right
now goes on the container.

341
00:22:54.300 --> 00:22:56.140
The container, the parent level.

342
00:22:56.140 --> 00:23:04.780
There's actually properties that you
can do on the children themselves.

343
00:23:04.780 --> 00:23:06.500
So I'm wondering if I can just do this and
show you.

344
00:23:07.770 --> 00:23:10.900
I'm going to do it on this one actually.

345
00:23:12.390 --> 00:23:18.820
So if I do another style here, and

346
00:23:18.820 --> 00:23:24.890
I do box-2, dangers of live coding.

347
00:23:24.890 --> 00:23:28.074
If I do box-2 and

348
00:23:28.074 --> 00:23:33.190
I say align self flex-end.

349
00:23:33.190 --> 00:23:40.320
I can actually individually move boxes and
I can even start messing with the order.

350
00:23:40.320 --> 00:23:45.402
I can say order 5, and
move that to the beginning from,

351
00:23:45.402 --> 00:23:52.076
whereas if I do .box-1 here,
&gt;&gt; Brian Holt: I

352
00:23:52.076 --> 00:23:59.308
can use order to move that like 10,
and that'll move it to the beginning.

353
00:23:59.308 --> 00:24:01.728
So the higher ones
are gonna be ordered first.

354
00:24:01.728 --> 00:24:05.786
Or but if I do like one then
it's gonna move it back, right.

355
00:24:05.786 --> 00:24:08.229
So now, you have two then one,
then one that's unordered.

356
00:24:09.730 --> 00:24:11.810
Again, this was totally impossible before.

357
00:24:11.810 --> 00:24:14.570
Like without flex and
being able to set order on these things.

358
00:24:17.190 --> 00:24:24.680
And again, you could do like align-self
here as well, align-self, flex-start.

359
00:24:24.680 --> 00:24:27.410
So now, this is in the bottom,
this is on the top, and

360
00:24:27.410 --> 00:24:29.575
this one's technically in the middle.

361
00:24:29.575 --> 00:24:34.373
So, crazy stuff.

362
00:24:34.373 --> 00:24:39.120
Pretty cool stuff anyway.

363
00:24:39.120 --> 00:24:40.660
I don't wanna get too much more into that.

364
00:24:40.660 --> 00:24:45.170
Well, you can see,
this got really messed up.

365
00:24:45.170 --> 00:24:50.599
[LAUGH] The place to look on this,
something I find myself

366
00:24:50.599 --> 00:24:57.194
constantly referring to CSS tricks,
a complete guide to flex box.

367
00:24:57.194 --> 00:25:00.398
I was talking to the guy
that writes this blog,

368
00:25:00.398 --> 00:25:03.121
this is by far their most popular page.

369
00:25:03.121 --> 00:25:07.625
Like literally like ten times more than
any other page, it's because there's a ton

370
00:25:07.625 --> 00:25:11.504
of stuff on here, it's impossible to
keep all these stuff in your head.

371
00:25:11.504 --> 00:25:13.658
There's just too much that
you can do with the flex-box.

372
00:25:13.658 --> 00:25:16.992
So this page is like a definitive
reference for it, and

373
00:25:16.992 --> 00:25:21.208
it's all really clear to understand,
which is what I like about it.

374
00:25:21.208 --> 00:25:23.263
So flex-directions on here.

375
00:25:23.263 --> 00:25:25.212
I didn't even talk about flex-grow,

376
00:25:25.212 --> 00:25:27.818
you can have things like
grow to take up their space.

377
00:25:27.818 --> 00:25:29.396
That's really interesting.

378
00:25:29.396 --> 00:25:33.439
You can tell them like, this one should
be twice as big as the next one.

379
00:25:33.439 --> 00:25:36.944
You can give them ratios like that,
which is really cool.

380
00:25:36.944 --> 00:25:39.678
There's some really,
really cool stuff you can do with it.

381
00:25:39.678 --> 00:25:44.003
So become familiar with this page.

382
00:25:44.003 --> 00:25:46.401
They have one for grid,
as well, which is quite good.

