[00:00:00]
>> Brian Holt: CSS selectors and the Cascade, so now we're gonna talk about the C part. We're gonna answer our friend's question, which one wins? Which is always a good question. So,
>> Brian Holt: The Cascade, this is always just the part that I get least excited to talk about. Okay, the Cascade is gonna cause you so many problems.

[00:00:24]
It's gonna take years of your life [LAUGH]. It's really cool, you can see why they created it, but I've worked in companies to see it used and abused so many terrible ways. That's why I get a little stressed out whenever I say the word Cascade. So,
>> Brian Holt: Let's say I have two paragraphs.

[00:00:53]
I must have broken this some way or other, but pretend this one's red and pretend this one's green, and I wanna make them style different ways. As you might imagine, I might use classes to differentiate the two. It's what we talked about previously. So I would say this one would be like, I don't know, error text, and this would be success text, or something to that effect, right?

[00:01:15]
Some semantic good naming thereof.
>> Brian Holt: So, we did that with the section on classes, and making sure that we have labelled them well and things like that. We do thing here like this one will be called branding, and this one will be called post add-on. This one have one set of styling, and this would be another set of styling.

[00:01:39]
This is what I'm saying here. We're going to using the style tag here, this is not typically how you would do it. You would typically have a separate CSS file and a separate HTML file, but for instruction purposes we're just doing it all in one file. Cool? The other thing I will tell you is that this style will bleed outside of this, just so you know.

[00:02:00]
So like, if I say like, all h1s on the page should be orange, this will affect the entire page. Just be aware that, if you start seeing things that look really weird, it's probably because you put something in the somewhere. Okay, so if I have an h1 here called branding and an h1 here called blog post title, and I want this one to be red and this one to be green.

[00:02:30]
Select branding, and this one, I select blog-post-title. The way that you differentiate that I'm asking for a class and not for a tag is you put this period here. This period before the selector means class.
>> Brian Holt: So yeah, just make sure you remember that the period means class.

[00:02:54]
If I wanna select the class called branding, I do .branding, or if I wanna do blog post title, it's .blog-post-title. If I delete this dot, it's gonna mess this up. It's gonna be looking literally for a tag called branding, which is not a real tag, but that's what it's going to be looking for.

[00:03:15]

>> Brian Holt: Does it make sense? So .branding,
>> Brian Holt: So that's what you look for. You look for the dot.
>> Brian Holt: Generally speaking, should you style on tags or classes? Always style in text, blog always style on. We just cut that part out [LAUGH] always style on classes. Don't style on text, hardly ever.

[00:03:45]
I would not suggest it. The only time that I would suggest styling on tags is if you literally mean everything in this document should look like this. And a good example of that was, if I'm doing a website like this one, this Intro to Web Dev. If I go look at this, you'll notice that all of my anchor tags, all of my links, look the same .That makes sense because now I want all anchor tags to look like that.

[00:04:12]
That would make sense for me to style via tag, but I only wanna do that if I literally need every single one. That makes sense? I would say that like I'm mostly giving you my opinion on these things. There might be people who disagree with me, but they would be wrong, first of all.

[00:04:29]
I don't think it's actually that controversial. I think most people would tell you a relatively similar thing. So, style by class, that's just kind of a thing you want to get used to. Mostly you should be styling by classes. You will have a lot of heartache that you will accidentally be styling things using tags that you can avoid if you always style by classes.

[00:04:58]
It's just a better idea.
>> Brian Holt: Bare on the side of using classes too much. If you're not sure one way or the other, just go with classes.
>> Brian Holt: It might mean like a tiny bit of extra writing, but doing a tiny bit of extra writing will save you a lot of heartache in the long run.

[00:05:20]

>> Brian Holt: Cool, any questions about that so far?
>> Brian Holt: Please.
>> Speaker 2: Can you show us how you would, I see that you're styling by class there, can you show us how you would style by tag?
>> Brian Holt: Yeah, you would just put h1, instead.
>> Speaker 2: With a dot?
>> Speaker 2: Okay.

[00:05:45]

>> Brian Holt: It's not gonna work for other reasons, which we'll get to literally in the next section.
>> Speaker 2: Okay, yeah, I was asking [INAUDIBLE].
>> Brian Holt: You wanted to know why it wouldn't work?
>> Speaker 2: Yeah, it wasn't working with mine, so I was wondering.
>> Brian Holt: Yeah, there are reasons, which we'll talk about, but good question.

[00:06:04]
Let's refresh this page with git brought something. Okay, that's an astute observation. So, you can see here I was sitting on the beach in Sydney actually when I was writing this section. I was like wish I could stop here, I can't [LAUGH]. So, this is the part where CSS, this to me is what we've done so is pretty fun.

[00:06:29]
I think you just like make a rule and see change, and it's kinda fun. There's a thing called the Cascade that has bitten in the ass so many times that it just It's not done, so I'm going to invite you to avoid using the Cascade as much as possible.

[00:06:49]
Like, keep your CSS as simple as possible and avoid making it more and more complex. And I'll give you some like war stories and horror stories towards the end when you understand a little bit more what I'm talking about. So the Cascade, someone asked before, what happens basically if I have two conflicting tags, right?

[00:07:08]
If I have two things that are both saying the same thing, one of them has to win, right? If I say, this one says green and this one says orange, and they both match, which one wins? Cuz there can only be, well, you know it's either gonna be green or it's gonna be orange.

[00:07:23]
It's not gonna be both and it's not gonna mix them. That would be way worse, so you can be grateful it doesn't do that. I should write a library that does that, that sounds terrible. Okay, terrible ideas. So if I have dot title here, dot title here. I think I've probably like ruined the surprise so far, because I scrolled down far enough.

[00:07:46]
Which one wins and why? Because these both are the same thing right? There's nothing preventing me from putting dot.title on there twice. Obviously green came out on top, but why?
>> Speaker 3: It came last.
>> Brian Holt: It came last. That's exactly the reason. These two are exactly the same. So when two things are considered equal in terms of CSS, the one that comes last wins.

[00:08:11]
Even if I had title and other-title, I'm not very creative right now.
>> Brian Holt: It still is selecting by one class, and it doesn't matter that they're different in any respect. They're both one class, so therefore the one that comes last wins. Good so far? So when everything is considered equal, the one that comes further down, wins.

[00:08:45]
Cool, so when you have two rules with the same class, it's legal. I would not suggest it. I can't see of any reason why you would want to separate those things out, but you can. It's legal, just don't. [LAUGH]
Which one gets applied? It's the one that's on the bottom, it'd be same if we had two different H one selectors as well.

[00:09:05]
So if this said H one and this one said H one, it would also be the one that came lower that would win. Okay, yeah. So what I wanted to point out here is, so yes these are two different classes here. So title two and main brand two, but notice one thing.

[00:09:26]
So I have main brand here two, which is losing on red, right? Because this one comes down, so this ends up being green, but this one does not specify border, right? It does get a black border because it's a result on a property by property basis, so this is one pixel solve.

[00:09:47]
Notice here that it does en up having black border. I can even actually, if I say border, style, dotted. Notice it has,- let's go with dashed to see a little better.
>> Brian Holt: So I see up here 1 pixel solid black and I change it to here so just the dashed part's being changed, right.

[00:10:11]
So it's even more granularly resolved. Does that makes sense? So I'm just overriding the border style, this is called the cascade. Just so you know, it's going through this cascading effect of trying to resolve the properties to kinda get down to one resolution of style. So we're dancing around this thing that is called, and again I hate this word specificity.

[00:10:43]
[LAUGH]
Like go around to a like a hardened friend and developer and ask them what they think about specificity. And you'll just see like they'll just get this like long glance, it's like a ten thousand foot glance and is like the stories I could tell you, right? Like it's just like I've been to war or something.

[00:11:05]
AnYou just end up with these like, I'm showing you here a very, very simple cases, but imagine this 14 layers deep and trying to figure out where the health of this style come from. That's why I'm telling you to keep everything really, really simple because the simpler you keep it the less prompts that you're gonna have about this.

[00:11:27]
Like I have some bad examples underneath here so you can see why.
>> Brian Holt: So let's keep going here. We did that
>> Brian Holt: Now, we're going to get into multiple classes. So, I have title three here, right. So, this has title three and main brand three. But, now up here I have main brand 3.title-3, and which colour wins?

[00:12:00]
Red. Because it is more specific. It has two classes, this only has one class. This one is therefore more specific and therefore wins. This is the specificity part of this. Now notice there is no space here. Between three and dot tittle. Right? It's right there. It's shot together.

[00:12:25]
If I put a space there, I break it. So, he said it needs to be shot together and they're separated by a period. Cuz it's the main brand and it's also the title classes. Both of those classes which it has. So, there's no space between them. Therefore it wins because it has two classes.

[00:12:50]
Now keep in mine that this h1 down here has to match both of those classes. It must have title-3 and it must have main-brand-3. Just to show you. If this just has title-3 Notice it's green because it doesn't match the entire selector. So it must match everything in this selector.

[00:13:12]
Does that make sense?
>> Speaker 4: Yes.
>> Brian Holt: Okay. Next steps here. Each one comeslower on the page And title-4.
>> Brian Holt: Notice which one it went here, orange.
>> Brian Holt: Why? Because classes are more specific than tags.
>> Brian Holt: Why? I don't know. Why do we do anything? It just is. So let me give you a little device to see if this helps you kind of determine.

[00:13:57]
You can kind of think of it as being like a number where the first number is how specific the tag part is, the second number is how specific the class part is so. I think I have it done here. Yeah. So this has one class so it's 10 specific.

[00:14:19]
And this has one tag so it's one specific, right. Whereas if I had like 3 classes, it be like 30, right. So you can think of this tens place as being how many classes there are And the ones place of being how many tags there are. So if I had 3 classes, that's 30, compared to like 5 tags, which is impossible but ignore that for a second.

[00:14:43]
The 30 would be bigger than the 5, so therefore the classes would win. Doesn't totally work out. If I had 11 Tags one class would still be more specific. So it's just kind of a mental device that's kind of imperfect but just think of class as being more specific than text.

[00:15:01]
That's all totally what I'm trying to get out here.
>> Brian Holt: So, let's move on and just get this even more complicated. So I have title-5 main-brand-5. It's an h1. h1.main-brand-5 .main-brand-5.title-5 and .main-brand. So this one is one tag and one class. Two tags and one tab, sorry Two classes in one class.

[00:15:36]
So thinking about it, this is one tag. This is like eleven, right? This is like twenty. This is like one. No sorry, this is like ten. So therefore the one that is twenty wins, right? So the one with two classes, so therefore it becomes orange. Does that make sense?

[00:16:03]
Okay.
>> Brian Holt: This is how you do tags and classes together, right? This is an h1, right, has no period in front of it, and then .main-brand-5, right? So that's how you get the Tag and class selector together. I to not do this. This is usually not a good idea to do the tags and classes together.

[00:16:25]
The reason being is like it should usually just be enough for you to have just main-brand-5 like that should be it. And you shouldn't Really be mixing tags in classes like if something is made for H1s it should always be on H1s. So you don't want normally want to select H1s differently than H2s.

[00:16:43]
Like it wouldn't make a ton of sense for me to do have like an H2 main brand five. That's really strange and it's gonna be hard to follow when you're trying to write this code later so I would stay away from that.
>> Brian Holt: Again, just in general avoid styling by tag, it's just not a good idea.

