[00:00:00]
>> Brian Holt: CSS Selectors and the Cascade, so now, we're gonna talk about the C part, we're gonna answer our friend's question, which one wins? Which is always a good question.
>> Brian Holt: So the cascade, this is always just the part that I get least excited to talk about. Okay, the cascade is gonna cause you so many problems, it's gonna take years off your life.

[00:00:27]
[LAUGH] It's really cool, you can see why they created it, but I've worked at enough companies to see it used and abused in so many terrible, terrible ways. That's why I get a little stressed out whenever I say the word cascade.
>> Brian Holt: Let's say, I have two paragraphs.

[00:00:53]
I must have broken this somewhere, but pretend this one's red and pretend this one's green, and I wanna make them styled different ways. As you might imagine, I might use classes to differentiate the two, what we talked about previously. So I would say this one would be like, I don't know, error text and this one would be success text or something to that effect, some semantic, good naming, thereof.

[00:01:19]
So we did that with the section on classes, making sure that we labeled them well and things like that. We single them here like this one would be branding and this one would be called post title. And this one have one set of styling and this would be another set of styling.

[00:01:39]
This is what I'm saying here, we're gonna be using the style tag here. This is not typically how you would do it, you would typically have a separate CSS file and a separate HTML file. But for instruction purposes we're just doing it all in one file, cool? The other thing I will to tell you is that this style will bleed outside of this [LAUGH] just so you know.

[00:02:00]
So if I say all h1s on the page should be.
>> Brian Holt: Orange, this will affect the entire page. So just be aware that if you start seeing things that look really weird, it's probably because you put something in a code block somewhere, okay. So if I have an H1 here called branding, and an H1 here called blog post title, and I want this one to be red and this one to be green, this one I select branding and this one I select, blog-post-title.

[00:02:36]
The way that you differentiate that I'm asking for a class and not for a tag is you put this period here. This period before the selector means class.
>> Brian Holt: So yeah, just make sure you remember that, the period means class. So if I want to select the class called branding, I do dot branding or if I want to do blog-post-title, it's .blog-post-title.

[00:03:04]
If I delete this dot, it's gonna mess this up, it's gonna be looking literally for tag called branding, which is not a real tag, but that's what it's going to be looking for. Does that make sense? So .branding.
>> Brian Holt: So that's what you look for, you look for the dot.

[00:03:30]

>> Brian Holt: Generally speaking, should you style on tags or classes? Always style in tags. Can we just cut that part out? Always style in classes. Don't style on tags, hardly ever. I would not suggest it. The only time I would suggest styling on Tags is if you literally mean everything in this document should look like this.

[00:03:56]
And a good example of that was if I'm doing a website like this one, this Intro to Web Dev. And if I go look at this, you'll notice that all of my anchor tags, all of my links look the same, that makes sense. Because now, I want all anchor tags to look like that.

[00:04:12]
That would make sense for me to style by a tag. But I only want to do that, if I literally mean every single one. That make sense? I would say, I've giving most of my opinion on these things. There might be people that disagree with me but they would be wrong, first of all.

[00:04:30]
And second, I don't think it's actually that controversial. I think most people would tell you a relatively similar thing.
>> Brian Holt: So style by class, that's just kind of thing that you want to get used to, mostly you should be styling by classes.
>> Brian Holt: You will have a lot of heartache that you'll accidently be styling things, using tags that you just can avoid if you always style by class.

[00:04:58]
It's just a better idea.
>> Brian Holt: On the side of using classes too much. If you're not sure one way or the other just go with classes. It might mean a tiny bit extra writing, but doing a tiny bit of extra writing will save you a lot of heartache in the long run.

[00:05:20]
Cool, any questions about that so far?
>> Brian Holt: Please.
>> Speaker 2: Can you show us how you would, I see that you're styling by class there. Can you show us how you would style by tag?
>> Brian Holt: Yeah, if you would just put H1 instead.
>> Speaker 2: With a dot?
>> Speaker 2: Okay.

[00:05:45]

>> Brian Holt: It's not gonna work for other reasons.
>> Speaker 2: Okay.
>> Brian Holt: Which we will get to literally the next section.
>> Speaker 2: Okay, I was just asking-
>> Brian Holt: You want to know why it won't work?
>> Speaker 2: Yeah, it wasn't working with mine so.
>> Brian Holt: Yeah, there are reasons, which we will talk about.

[00:05:59]
But good question.
>> Brian Holt: Let's refresh this page, I think, I broke something, okay. That's an astute observation. So, [LAUGH], you can see here. I was sitting on the beach in Sydney actually when I was writing this section. I was like, I wish I could stop here, I can't.

[00:06:23]
[LAUGH] So this is the part where CSS, to me what we've done so far is pretty fun. You just make a rule and see change and it's kind of fun. There's a thing called the cascade that has bitten me in the ass so many times that it just.

[00:06:41]
That's high five. So I'm going to invite you to avoid using the cascade as much as possible. Like keeping CSS as simple as possible, and avoid making it more and more complex. And I'll give you some like war stories and horror stories towards the end when you understand a little bit more what I'm talking about, so the cascade.

[00:07:04]
Someone asked before, what happens basically if I have two conflicting tags, right. If I have two things that are both saying the same thing, one of them has to win right. If I say, this one says green and this one says orange and they both match, which one lives.

[00:07:19]
Cuz there can only be It's either going to be green or it's going to be orange. It's not gonna be both. It's not gonna mix them. That would be way worse. [LAUGH] So you can be grateful it doesn't do that. I should write a library that does that.

[00:07:31]
That sounds terrible. Okay, terrible ideas. So if I have dot title here, dot title here I think I probably ruined the surprise so far, because I scrolled down far enough. Which one wins and why? Cuz these both are the same thing, right? There's nothing preventing me from putting .title on there twice.

[00:07:54]
Obviously, green came out on top, but why?
>> Speaker 2: Because it came last.
>> Brian Holt: It came last, that's exactly the reason. If these two are exactly the same. So when two things are considered equal in terms of CSS, the one that comes last wins. Even if I had title and other title.

[00:08:16]
I'm not very creative right now.
>> Brian Holt: It still is selecting by one class and it doesn't matter that they're different in any respect. They're both one class so therefore the one that comes last wins. Good so far? So when everything's considered equal the one that comes further down Wins.

[00:08:45]

>> Brian Holt: Cool, so when you have two rules with the same class, it's legal. I would not suggest it. I can't see of any reason why you would want to separate those things out, but you can. It's legal, just don't. [LAUGH] Which one gets applied? It's the one that's on the bottom.

[00:09:03]

>> Brian Holt: It'd be the same if we had two different h1 selectors as well. So if this said h1 and this one said h1, it would also be the one that came lower that would win, okay?
>> Brian Holt: Yeah, so what I wanted to point out here is, so yes, these are two different classes here, so title-2 and main-brand-2.

[00:09:24]
But notice one thing, so I have main-brand here, too, which is losing on red, right? Because this one comes down, so this ends up being green. But this one does not specify border, right? So it does get a black border because its result on a property by property basis.

[00:09:45]
So this is one pixel, saw it black, notice here that it does end up having a black border. If I say border-style, dotted, notice that it has a, let´s go with dashed, so you can see it a little bit better.
>> Brian Holt: So I say up here, 1px solid black and I changed it here.

[00:10:07]
So just the dashed part is being changed, right? So it's even more granularly resolved. Does that make sense? So I'm just overriding the border style.
>> Brian Holt: This is called the cascade just so you know. It's going through this cascading effect of trying to resolve the properties to kind of get down to one resolution of style.

[00:10:37]

>> Brian Holt: So we're dancing around this thing that is called. And again, I hate this word, specificity. [LAUGH] Go around to a hardened front end developer and ask them what they think about specificity. And they'll get this long glance, this 10,000 foot glance, and it's like all the stories I could tell you.

[00:11:00]
It's like they've been to war or something.
>> Brian Holt: You just end up with these rat´s nests. I´m showing you here very, very simple cases, but imagine this 14 layers deep. And you´re trying to figure out where the hell did this style come from? That's why I'm telling you to keep everything really, really simple because the simpler you keep it, the less problems that you're gonna have with this.

[00:11:27]
I have some bad examples underneath here, so you can see why.
>> Brian Holt: So let's keep going here, we did that.
>> Brian Holt: Now, we're going to get into multiple classes. So I have title-3 here, right? So this has title-3 and main-brand-3. Now, up here I have main-brand-3.title-3. And which color wins?

[00:12:00]
Red because it is more specific. It has two classes, this only has one class. This one is therefore, more specific and therefore, wins. This is a specificity part of this. Now, notice there is no space here between 3 and .title, right? It's right there shoved together. If I put a space there, I break it.

[00:12:27]
So they need to be shoved together and they're separated by a period. Cuz it's the main brand and it's also the title classes, both of those classes which it has.
>> Brian Holt: So there's no space between them, therefore, it wins because it has two classes. Now, keep in mind that this h1 down here has to match both of those classes.

[00:12:54]
It must have title-3 and it must have, I mean, brand-3. Just to show you, if it just has title-3,
>> Brian Holt: Notice, it's green because it doesn't match the entire selector. So it must match everything in the selector. That make sense, okay?
>> Brian Holt: Next steps here, h1 comes lower on the page and title four.

[00:13:29]
Notice which one wins here, orange, why? Because classes are more specific than tags.
>> Brian Holt: Why? I don't know. Why do we do anything? [LAUGH] It just is. So let me give you a little device to see if this helps you determine. You can think of it as being a number where the first number is how specific the tag part is.

[00:14:04]
The second number is how specific the class part is. So I think, I have it down here. Yeah, so this has one class, so it's ten specific, and this has one tag, so it's one specific, right? Whereas, if it had three classes, it'd be 30, right? So you can think of this tens place as being how many classes there are and the ones place of being how many tags there are.

[00:14:35]
So if I had three classes, that's 30 compared to like, five tags which is impossible, ignore that for a second. The 30 would be bigger than the five therefore the classes would win. It doesn't totally work out. If I had 11 tags, one class would be still more specific.

[00:14:53]
So it's just kind of a mental device that's kind of imperfect. But just think of classes being more specific than text, that's ultimately what I'm trying to get at here.
>> Brian Holt: So let's move on and just get this even more complicated
>> Brian Holt: So I have title-5 main-brand-5, it's in h1.

[00:15:16]
Each one main-brand-5. So this one is one tag, and one class, two tags, and one, or sorry, two classes in one class. So thinking about it, this is one tag. This is 11, right? This is 20 and this is one. Sorry, this is ten. So therefore, the one that's 20, wins.

[00:15:49]
So the one with two classes becomes orange. Does that make sense, okay?
>> Brian Holt: This is how you do tags and classes together, right? This is an h1, has no period in front of it and then a .main-brand-5, right? So that's how you get the tag and class selector together.

[00:16:19]
I'll invite you to not do this. This is usually not a good idea, to do tags and classes together, the reason being it should usually be enough for you to have just name-brand-5. That should be it and you shouldn't really be mixing tags and classes. If something is made for h1's, it should always be on h1's.

[00:16:40]
So you don't normally want to select h1's differently than h2's. It wouldn't make a ton of sense for me to do, to have an h2 main-brand-5. That's really strange, and it's gonna be hard to follow when you're trying to write this code later. So I would stay away from that.

[00:17:01]

>> Brian Holt: Again, just in general, avoid styling by tag, it's just not a good idea.

