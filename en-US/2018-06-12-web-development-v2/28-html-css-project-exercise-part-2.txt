[00:00:00]
>> Brian Holt: Hopefully, the project was interesting. If you were looking, like as a side note, for people looking at the website this morning, it was broken and not sure why it is unbroked, I think. If it is currently still broken for you, make sure you do like a hard refresh.

[00:00:16]
So that's like Shift, Command R on Mac. And other buttons on other browsers. Just yeah, Google it. That's what I would say. But if you're seeing images, then it unbroke. Okay, so, it sounds like most people were able to do pretty well with the project. If not, we're gonna work through it right now and you can kinda see where you went.

[00:00:41]
How you did in different things. So if you click here, this is kind of what we're looking at. We'll do this title first then we'll kind of move down the rows. Does anyone have any questions about it before we move forward?
>> Brian Holt: If you want to see this page, I made a little bitly link for it.

[00:01:05]
It's bit.ly/news-project. Let me just make that a little bit bigger on something, so that you can see it. So, that this top link right here, this is if you lost the link to the current project website, intro-web-dev, and this is news-project. That's just gonna take you to this.

[00:01:33]
So just some easy, short links for you. I'm gonna open my project in Visual Studio code.
>> Brian Holt: So to remind you, this is how you open something using using your browser from your file system. You hit File, Open File, this should work on Windows, this should work on every operating system.

[00:01:53]
File open, well that's Command+O, I also believe it's Ctrl+O for Windows. It'll open this dialog and then you just gotta go find where you put it. For me it's on my desktop. Desktop, right there. FEM and find the index.html file. And if you open that, you should see whatever you have written so far which for me it's thins profound statement from the scholar Bryan.

[00:02:24]
So, let's just talk about like how you kind of break this down into a smaller problem that you can solve. So, pretending that someone gave me this, not the complete product. We'll ignore that for now. But, pretending more that someone gave me like this image, right, like this non-interactive image.

[00:02:43]
Because like here, I've made this in InDesign, I want you to turn this into HTML and CSS, right? This is very common level. This is how you'll interact a lot of times with designers, like here's my design, now go make this a thing. Go make it work. So the first thing what I would do is look at this as I kinda see three kind of hard sections.

[00:03:03]
So I see the tile part, like the news times at the top. I see this top row here and then I see the bottom row, and so there's kind of three things that I'm gonna break this problem down into. So, the first thing I'm gonna start with here is the news times part.

[00:03:17]
So, get rid of this. And, I'm gonna make this something like, you could make it a div, you could make it a section. We'll go with a section. Like I said, there's no difference between a div and a section. But you're kinda just letting like, here's a partition.

[00:03:35]
So some sort of partition on your web site is a good place to use a section instead of a div. It has more meaning than a div. So it doesn't actually matter. It's not actually going to change anything. This is actually like documentation for your future self. That's how you choose which kind of tag you're gonna use.

[00:03:50]
So we're gonna use a section. It actually says right there. A section element represents a generic section of a document or an application. Thanks, code. [LAUGH] So, that's pretty cool. You can even just make this an H1 all together.
>> Brian Holt: We can do that. Let's do that. Each one.

[00:04:11]
Class, we're gonna call it like the main title or main brand. Let's go with main brand. And you can call it whatever you want to call your fictitious newspaper. It doesn't have to be the News Times. That was my, I kinda based this on the New York Times.

[00:04:28]
That's why I came up with News Times. [LAUGH] But, up to you. Okay, so I have the News Times. I come over here, and I have this now very, very nice looking whatever right here. The News Times, this is exactly what I wanted to do. [LAUGH]
>> Brian Holt: So I'm gonna come over here, and I'm gonna go to my style.css.

[00:04:50]
I'm gonna change this to main-brand, and I'm gonna make this much larger, like font-size. And when writing CSS, it is a ton of guess and check, right? So I'm just gonna say, what happens if this is 50 pixels big? Refresh the page, nah, maybe a bit bigger. Let's do 60 pixels.

[00:05:15]

>> Brian Holt: Cool, bless you.
>> Brian Holt: So I have that, and now I'm gonna come back over here. It's like okay, I want this to be centered, so I'm gonna say text-align Center and I wanna say font-weight normal cuz I don't want it to be bold. And then you're gonna do font-family and cursive sounds nice.

[00:05:41]
So now if I come over here and refresh. That's kind of a weird looking News Times but sure, that's close enough. What did I actually do? I actually used some specific font on here, if you wanna see what I actually used, Snell Roundhand. You should have guessed that, I'm very disappointed in all of you.

[00:06:03]
[LAUGH] Yep. This is all of your faults. Now there's a thing on Mac called font book, that you can just kinda browse through and see what's actually stored on your computer. So, here's like brush script MT. That's what that looks like. This is not typically what you do.

[00:06:22]
This is more for like fun stuff. Because these are things that will be on Macs and they won't be on other things, which is obviously an unacceptable tradeoff if you were working on something like Netflix.com. But, nonetheless, or you can even do this. Let's just, for fun, there's a thing called Google fonts.

[00:06:41]
Click on this. It's just a ton, a ton, a ton, a ton of fonts, right? I want something that's gonna be cursive. Here you go. We actually just want handwriting.
>> Brian Holt: So there's this. This looks kind of nice, right? The dancing script. Or how about here, great vibes, that looks perfect, right?

[00:07:06]
So we click on great vibes, you can see what the font looks like, then down here at the bottom somewhere, where is it, I haven't used this a lot, select this font.
>> Brian Holt: Okay, and then you click on that and then you get this link tag right here.

[00:07:25]
You just copy and paste this, this little thing right here. You come into your index.html and you just paste it above your CSS. So this is going to bring in a CSS file from Google, and it's going to bring this Great Vibes. This is okay because now, this is going to download that font onto every person that visits your website.

[00:07:47]
Which is pretty cool, right? So, I wanna then copy and paste this font family, right here, down here at the bottom. I'm gonna put that into my CSS, right where I wanna use it.
>> Brian Holt: So instead of Cursive here I'm gonna have font-family, Great Vibes, Cursive. What does this mean?

[00:08:07]
It means that it's gonna try for Great Vibes, if it doesn't find that it's gonna say, cool, just put on Cursive of some sort. Which just means you're gonna get this weird one that we have on there already.
>> Brian Holt: So it's gonna look like that but if now I refresh the page, it's gonna wait for a second and then, I need to save first.

[00:08:28]
Now, if I refresh the page, now I'm gonna get that instead.
>> Brian Holt: That's pretty cool, right, and that'll work in every modern browser. I wanna tell you why possibly why you wouldn't wanna do this? This adds a lot of page weight, right, cuz you're gonna download an entire font, that's a lot of stuff that, especially for just the title of something.

[00:08:47]
You probably just wanna would make that an image instead right. So that's how you would put in another font, but it's not something you always wanna do if you're gonna bring in another font, you probably wanna use it a lot. Right, does that make sense? The other thing is now Google has a little bit of tracking on your website, right, because now they're, yeah.

[00:09:06]

>> Speaker 2: I was gonna ask is the browser smart enough to only get the font once or does it follow every page and reload every time?
>> Brian Holt: No, it caches it, pretty smartly, yeah, that's a good question, is how often is it downloading it. It should cache it and keep it for, let's look, you can actually see.

[00:09:25]
So I'm going to come in here cuz in my dev tools there's a thing called network monitor over here. So if I refresh this again, you can see this font family thing and you can see how long the cache control, it says never get rid of this. So it's always going to keep it until your browser just decides to throw it away, so that's a long time [LAUGH] cuz your browser will keep quite a bit.

[00:09:50]

>> Brian Holt: So that's a good question, but what I was going to say before is now Google does have a little bit of tracking on your webpage, right. Every time that someone comes to your website, they're going to download the font and Google keeps track of that. So it depends on, like, it's all trade offs

[00:10:06]

>> Brian Holt: Okay, but it's worth it, it is cool.
>> Brian Holt: Things to think about.
>> Brian Holt: Okay, so now we have this News Times thing, I want it to be a little bit more spacious, right, cuz if we're looking at this, there's a decent amount of space up there at the top.

[00:10:23]
So what am I gonna do? I'm gonna pull over the margin on top and bottom, so I'm gonna say margin maybe 15 pixels.
>> Brian Holt: That's actually less I want it to be maybe 30 pixels.
>> Brian Holt: 50 pixels and let's actually do, we'll say this is margin-top and margin-bottom, cuz we don't actually want it on the sides we just want it on the top and bottom.

[00:10:52]

>> Brian Holt: Okay, pretty good, maybe about 60.
>> Brian Holt: There we go, now it's a little bit better. Now, we were talking about, yeah, go ahead.
>> Speaker 3: Isn't it easier to use the flex stuff for this just to.
>> Brian Holt: Particularly for text, text is quite easy to do just without flex.

[00:11:17]

>> Speaker 3: Okay.
>> Brian Holt: So you could definitely do this with flex as well, that would work.
>> Brian Holt: So we were talking about using combined things you remember we did border, 3 pixels, solid pink, margin has one of these as well. So notice that margin-top and margin-bottom are the same, I can actually do margin: 60px 0, like that, and get rid of these bottom two and what that means is top and bottom 60, left and right 0.

[00:11:55]
Now you ask me like how do I know that, just done this enough times that I can remember it off the top of my head. There's also, if you wanted to do different things for top, bottom, left, right you can also do margin, 60px 0 60px 0 and this would be the same as this and this.

[00:12:17]
It's north, east, south, west, just like, that's how I remember it anyway. There's also one that you can do it with three and I can never remember what the order of the three is that's fixed so I never use it, of consequences I never used the three versions.

[00:12:37]
So and then the other one if you just do one margin 60px that would be 60 pixels on every side and padding works the same way, just so you know.
>> Brian Holt: But I show you that because you will see this a lot, so if you see just with two, it's north south is the first one, east west is the second one.

[00:12:58]
Cool, feel good about that? So we got that, something that I will do just when I'm trying to figure out where stuff is being laid out, I'll inspect element and I'll just throw a border on it so I can tell where is this actually sitting. Cuz right now you can't really tell where it is, right, but if I just throw in a quick border and say border 1px solid black.

[00:13:22]
I can see that's actually the space that it's taking up, it's just helpful.
>> Brian Holt: Now I'm gonna refresh the page it's gone because every time you refresh the page, it drops all the stuff that you had written to it, so cool, good stuff. Coming back here, okay, so we're gonna tackle this next piece first I'm gonna have some sort of section that's gonna have all this HTML CSS in it, and I have kind of three subsections in it.

[00:13:52]
And I noticed that I can style the left one and the right one the same and it's just the middle one that's gonna be any different. So, come back here to index.html, I'm gonna do a section, I'm gonna call it,
>> Brian Holt: I don't know, row maybe
>> Brian Holt: So, we talked a little bit about emit yesterday, I'm so used to doing this that I just always do it.

[00:14:20]
So, I could do section, class equals row.
>> Brian Holt: Whatever and write it up by hand, but if you're using VS code or if you're EMMET, which you can find at EMMET.io. This will show you how to install it and everything else if you're using Sublime or something like that.

[00:14:44]

>> Brian Holt: But if I do section.row, like I actually put the real CSS selector right there and I just hit tab it just autocompletes it out for me. So it makes it really fast to write, make sense?
>> Brian Holt: You could do the same thing if I did pound row, as you might imagine, that's the CSS selector for having an id of row, so you can go really fast at this.

[00:15:09]

>> Brian Holt: Okay, so now I have a row and I'm gonna have kind of two different sections in it or three different rather. I'm gonna have and I'm gonna call these articles because these are kind of article looking, right. So we're gonna go to article.
>> Brian Holt: And I could tells this as well article dot we'll call this story, like a news story, something like that.

[00:15:38]
And these ones are gonna be quarter stories right and this one's gonna be a half stories cuz it takes up a quarter of the row, the middle one takes up half the row. So I'm gonna call this quarter as well.
>> Brian Holt: Okay these ones have a title so I'm gonna put this as you can put this as a h1 you can put it as a h2 you can make a case for either one of them.

[00:15:59]
This is the h1 of the article that's the h2 of the page I would personally probably call this an h1. I tend to use a lot of h1s, but there are people that would disagree with me. So that is definitely your judgment call. So I'm gonna call this story-title, and what did I call it?

[00:16:18]
I don't know, we'll just say, Student Learn CSS. Okay, then beneath it, it has what, like two paragraphs of text, so I'm gonna do story-text. Now inside of them, I wanna put this Lorem Ipsum text, right? Code will actually generate Lorem Ipsum text for you, which is quite nice.

[00:16:44]
So I wanna say I put that angle bracket to say, put this inside of there. That's what the angle bracket means. And I'm gonna say lorem maybe 40 words, so lorem40 and if I hit Tab, then I get this paragraph of Lorem Ipsum text, which is pretty nice.

[00:17:03]

>> Brian Holt: And then, I actually need two of them. So I can actually come in here and say, hey, I actually need two of these, times two.
>> Brian Holt: Okay? Then you can actually see the preview here. It show us what you're actually getting auto complete out, if you're curious.

[00:17:20]
So now if I Tab here, I get two of those.
>> Brian Holt: And, I come back over here, this one.
>> Brian Holt: Yeah, looks pretty good.
>> Brian Holt: Question so far?
>> Brian Holt: Now if I look like I'm going really fast and it's kind of hard to keep up with this, I've been doing this a really long time, right?

[00:17:49]
This has literally been my day job for a decade. So you can feel okay if you're not going quite this speed.
>> Brian Holt: I have done this so many times. I used to work on a news website, literally. So [LAUGH] like this is stuff I've all done before a bunch of times.

[00:18:11]
So please, don't feel bad if you're going a little bit slower than I am.
>> Brian Holt: Cool, so I'm actually gonna do the whole HTML for the row first, and then I'm gonna do the CSS for it. Cuz I think that would be the easiest way to kinda get all the layouts correct.

[00:18:28]
So the next article I'm gonna have here, it's gonna be another article.
>> Brian Holt: It's gonna be another story. And it's gonna be a half this time, right, cuz it's gonna take up half the page. Inside of that, I'm gonna have another h1 with story-title. And this one's that dogs are adorable,

[00:19:02]

>> Brian Holt: are Adorable, okay? This one has an image tag. So the source was, if you remember correctly, http://placecorgi.com. Actually, I think this has to be s, https.
>> Brian Holt: / I think I did 500 clips, /500/300. This is gonna give me a 500 by 300 image of a Corgi, which is everything that I've always wanted.

[00:19:38]
And I'm gonna put here a picture of adorable corgi dog.
>> Brian Holt: There's a big temptation inside of alt text to say picture of, right? But it's always a picture, right, it's inside of an image tag, the screen reader knows it's an image. It's redundant to put picture of something, just say what's actually in the picture, just pro tip for you.

[00:20:08]
Okay, then underneath that, it's gonna need one text paragraph. So I'm gonna put story-text, and inside of that lorem40, or something like that. Okay, refresh here, and looks like that link is not working.
>> Brian Holt: Why are you not working?
>> Brian Holt: What did I do? Let's look at here, inspect element.

[00:20:41]

>> Brian Holt: Nope, you do have to do HTTP. Okay, sorry.
>> Brian Holt: There we go, okay. So, this is not secure, http:. I missed that up.
>> Brian Holt: So make sure you get that. We one more article, and for the sake of time, we're just gonna say it's literally the same as the first one.

[00:21:03]
So let's put that down here as well. And this will be Student Learns HTML.
>> Brian Holt: So coming back over here.
>> Brian Holt: We now have our kind of three stories for the top, right?

