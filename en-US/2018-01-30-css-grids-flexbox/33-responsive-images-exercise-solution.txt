[00:00:00]
>> Jen Kramer: Yesterday, we spent the day covering Flexbox. Today, we're gonna be looking at CSS Grid and we're gonna be covering a whole bunch of stuff, we're gonna look at the basic syntax of grid, we're going to rebuild a couple of paintings by Piet Mondrian. If you don't know who that is, you will by the time we're done, we are also going to be laying out some pages with all kinds of interesting little bits of details.

[00:00:24]
We're gonna be looking at nested grids, and some offsets, we're gonna look at different types of syntax that go with the grid layouts. And then, finally, towards the end of the day, we'll look at how we can combine Flexbox, used in the right way, along with grid, to create real world page layouts.

[00:00:42]
So, that's what's on tap for today. As we did yesterday, the lunch break will be between 12 and 1 o'clock central time, we're here in Minneapolis. And there'll be lots of stuff for you to do along the way in terms of little projects and coding kinds of things along the way in addition to listening to me babble away up here in front of the room.

[00:01:03]
You can ask all of the questions you want on the chat, Mark is monitoring the chat for us. And so where I'd like to start today is actually where we ended yesterday. So right at the very end of the day we were working in our files. If you didn't join me yesterday you can download the files at github.com/Jennumber4, W-E-B Jen for web, /F-E-M, as in Frontend Masters, -layouts and all the files are there to download.

[00:01:35]
Yesterday's files were in day 1 Flexbox, today's files are in day 2 grid. In general, there's a beginning and end state for every one of these folders, and I'm calling them chapters, as we move through the material. So, we're actually starting with yesterday's material in chapter 7, called the Wrap Up Folder.

[00:01:52]
And we wanted to take a quick peek at the assignment that I gave you as we were leaving yesterday and we can take a look at what the answers were today. So, while I go through those answers with you, if you're out there on the Internet and you have questions pertaining to FlexBox from yesterday, please go ahead and ask those in the chat and I'll go ahead and answer those as soon as I go through the answers up here.

[00:02:15]
As always it's web design so there's lot of different answers that are possible. These are the answers that I came up with, you may have something different, and they maybe be absolutely totally right as well. So, what I'd ask you to do is part of the wrap up portion of the Flexbox portion of the day, was we had done two things just prior to that.

[00:02:36]
One, we had laid out an image gallery using Flexbox, and we had taken a look at some responsive images. And so what I asked you to do to finish things up was to create a gallery page, a history page, and if you had time, also a home page for the website.

[00:02:57]
And so we'll go ahead and take a quick peek at those. All right so, on the history page, the thing that I had asked you to do is to take the image that we had here of Marilee and swap that out for different size images at different dimensions.

[00:03:15]
And you did that using the picture tag and using different size images that you went ahead and created and the picture fill [INAUDIBLE]. So if we go ahead and narrow down our web browser here you'll see that the size of this picture will change at the various break points.

[00:03:33]
There we go, smaller picture at that break point. And then, finally, a much smaller image here for mobile dimensions. And if we take a look at the code to do that, it should look pretty familiar, compared to what we did yesterday. So, here in history.html, you can see that we have the script tags that are running from lines 8 to 12, that includes the little bit of JavaScript that tells the browser what a picture tag is, if it doesn't happen to already know.

[00:04:04]
And then a line that calls the picture fill script, and that is on line 12. And then, as we scroll on down the page here, if you go to line 33, this is the bit of code that calls the picture tag, which is an HTML 5.1 tag. You'll see that I gave it a class of float, right?

[00:04:27]
So that's how I'm floating that picture, no matter which version of the picture that I display, whether that's one of these source tags or the final image tag, they'll all be floated, right? So you'll see that we call the different size images here. They are associated with the appropriate media queries as to what to display on a page and by default the last image is the mobile-friendly version of that image.

[00:04:51]
Okay, so that's the history page. On the gallery page,
>> Jen Kramer: This is very similar,
>> Jen Kramer: Pull that up in the browser, so here is the gallery page and what I've got going on here was I took that same design that I had from the history page, dumped the right column so that this is more of a full width.

[00:05:14]
And then I went ahead and put my Flexbox-based grid system right on inside of the pie gallery. So, you see here, we have lovely images on all the various lines. And, as you shrink this down, we go to two images across, and then finally one image across. And so the code for that, if we take a look at gallery.html, you'll see I just copied in my list that I already had created, we went through this as an exercise yesterday in chapter 5, and I copied that HTML so I didn't have to retype it all.

[00:05:51]
And the only little change I made is up here, in line 28, I gave it a class of gallery. So, in my example in chapter 5, I used just the HTML tags themselves to lay out this particular image gallery. But with the addition of this class, when you take a look at our CSS styling, and if you're looking at the end file for that, it starts around line 84.

[00:06:16]
You'll see that I have just used that one class and associated it with the various tags that are in that list via descendant selectors or sort of a combination selector there on line 85. And then that way I could keep the code really super clean, only adding one class.

[00:06:34]
I didn't have to put a separate class on each OI, or all the figures, or anything like that. So, that's how I did that. And then finally we have a home page. And I didn't give you any art direction on the homepage at all. I said, if you have time and you happen to look at the branding folder that has the content inside of it and pictures and so forth, feel free to go ahead and put together a homepage.

[00:07:01]
So I created one of these, homemade pies for every celebration, I used the pictures of all the slices of pie as a little background banner here, and then using the background image techniques that I talked about late yesterday afternoon, I went ahead and made that appear. And you could see that that image size does change partway through here as I shrink the screen down.

[00:07:25]
And since it's a background image, of course, what it will do is just simply crop off the part that doesn't display. Which is totally fine, you're not really loosing anything. And then in mobile dimensions it doesn't display at all. And then down here on the bottom, of course, I've just got some little boxes based on that same grid system that we've worked on previously.

[00:07:48]
So, are there any questions on the type of thing that I've put together here? Anybody have any questions pertaining to Flexbox, Flexbox Grid Systems, anything else lingering from yesterday? Sure, so, we had a question here in class about min width, and with Flexbox, so Amy's question was that as pages get wider and we wind up with Flexbox doing it's thing, being flexible, at some point do we need a min width somewhere along the way?

[00:08:22]
And that's really a question of design, you can do that or not, and as you can see in my pages that I've built here I've put a min width on a wrapper for the whole page, so this particular design can only get to 1,200 pixels wide. If you were to remove that then this page would scale indefinitely.

[00:08:40]
And so I made the art decision to keep the size of my page to a minimum, you don't have to do that. So, I never think that's a bad idea by the way. I think that that's an art decision that you can make based on the kinds of browsers that you're using, levels of accessibility that you might need to maintain the types of devices that you need to support.

[00:09:05]
There's a whole lot of factors that would play into whether you would do that or not. If you were putting min width on individual grid cells, I don't necessarily think that's the best idea in the world. I think you'd probably better handles things with the min width on an outside container, but that's just my opinion.

[00:09:22]
I think, technically speaking, there's nothing wrong with putting that min width wherever you want. Technically speaking it should work okay, but I tend to be more of a code minimalist, and I tend to put things abstracted away as far as possible, as you just saw in that image gallery.

[00:09:43]
Use one class where possible rather than repeating the same classes over and over again. Take advantage of the cascade and inheritance in order to keep cleaner and more maintainable code, that tends to be my style.

