[00:00:04]
>> Speaker 1: I had some little margin problems.
>> Jen: You had some margin problems?
>> Speaker 1: That I just had to turn around.
>> Jen: Okay.
>> Speaker 1: And the only difference I can see between our two pages is the testimonials goes up and down just a little bit.
>> Jen: Just kind of a little bit, if we had infinite time we could tweak until perfection, right, yeah.

[00:00:23]
Okay, I'm not gonna worry about that but the testimonies are as a little higher or little lower, depending, okay? How about everybody else?
>> Speaker 3: Same.
>> Jen: Same, it's basically just the testimonials and where they fit in space?
>> Speaker 3: Yeah, in relation to the inside of the text.
>> Jen: Okay, in relation to the text?

[00:00:44]

>> Speaker 3: Yes.
>> Jen: Fair enough, okay. So I tend not to be that much of a perfectionist, and sort of let things like that go. Obviously if you had lots of design time remaining with this that you would sit there and tweak away. But I question how much you're actually gonna learn by doing that.

[00:01:02]
So I'll show you my answer here which is what you can follow along here in the end folder. So if you look in the end folder this is what my solution looked like. So I had some things going on here. I have a class here. I've left the rows in place.

[00:01:21]
the UL on the navigation, I gave it a class of full width. So I created a new class called full width because what I found with the row that I had existing, I think it was, It didn't stretch quite all the way across, and I think I had a little bit of a gap on either side, right?

[00:01:37]
So a little 4% margin gap. It wasn't lining up well, as I recall, when I put the solution together. So I created a class to get around that particular problem. The thing that is really notable here for me is the way I handle the side bar over here.

[00:01:56]
The main content of this is an article with a class of call three. That's no different than what we've already looked at with the grid system that we prototyped. But here, with my sidebar, what I wound up doing was, this div, I put a div around the aside, or maybe that was already there.

[00:02:17]
But I changed its classes, so that it's both a flex-item and a flex-row. See how I did that? So I had the flex-item, we call 1-4 and it's also a row. And these asides become the flex items. So basically I have a little bit of a nested grid going on here.

[00:02:40]
Does that make sense? Okay so then if we take a look at the CSS associated with that particular piece, cuz I think that's the one sort of area that had a level of difficulty to this. Is that fair to say? Pretty much everything else was pretty straightforward on this example.

[00:02:58]
All right so let's look at the CSS and how I dealt with that. I'll start down here at the desktop. So at the desktop, I have a flex item that's the side bar with 100% width, okay? So, instead of it being 92% I had the margin on either side.

[00:03:22]
I didn't really want that in this case so I gave it a flex basis of 100%. In the tablet portion of this, I added that the flex basis was gonna be 44%. OK and then up, here in the mobile styles, outside of the media queries. I have a flex basis of over 100% and I add a bit of margin with this as well, okay?

[00:03:56]
So, then when you display the page,
>> Jen: Then,
>> Jen: Let me shrink it down, we hit our break point, and then I wind up with my two boxes underneath like this. And then everything should stack on top of each other at some point in time like that. And I put in some extra padding here because I thought it looked nicer and stuff like that.

[00:04:27]
Design considerations. Does that make sense to everybody? What I did and why? Do we have anybody else who did a different approach that you would like to share?
>> Jen: I'm not saying I have a lock on the perfect way of doing this, or even the only way of doing it.

[00:04:48]

>> Speaker 1: Just like comment you used already created call classes, and you used Flex with it. Did anyone else do that?
>> Jen: So I'm sorry repeat that?
>> Speaker 1: Myra said she just used your call-classes, and then used Flex with it.
>> Jen: Right yes, absolutely you could use the same classes that were already there.

[00:05:11]
From the floats and you just re-purpose them all to be flex box. You get rid of the float part, you get rid of the width part and then replace those with the appropriate flex properties. That's definitely a way of doing that.
>> Speaker 1: What happened with the pizza image?

[00:05:25]

>> Jen: The pizza image?
>> Speaker 3: Is that a trick question?
>> Speaker 1: Can I have brakes on the [INAUDIBLE].
>> Jen: You mean the pie of the month down here. Is that what we're talking about? The pie of the month?
>> Speaker 1: When you shrink the v port.
>> Jen: Which of course is pie day pie, there are numbers all over it.

[00:05:43]
So when you shrink it, what's going on with this? Is that the question?
>> Speaker 3: I may have the image.
>> Jen: So yeah, so since this is flex box, the boxes are stretching. It's estimating a box is stretching to accommodate the content here. So of course the pie box here is also going to stretch, right, the border's gonna stretch but of course the image is not.

[00:06:08]
So that's what's going on here. Does that help?
>> Speaker 1: Yeah I think so.
>> Jen: Okay, and,
>> Jen: Let's put it to this dimension here. So you'll notice that we have this space over here on this side as well. That comes from, I had a style in here that locked down.

[00:06:28]
It might have been outside the media query, but lock down the maximum size of those images to 225 or 250 pixels. Did sort of a hack.
>> Jen: Search for it.
>> Jen: Yeah, okay, that's one of them. That's the article image and, yeah, so here's the sidebar images and you see here that I've rounded some of the corners.

[00:07:01]
They have a width of 100%, but a max width of 250 pixels. And so this is a hack for [INAUDIBLE]. Leads beautifully into a chapter from now. So this is a hack to make the images scale as we make the page larger or smaller. Because they can go quote, a 100% of the container width up to a maximum of 250 pixels, and at that point, it stops enlarging those.

