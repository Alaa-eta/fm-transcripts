[00:00:00]
>> Jen Kenner: So Floats are one of the original hacks for layout. When I started back in 2000, started laying out webpages, we had Tables and that was how we laid out webpages because we had nothing else. Floats came along shortly thereafter. This was in the much nicer way of laying things out, but all floats were even intended to do was to float an image on a webpage.

[00:00:22]
Make it go over to the left, wrap the text around it really nicely, kind of like what we're accustomed to seeing in print. It was never really intended to lay out whole webpages. But we had nothing else, and the market was fairly clean, of course table-based market can be something entirely different.

[00:00:39]
So floats were something that we went ahead and took advantage of and we had taken advantage of now for lo these many years. So remember that they are a hack for layout, although they are very cross browser compatible because they have been around for a really long time.

[00:00:54]
They have rows and cells, right? So if you think about your favorite responsive design framework, there's typically a row. Inside of the row there's a series of cells. One row has nothing to do with the next row in terms of layouts. This is just typically the way that it works.

[00:01:12]
The rows typically again, most of the responsive design frameworks. The rows are responsible for clearing the cells, because if you float, you must clear. If you float, you must clear. Let's say it one more time! If you float, you must clear. And I say that because many of the problems that we encounter as we layout webpages and we don't understand why something happened, is because you floated but you didn't clear, okay?

[00:01:41]
So, don't forget to clear when you float. The source ordering is going to determine the display on the page. So, depends on what order your HTML is. That's how things are going to display on your webpage with floats. With the minor exception, it is possible to reorder some of this things like make the left column on a desktop appear underneath the content.

[00:02:06]
Say, on a mobile phone. But, this kind of rearrangement is fairly limited, alright? Fairly limited as to what we can do in terms of rearranging things on the screen. Wait until you see what we can do with grid. Okay, one of the major disadvantages with floats are equal column heights, right?

[00:02:26]
So we can have a wonderful row, we can have a series of cells in it, they're all different heights. Especially when we go from, say a desktop size to a tablet size and things wrap around, we commonly run into issues. So here's some diagrams of what I'm talking about.

[00:02:43]
Here I've got a row. Here's a series of cells inside of that row. Let's say that they all are marked up in the following way. Those of you who are standards compliant people, yes, I've just done this all with divs, but if you notice, we don't exactly have the most interesting content in the world, so we don't need any semantics at all.

[00:03:03]
This is just done with divs. So, we have a row on the outside, we have a series of columns inside of this, And then typically the way the code is gonna look is something like this. So, we have some type of mechanism for clearing our row. Whatever formula it is that you like for clearing a row.

[00:03:21]
There it is. That's my methodology. You may have something else. And then we're going to have for our column 1 here. We're going to have code that looks like this. And typically, it consist of we're gonna float an element often to the left where it might give it some margins so, we have space in between our cells.

[00:03:41]
And then of course, we have to give it a width otherwise we won't wind up with things next to each other as you go across the page.oh of crirl wejad ae So, there's the formula right there. If we wrap, via media query, let's say we have a range here for this media query.

[00:03:57]
We might change the width of the column at this point in time. And hopefully the cells will stack on top of each other so very nicely. All right, hopefully. And then when we go to mobile, Maybe these things stack on top of each other as they go vertically down the page.

[00:04:12]
So we have a width of margin, and a float. Maybe we turn the float off and say float none. And this of course is just displaying the HTML in first order. Okay here's the big problem with floats right there. You end up with a long one, a short two Three tries to reach around and go underneath of 1, but unfortunately 1 blocks it, so it winds up over on the right side, four wraps around, it gets to be a mess when we look at the page.

[00:04:43]
So then we find up applying some kind of JavaScript to this and there's approximately 5,000 billion solutions to equal helight colummns am appliance height columns, jQuery-based, not jQuery-based, all kinds of things that you can do to make these columns some kind of equal height so that they wrap appropriately.

[00:04:59]
All right, if we wanna rearrange the columns we write crazy code like this. So, we set our columns to have a position that relative. Relative positioning means that we're going to take our particular element on the page. We can pull it out of the normal flow, by using our properties of left right topper bottom.

[00:05:22]
But the space that that element used to occupy is preserved, as opposed to absolute positioning where we pull it out of the normal flow and that space is collapsed. So here what we are gonna do is we are going to push it over to the left or in a positive or negative direction.

[00:05:37]
So, that's what we have going on here with this code. Does anyone know the very first declaration on this, with the square brackets here? Anyone know what kind of selector that is? Anyone familiar with that selector?
>> Jen Kenner: All right, I'm sorry. The first declaration here on the slide.

[00:06:01]

>> Jen Kenner: No one has any idea, okay so this is called an attribute selector. This is one of the coolest selectors I think is out there. All right so this is called an attribute selector. So rather than selecting your HTML tag right? We're creating a class, what we're doing is we're saying here, for any HTML element with the attribute of class, somewhere inside is that attribute, that's the star equals, it can be at the beginning, the end, there's actually a number of these, the operator here can be portrayed in a number of different ways, to begin the string, to end the string, to blah blah blah blah blah.

[00:06:41]
There's a whole bunch of them, you can look them up. But this particular operator says anywhere within the string contains col-. So the cool thing about that is that selects all of our column 1, column 2, column 3, column 4. All of our various classes are no affected by that one declaration, sweet, all right.

[00:07:03]
So attribute selectors. By the way, my favorite trick with attribute selectors, if you say href="http":, you can now tag all of your links that go off site, maybe with a little background image that indicates it goes off site. If you use that http*=". .pdf, you could stick a little PDF icon after every link that has a PDF.

[00:07:31]

>> Jen Kenner: There you go. Worth the price of admission just for that. Awesome!

