[00:00:00]
>> Jen Kramer: So the next thing we're gonna talk about, grid area, the grid template areas and the grid area's syntax. Since I've got the document up, this is actually a pretty easy way to explain it. So far, we have typically used the grid column and the grid row together in a single decoration to declare where we want to have a certain area of our webpage designated, where that particular grid item is going to be.

[00:00:29]
A different way that you can do this is actually using real names. So, in this particular situation, what we would do is we could have a series of classes where we're gonna use a property called grid-area, and you give it a name. And I've given these particular classes, class1, 2, and 3, I gave them names like header, article and aside because presumably that's the function that they serve in the document.

[00:00:55]
Obviously, you can call these grid areas anything you want, any name you happen to want. So you can call them George, Sam, and Mary if you prefer, although those tend not to be as self documenting. And then down underneath here where we have our wrapper which would be our grid container, we can declare our columns, our rows, and then we would declare our grid template areas.

[00:01:20]
So if you look at this, what I have here is two rows, and the first row is header, header, header, header. In other words, since I declared four columns here, one fraction and three fractions wide, what I do here is I say header header header header. In other words, the header is going to occupy all four of those columns, make sense?

[00:01:43]
Okay, and then underneath, I'm gonna have an aside, the dot is an indicator to skip that particular cell. So don't display anything there. And then have an article article.
>> Jen Kramer: So in this particular situation, those two articles will wind up being a container with that class2.
>> Jen Kramer: It makes sense?

[00:02:07]
Sort of, let's see it in action, okay? So this is sort of an overview of the syntax we're gonna talk about next, this grid template areas. So feel free to refer to that, you have your cheat sheet in front of you people in class or in the document online.

[00:02:23]

>> Jen Kramer: Okay, so if we take a look at, we are at chapter 12 here in the documentation or in the files. And in the begin folder, we're gonna open up gridarea.css and gridarea.html.
>> Jen Kramer: And these next few chapters are really short and very simple because I'm just demonstrating different types of syntax here.

[00:02:51]
So this is probably looks familiar to you. We actually had this example earlier. It changes around a little bit at the various dimensions. We saw that earlier. So I've taken that same example here and you see we have the same kind of HTML. So we have a div with a class of wrapper.

[00:03:09]
We have a header, an article, and an aside. And then in our CSS, we have some stuff already set up here. So this is the original grid syntax that I used on this particular example. We have a wrapper with our grid gap, and then we have our various dimensions called out as grid-columns and grid-rows.

[00:03:35]
What I'd like to do now is re-write this using this grid area syntax. So I'm gonna go on ahead and write this with you.
>> Jen Kramer: So up here at the top with the wrapper is where we'll start which is our grid container, we're going to have the following.

[00:03:55]
So we're gonna just have our grid-template-columns, and we're gonna have our grid-template-rows. And in fact, you can't of course call these out with however many numbers you want and whatever dimensions you want to use. You can also just say auto which is what I'm gonna do here. So hey grid, you figure it out.

[00:04:27]

>> Jen Kramer: And then here to our header, our article, and our aside, we're going to add an additional property value pair. So here under header, we're going to add a grid-area.
>> Jen Kramer: Anybody wanna come up with a name for what we should call our grid-area?
>> Jen Kramer: How about header?

[00:04:50]
[LAUGH]
>> Jen Kramer: Not to confuse you of course. Just because I'm using the header selector on line 12 from the header html tag, does not mean that I have to call the grid-area header. I could call it George if I wanted to. But I'm gonna call it header because that's pretty self documenting.

[00:05:09]
Likewise here for the article, I'm gonna give it a grid-area of, what should we call it?
>> Speaker 2: Article.
>> Jen Kramer: Article, okay? And for the aside I'm gonna give it a grid-area of?
>> Speaker 2: Aside.
>> Jen Kramer: Aside, okay? Actually, I called this one sidebar just to throw you off, sidebar, because I can.

[00:05:34]
[COUGH] Just to show you that you can call them different things. Okay, so then to the wrapper up here on the top. This is now working at mobile dimensions, okay, because we're outside of all of the media queries and we're building mobile first. So this would be for our mobile dimension.

[00:05:54]
To our wrapper class, we're gonna add grid-template-areas and usually the way I see this written is as follows. So you write out that property grid-template-areas:. Then usually the way I see this written is on the next line, in quotes we'll have "header".
>> Jen Kramer: In quotes "article".
>> Jen Kramer: And in quotes "sidebar".

[00:06:27]

>> Jen Kramer: With the ; at the end. So this is telling grid that we're gonna have basically, one row, one column, right? We're just gonna stack these things on top of each other at mobile dimensions. We're gonna have header display first, article display second, sidebar display last. Makes sense?

[00:06:47]
Cool. So if that makes sense, then let's go to our media queries. So, here in our media query for 650 pixels, we can now erase all this stuff that we've put in here before, okay? This is definitely calling out where we want these grid cells to go, but we're gonna call this out now with different syntax.

[00:07:10]
So we can call this out instead, with the wrapper.
>> Jen Kramer: And then we can say the following grid-template-columns, and grid-template-rows, okay? So in this case, as you saw it displayed on the page, we had a skinny column and we had a fat column, right? So for our columns, we have two of those but they are of different sizes.

[00:07:41]
So I could call this 1fr and 3fr. Makes sense? So one fraction and three fractions, just divide the page into four parts. Make the right one the fat one. Our grid-template-rows, we can call this auto, however many rows it takes, right?
>> Jen Kramer: Then we can try our grid-template-areas.

[00:08:09]
Becomes this. Article article article sidebar, right? So that'll be row one. We're gonna have three fractions being the articles, so we repeat the word article three times, followed by the word sidebar to indicate that's our fourth fraction.
>> Jen Kramer: And then under that the header occupies the whole thing.

[00:08:36]
"header header header header". Make sense?
>> Jen Kramer: And put the ; on the end.
>> Jen Kramer: All right,so this is a totally different way of writing exactly the same, the outcome is exactly the same as what we had before with the grid columns and the grid rows and all the different classes.

[00:09:00]
But this time we're doing this using the grid-area syntax, and we're specifying grid-template-columns, grid-template-rows, and grid areas that go on the grid container. What questions do you have at this point, before we go into the desktop?
>> Speaker 3: For the grid-template-rows, is auto the default? So do you have to define that, or can you just leave it off and it would assume?

[00:09:22]

>> Jen Kramer: You could probably just leave it off and it will be just fine, yeah. But for sake of completeness, here, I have left it on with auto. Other questions at this point in time?
>> Speaker 3: So you have 1fr and 3fr.
>> Jen Kramer: Yep.
>> Speaker 3: So how does that function differently than 4fr?

[00:09:45]

>> Jen Kramer: That's a very good question.
>> Jen Kramer: That's a very good question. I should probably put it in as repeat 4, 1fr's, probably.
>> Jen Kramer: This also happened to work, this also happened to work. Okay?
>> Jen Kramer: Yeah, I don't see anything for why I did that. Maybe it's just an error on my part, my apologies.

[00:10:15]
Okay, so for-
>> Speaker 4: Brandon's asking what are the limitations of the names in the grid areas, can I use hyphens or underscores?
>> Jen Kramer: So far as I am aware, you can use whatever is legal in CSS is legal here for grid names or grid-area names.

