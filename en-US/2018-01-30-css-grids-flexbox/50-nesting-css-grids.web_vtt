WEBVTT

1
00:00:00.365 --> 00:00:05.502
&gt;&gt; Jen Kramer: All right, so
then we're gonna move on here to nesting,

2
00:00:05.502 --> 00:00:11.674
so if you open up chapter 13.
&gt;&gt; Jen Kramer: And I believe

3
00:00:11.674 --> 00:00:16.037
what have I got going on here this time?
&gt;&gt; Jen Kramer: Okay.

4
00:00:16.037 --> 00:00:18.050
So this time what I've
done is the following.

5
00:00:18.050 --> 00:00:22.060
I have the same fine web page we've
been working with so far, and

6
00:00:22.060 --> 00:00:26.620
inside of my article I have
a series of little boxes,

7
00:00:26.620 --> 00:00:29.980
which I'd like to display all
next to each other, okay.

8
00:00:29.980 --> 00:00:33.450
So there's a couple of ways
that you could code this.

9
00:00:33.450 --> 00:00:37.410
You could try coding this just with
Flexbox, using these asides here,

10
00:00:37.410 --> 00:00:39.430
these three asides and white.

11
00:00:39.430 --> 00:00:43.270
You could code them with Flexbox,
inside of this particular article.

12
00:00:43.270 --> 00:00:45.350
That would be a really
great way of doing things.

13
00:00:46.420 --> 00:00:49.070
Then Flexbox will control
however many items there were.

14
00:00:49.070 --> 00:00:50.950
They would wrap on to other lines.

15
00:00:50.950 --> 00:00:54.350
They would adjust to
the appropriate widths, and

16
00:00:54.350 --> 00:00:57.030
whatever parameters that
you happen to set up.

17
00:00:57.030 --> 00:01:01.890
And what I'm talking about when I say lay
this out with flexbox, I'm talking about

18
00:01:01.890 --> 00:01:06.700
the way that we laid out our image gallery
with flexbox, not the flexbox grid system.

19
00:01:06.700 --> 00:01:11.620
There's no reason to use the flexbox grid
system if you're working with CSS Grid.

20
00:01:11.620 --> 00:01:14.179
Just worked with CSS Grid, okay?

21
00:01:14.179 --> 00:01:18.660
But in the interest of showing you
exactly how a nested grid would work.

22
00:01:18.660 --> 00:01:23.100
If that one to being something
that is important to you,

23
00:01:23.100 --> 00:01:25.050
I will show you that now.

24
00:01:25.050 --> 00:01:29.910
The disadvantage here, to the CSS
group portion of this is that it

25
00:01:29.910 --> 00:01:34.810
doesn't depending on what kind of crazy
layout you're doing in this CSS Grid.

26
00:01:34.810 --> 00:01:37.160
It may or may not repeat adequately.

27
00:01:37.160 --> 00:01:40.100
So like if you think about the Mondrian
paintings we laid out earlier,

28
00:01:40.100 --> 00:01:45.850
it'll be pretty hard to repeat that for
another bunch of these articles.

29
00:01:47.770 --> 00:01:51.120
And you know, flexbox of course,
you get what you get.

30
00:01:51.120 --> 00:01:54.530
It's gonna be a series of these
boxes one after the other.

31
00:01:54.530 --> 00:01:59.510
But I'm right now just demonstrating to
you how a nested grid system would work.

32
00:01:59.510 --> 00:02:04.050
So the HTML is exactly the same as
what we have been working with before.

33
00:02:04.050 --> 00:02:11.430
We're gonna go to the CSS and
what I've done here is the following.

34
00:02:12.750 --> 00:02:18.660
So remember that, there's
a parent-child relationship in grid.

35
00:02:18.660 --> 00:02:21.260
We have the grid container,
and you have the grid items.

36
00:02:21.260 --> 00:02:26.560
So the grid container,
its direct descendents are all grid items.

37
00:02:26.560 --> 00:02:30.630
Anything inside of the grid items
is unaffected by grid, right?

38
00:02:30.630 --> 00:02:37.760
So if you look at your HTML here, we have
wrapper, which is our grid container.

39
00:02:37.760 --> 00:02:41.210
Its children are the header and
the article, right?

40
00:02:41.210 --> 00:02:45.110
And the aside, so
those are all grid items.

41
00:02:45.110 --> 00:02:49.710
But inside of the article itself, I now
have this div with a class of nested and

42
00:02:49.710 --> 00:02:52.250
three asides inside of that.

43
00:02:52.250 --> 00:02:56.570
None of those have any grid properties
associated with them at all

44
00:02:56.570 --> 00:02:59.310
because that's as far as
the inheritance goes.

45
00:02:59.310 --> 00:03:02.100
From the rapper to its children and
that's it.

46
00:03:02.100 --> 00:03:07.030
So what we need to do here is,
with this div class of nested,

47
00:03:07.030 --> 00:03:11.220
we're gonna declare that to
be the next grid container.

48
00:03:11.220 --> 00:03:13.524
And the sides become the grid items,

49
00:03:13.524 --> 00:03:16.595
make sense?
&gt;&gt; Jen Kramer: Okay, so

50
00:03:16.595 --> 00:03:21.284
to do that,
&gt;&gt; Jen Kramer: Here, we'll go ahead and

51
00:03:21.284 --> 00:03:22.700
put in another class.

52
00:03:22.700 --> 00:03:25.100
I'm gonna put it in right
before my media query here.

53
00:03:27.000 --> 00:03:31.273
And I'm gonna call this the nested class,
which you saw it was there inside of

54
00:03:31.273 --> 00:03:36.964
a div.
&gt;&gt; Jen Kramer: And just as we typically

55
00:03:36.964 --> 00:03:43.500
do, we can just say display: grid,
grid-gap.

56
00:03:43.500 --> 00:03:46.443
Whatever you wanna do,
I said 1em, you could, of course,

57
00:03:46.443 --> 00:03:51.232
pick whatever you want.
&gt;&gt; Jen Kramer: And

58
00:03:51.232 --> 00:03:59.220
I added here also a grid-template-columns,
&gt;&gt; Jen Kramer: Auto.

59
00:03:59.220 --> 00:04:02.830
And the reason I did that is because I'm
gonna call out grid-template-columns

60
00:04:02.830 --> 00:04:04.260
in the media queries later.

61
00:04:04.260 --> 00:04:06.480
Otherwise, I would just
not even declare it here.

62
00:04:08.140 --> 00:04:13.391
Okay, then inside the media queries.
&gt;&gt; Jen Kramer: So

63
00:04:13.391 --> 00:04:23.270
in this first media query here.
&gt;&gt; Jen Kramer: So here's what I did.

64
00:04:24.880 --> 00:04:27.280
We have a bunch of asides going on here,

65
00:04:27.280 --> 00:04:32.350
so there's a series of
asides that are here, okay?

66
00:04:32.350 --> 00:04:34.810
There's also an aside
over here on the outside.

67
00:04:35.900 --> 00:04:41.000
You could do funky things with whatever,
nth child or nth of type and so forth.

68
00:04:41.000 --> 00:04:44.600
To select these,
my sense was it would be simpler for

69
00:04:44.600 --> 00:04:47.100
a lot of people if I just
declared a class here.

70
00:04:47.100 --> 00:04:52.640
So I'm gonna declare this last aside here,
that's on line 33 in my HTML.

71
00:04:52.640 --> 00:04:57.370
I'm gonna call that a class of
sidebar cuz I want its behavior to be

72
00:04:57.370 --> 00:05:02.359
very different than the sides that
I'm working with inside of here.

73
00:05:05.794 --> 00:05:07.477
&gt;&gt; Jen Kramer: And consequently,

74
00:05:07.477 --> 00:05:12.328
inside of my media queries where
you see the side currently

75
00:05:12.328 --> 00:05:17.080
I'm gonna change that to dot
sidebar in both locations.

76
00:05:19.960 --> 00:05:24.570
Otherwise what would happen is that
the styles that are here for the aside.

77
00:05:24.570 --> 00:05:29.010
The generic HTMO class would apply also
to those asides that are going to be

78
00:05:29.010 --> 00:05:29.830
inside of the article.

79
00:05:29.830 --> 00:05:30.750
And we don't want that.

80
00:05:32.060 --> 00:05:35.520
So that was a just a switch we had to make
because we're adding this extra code.

81
00:05:36.830 --> 00:05:39.520
Now the actual new code that
we're gonna add is this,

82
00:05:39.520 --> 00:05:43.460
nested, is my class inside
of the media query.

83
00:05:43.460 --> 00:05:46.132
And I can then say,

84
00:05:46.132 --> 00:05:51.647
grid-template-columns: repeat.

85
00:05:51.647 --> 00:05:58.425
Three coma, one fraction,
&gt;&gt; Jen Kramer: Okay?

86
00:06:03.399 --> 00:06:04.685
&gt;&gt; Jen Kramer: So that make sense?

87
00:06:07.080 --> 00:06:08.314
&gt;&gt; Jen Kramer: Okay.

88
00:06:09.330 --> 00:06:10.453
&gt;&gt; Jen Kramer: And if we now take

89
00:06:10.453 --> 00:06:12.790
a look at our webpage and refresh.

90
00:06:14.630 --> 00:06:18.540
There's our three asides all side by side.

91
00:06:18.540 --> 00:06:21.026
Everything looks great.

92
00:06:21.026 --> 00:06:27.451
And when I crunch the page down, at some
point along the way those will all stack,

93
00:06:27.451 --> 00:06:36.755
and there they go, okay?
&gt;&gt; Jen Kramer: All right.

94
00:06:41.286 --> 00:06:43.750
&gt;&gt; Jen Kramer: So just to refresh again.

95
00:06:43.750 --> 00:06:49.860
What we did was, we declared with a class
of nested becomes our grid container.

96
00:06:49.860 --> 00:06:53.340
The asides, theyâ€™re inside of that,
become our grid items.

97
00:06:53.340 --> 00:06:56.079
And that is then reflected
inside of our CFSs.

98
00:06:57.710 --> 00:07:01.590
So, here is our nested,
is our grid container.

99
00:07:01.590 --> 00:07:05.310
Declared here outside of
the media queries and then

100
00:07:05.310 --> 00:07:09.780
inside the media queries we can declare
exactly how we want those to display.

101
00:07:09.780 --> 00:07:13.820
In this case, at the larger screen sizes,

102
00:07:13.820 --> 00:07:17.050
we'd like to have three
columns of equal size.

103
00:07:18.430 --> 00:07:22.292
That bobble dimensions we just gonna
stuck them on top of each other.

