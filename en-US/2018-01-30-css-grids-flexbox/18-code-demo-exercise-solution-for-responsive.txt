[00:00:00]
>> Jen Kramer: All right, now, of course when we start to shrink the page down, nothing changes because we haven't written those styles yet. So let's go ahead and write those styles. What's gonna happen then,
>> Jen Kramer: First of all,
>> Jen Kramer: So let's talk about a plan here. So in our first row we have four going across, how do we want this to look on a tablet?

[00:00:28]

>> Jen Kramer: We're currently at four, we want to go to two and two, okay? In the second row, we have twos next to each other, what would you like to have happen there?
>> [INAUDIBLE]
>> Jen Kramer: You wanna stack them, you wanna leave it next to each other, any strong preferences?

[00:00:46]
I think I left them next to each other in my example, but you could stack yours if you want. How about the third row here?
>> Jen Kramer: So we have a one and we have a three, do you wanna stack these?
>> Jen Kramer: Okay, so we'll stack those. And then the fourth is pretty easy, it just continues on the way it is right?

[00:01:08]

>> Jen Kramer: Okay, so then we have now a behavior difference between this one, the first one in row three, and the ones that make up row one, right? So the individual boxes in row one are gonna grow in size to be two columns wide when we go to a tablet.

[00:01:32]
But the item here in row three, the first item, is gonna grow to occupy four. So this is where my names come from, I am going to call these col-1-2, and col-1-4. So I'm gonna go ahead and add those here in my CSS, col-1-2 and col-1-4. So at desktop sizes, they are gonna behave that way.

[00:02:06]

>> Jen Kramer: Let me also change my fabulous color up here, col-1-4. And let me make sure I change my HTML.
>> Jen Kramer: So in my HTML,
>> Jen Kramer: There we go.
>> Jen Kramer: So in row one.
>> Jen Kramer: And then in row three.
>> Jen Kramer: Okay, and hopefully when you refresh the page, everything is exactly the same.

[00:02:54]
They all have the same colors, they all still have the same behavior. And then we're ready to go ahead and write these styles for our tablet display.
>> Jen Kramer: Okay, so here on my tablet, what are we gonna do?
>> Jen Kramer: Anybody have any suggestions?
>> Jen Kramer: How shall we start?

[00:03:21]

>> Jen Kramer: You all are in the after-lunch slump.
>> Group: [LAUGH]
>> Jen Kramer: Food comas all around. Okay, so col-1-2 and col-2 are gonna have the same behavior, right? And their behavior's gonna be this.
>> Jen Kramer: 44%, everything else is gonna be this, col-1-4, col-3, col-4.
>> Jen Kramer: And one we haven't come to yet will be flex 0 0 92%.

[00:04:08]

>> Jen Kramer: Okay, 92% being full width, yes.
>> Speaker 3: I don't wanna get too off track on this because you had all ready naming conventions.
>> Jen Kramer: Yes.
>> Speaker 3: But generally people would stick with the bootstrap column names-
>> Jen Kramer: And that's fine.
>> Speaker 3: Compared to this way.
>> Jen Kramer: That would be totally fine, yes, absolutely.

[00:04:25]
I am combining a number of aspects here, so I'm not calling them specifically the extra small, small, and large grid systems. Because that's just a lot of extra writing and so forth. I'm combining a whole bunch of things into single classes.
>> Speaker 3: Right, I just meant column-wise, so it's just a little confusing with the col-1, col-2.

[00:04:46]
But if there's a method to the madness, it works for me.
>> Jen Kramer: And that is a fair criticism. Obviously you can call these class names whatever you wanna call them, and that is absolutely fine. I'm trying to imply I'm different from bootstrap though, so.
>> Speaker 3: Perfect.
>> Jen Kramer: Yeah, okay, so let us refresh the page here.

[00:05:08]

>> Jen Kramer: [COUGH] And then hopefully, there we go, we wind up with a break point. And you'll notice that our column ones here work perfectly well. The floats, if you had played around with your page a little bit, you might have noticed that they did not work so well.

[00:05:26]
But here we're working really well. The equal height aspect is baked in, because this is Flexbox. So we don't need any JavaScript in order to make these equal height. No matter what size these boxes are, no matter which box is longer, the browser is very smart and equalizes these very nicely to a row.

[00:05:48]

>> Jen Kramer: We go.
>> Jen Kramer: Looks like Firefox picked this second to flip out.
>> Jen Kramer: Go Firefox, all right, there we go. All right, so then the last thing is, let's think about the mobile sizes here. So right now, these are all stacked really nicely on top of each other, which is great.

[00:06:12]
But they actually have no margin in between them at the moment. So if you want that margin that's there, then that might be something to add outside of a media query. And in fact, the way I wound up writing this was,
>> Jen Kramer: Let's see, I think I just added to this particular style right here with the attribute selector.

[00:06:34]
So what I have on line 38, which is the attribute selector of anything that starts with col- I have a margin-left of 4%. And I'm adding to that a flex property of 0 0 92%.
>> Jen Kramer: [COUGH] And so then I think that should help a little bit. We wound up getting margins on either side here, this is the margin-left.

[00:07:06]
If you want margin in between you can certainly add more margin here as well, if you wanna have a little bit of space between your boxes, you can have that.

