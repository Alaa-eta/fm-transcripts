[00:00:00]
>> Jen Kramer: So we had our painting here, and when I was working on this for the answer I started to put this together. And then it was only later that I realized the D is actually slightly shorter than B is. Did anybody else get tripped up by that? B and D are not exactly the same height.

[00:00:21]
So there's an extra row in there perhaps that you might not have factored in. That was sort of the one tricky thing that I found about this. So I did manage to get mine looking like this, maybe yours is somewhat close to that
>> Jen Kramer: No. Kasey is shaking her head no.

[00:00:43]

>> Kasey: Not yet.
>> Jen Kramer: Not yet. Okay, Kasey needs some more time and she's totally going to get it. I know Brady got it. Jackie you got it. Did anybody else get it? Amy got it. Peter?
>> Peter: I was pretty close.
>> Jen Kramer: Pretty close.
>> Peter: Yeah.
>> Jen Kramer: Awesome. Okay.

[00:01:00]
So here is what the answer looked like here. The HTML, basically nothing changed. And then in the CSS here. So it's basically the same thing that I already showed you previously in terms of the formulas, to what types of properties that I have in here. The values are obviously different for this particular painting.

[00:01:23]
So I gave you the width and the height for the wrapper, I made the font size nice and big. And then we have our display grid. These were the measurements that I came up with for the grid template rows and the grid template columns. And your measurements might be slightly different.

[00:01:43]
I don't profess to be super extra careful as I made those measurements but they're pretty close. The grid gap was about five pixels in this case, and I set the background color to black eventually. And then for each one of my grid columns, in this case it did go through.

[00:02:01]
Take my little eye dropper and figure out exactly the shade of red, blue and yellow that I had here, so those values are reflected here. If you just said red, blue or yellow as your color keyword that's totally fine. So you'll see here how I setup my grid rows and my grid columns pretty much as you might expect, all right?

[00:02:25]
And rather than read you all those numbers, I'm just gonna live it open to you. Is there a box that you had trouble placing or anything that I can help you with? Is there anywhere along the way that you got tripped up, was it hard doing the measurements, for example.

[00:02:42]
Anybody have any comments on that? So, probably you all would have gotten it with just a little bit more time. It's really nice to know that you now have this in your back pocket and you can really create some whacked out layouts with grid. It's pretty amazing. I think in my solution here that my n-state for number nine.

[00:03:05]

>> Jen Kramer: Let me just check this real quick before I start talking. I did. One of the things I did here for number 9. And I'm going to point this out as an interesting problem. So I'm gonna go back to chapter 9 which was the painting that we coded together.

[00:03:24]

>> Jen Kramer: If I show that in the browser, that was the answer that we got earlier. I actually wrote some media queries to go along with this. And so with my Harvard students when we do this, we actually take the painting and flip it upside down and code it upside down on a different media query.

[00:03:43]
Here is an interesting thing that I've noticed about this when working here in my browser. As I start to narrow things down, it doesn't look like there is any responsiveness at all in this particular painting. What I actually wind up having to do when I'm here in Firefox, if you go to edit, no, no, sorry.

[00:04:03]
You have to right click somewhere. And you go to inspect element. And then what I wind up having to do is showing the mobile dimensions like this, and then you can see the media queries. I'm not sure why this is, but it seems to be the way things are.

[00:04:24]
And so for this media query I flipped the painting upside, I made the background color green to show you that I actually did that. So I'll just point that out to you in the CSS. So outside of the media query here, and again this is chapter nine, we're back to painting.CSS in the end state.

[00:04:43]
Outside of the media query is sort of the default desktop value, so this is not a mobile first design. These are the desktop values that we have here. Then you have a media query here where I've actually flipped this over. And so, you can see, I've just coded different locations for those boxes in the media query.

[00:05:02]
And then, when I get down here to the bottom,
>> Jen Kramer: The very bottom of this, notice what I've done here. All I did for my media query, for the small dimension, was this, I just said, display: block. In other words, I just disabled display grid altogether. So I'll just have these boxes stacked on top of each other.

[00:05:23]
So we're no longer dealing with grid at all. And the background color in this case is orange. Just to show you that it worked, and if I change the dimensions here in this view in Firefox, then you can that in fact that's what happens. We just had the boxes stacked on top of each other.

[00:05:42]
Okay, so this might be something to keep in mind, that you may have to come in here in order to test your various grid layouts. Okay?
>> Speaker 4: Question from Josiah, is here any reason to not use a span?
>> Jen Kramer: There's absolutely no reason not to use a span.

[00:06:01]
So one of the alternative syntaxes for the grid template, or sorry, for the grid rows and the grid columns is to use the keyword span. So like one span two or something like that. You can totally do it that way instead of specifying the two numbers. From my perspective, they do pretty much the same thing.

[00:06:19]
And I'm lazy and would prefer not to type all those extra letters. But if you prefer that type of syntax, you're more than welcome to use it. My teaching philosophy on this has always been that I can really confuse everybody in the room by throwing everything at you at once.

[00:06:36]
I'd rather have you focus on one syntax and get to know it really well, and then at that later point in time you can pick up the other syntaxes really easy. So an example of this is when I teach beginners color in CSS. I teach them six digit hex codes.

[00:06:51]
That's all we do, and then later on when they bump into a three digit hex code or an RGB or RGBA or keywords for colors, then it's a relatively simple thing to just go, it's the same thing but presented differently. In the beginning when you're trying to settle what each property value pair happens to be doing, I tend to stick to one kind of syntax and just hammer on that.

[00:07:17]

>> Speaker 4: Stacy said just a comment, she said, I put the maximum column row value as a note about each div selector. That seemed to help because counting is hard.
>> Jen Kramer: Okay, counting is hard and so she did some commenting for that, that's awesome. Comments are always welcome. I've never heard from any developer that code is not commented enough.

[00:07:43]
I believe we're all guilty of not commenting enough [LAUGH]
>> Speaker 4: Julian's asking why don't you use that min div, min device width in the media queries?
>> Jen Kramer: The minimum device width in the media queries.
>> Speaker 4: That's why the resizing doesn't work normally I guess.
>> Jen Kramer: Is that why the resizing doesn't work?

[00:08:04]
That can very well be.
>> Speaker 4: Instead of just min width.
>> Jen Kramer: So take out the device and then it's gonna work again, is what he's suggesting?
>> Speaker 4: Yeah.
>> Jen Kramer: Okay, so let's try that.
>> Jen Kramer: Whoops, HTML.
>> Jen Kramer: Cool. Thanks for that tip, I didn't know that. Awesome, thank you very much.

