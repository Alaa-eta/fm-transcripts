[00:00:00]
>> Sean Larkin: So this leads into one of Webpack's signature features, which is code splitting. No? Are you gonna load? Let me try that again
>> Sean Larkin: Besides yesterday, who has used code splitting before? Okay, [COUGH] and when I say the dynamic import statement, does that ring a bell? Okay, so you'll hear me refer to, well, I'll talk about it afterwards.

[00:00:38]
So I did a soul reach cuz I wanted to do a talk about code splitting. And of course I went to Google and I search and I found all WebPack docs, I was like dang it. I was looking for more historical content, like who invented this idea, right.

[00:00:55]
It turns out, as you heard from me yesterday, it's Google Web Toolkit. Who's ever used Google Web Toolkit in the Java world? You know, you understand. So they're the pioneers of this technology. Is that you can take, and if there's code that isn't used right away, like a button event, or something.

[00:01:18]
Google Web Toolkit would allow you have this method called runAsync. And any of the code inside here wouldn't actually run until that event occurred. And it would be separated into a separate piece of JavaScript, that would be fetched dynamically. And so when Tobias fourth modules WebMake, the whole point was to bring this technology in to bundlers.

[00:01:46]
[COUGH] And so I will beat this concept dead today. I want you to walk away like if you, how would I say this? How would I be so over dramatic saying this? This is the number one most important thing that you can walk away with for enabling performance in your web applications.

[00:02:08]
If you learned anything, this is the one thing that I wanna make sure that you know back and front, no matter what. And this definition is very like, I'm very pretty sneaky about it, because you're going to hear a lot of other tools, and a lot of their framework.

[00:02:24]
So I gonna say like zero config code splitting, that's not a thing. I mean, you'll hear somebody say, other tools like roll up, they'll say we have code splitting now out of the box. Really they don't, it's different, and this is not to knock on those. Rich Harris is like a very close friend to mine, it's just it's not the same thing.

[00:02:51]
And you'll hear maybe like Ember. If you ever use Ember, they say, yeah, we have code splitting, it's called Ember Islands. And no, that's just loading something in an iframe dynamically. So code splitting to us means creating
>> Sean Larkin: At build time, separate chunks of JavaScript that will only be loaded asynchronously.

[00:03:14]
So, think about that everything that we create is a build time. So when you use code splitting, you're creating these lazy bundles in your build step. And they are accessed via webpack in the code it transforms asynchronously. So how does it work? We're actually gonna go through this entire process more in-depth after we talk about performance.

[00:03:39]
But essentially, what webpack does under the hood is it takes your entry point. It passes it to this thing called resolvery, just make sure the file exist, cuz if it doesn't you can parse it or read it. And we read the source code, we parse it and we look for dependency statement.

[00:03:57]
It's like imports requires the common JS AMD syntax etc. And then we put this little object models called dependencies on them. Well, all that we do differently with code splitting is that it's a different type of dependency. It's another flavor and we leverage this information to say, okay, at this point separate everything in the graph into a separate bundle, flatten it and create it.

