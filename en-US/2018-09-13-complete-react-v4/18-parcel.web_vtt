WEBVTT

1
00:00:00.400 --> 00:00:01.642
&gt;&gt; Brian Holt: So let's go ahead and

2
00:00:01.642 --> 00:00:05.884
start,
&gt;&gt; Brian Holt: Building our project here.

3
00:00:07.993 --> 00:00:10.506
&gt;&gt; Brian Holt: We're gonna go into our

4
00:00:10.506 --> 00:00:15.659
command line and
we're gonna say npm install -D

5
00:00:15.659 --> 00:00:20.690
parcel-bundler.
&gt;&gt; Brian Holt: Like that.

6
00:00:32.710 --> 00:00:33.845
&gt;&gt; Brian Holt: Something that I wanted to

7
00:00:33.845 --> 00:00:35.547
like, this obviously all will work for

8
00:00:35.547 --> 00:00:38.437
you because you're all doing this
on the same day that I am, but for

9
00:00:38.437 --> 00:00:43.195
people watching this video in the future.
&gt;&gt; Brian Holt: You might have

10
00:00:43.195 --> 00:00:47.802
version incompatibilities, because if
you watch this in six months from now,

11
00:00:47.802 --> 00:00:52.010
versions will change, APIs will break,
all that kind of stuff.

12
00:00:52.010 --> 00:00:56.250
If you're finding yourself having weird
errors with ESLINT or Prettier or Parcel.

13
00:00:56.250 --> 00:01:00.480
What I would suggest you
do is go to the GitHub for

14
00:01:00.480 --> 00:01:05.210
this particular project which is here, and

15
00:01:05.210 --> 00:01:08.220
look at the package.json for
the versions that I'm using.

16
00:01:09.510 --> 00:01:13.510
And just go and
install those versions of what I'm using.

17
00:01:13.510 --> 00:01:17.370
Because things might break, or
you can at least find an upgrade guide or

18
00:01:17.370 --> 00:01:17.960
something like that.

19
00:01:17.960 --> 00:01:20.900
But that's something you
should be suspect of.

20
00:01:20.900 --> 00:01:26.322
So for example, of parcel we are using

21
00:01:26.322 --> 00:01:31.047
1.9.7.
&gt;&gt; Brian Holt: Oops.

22
00:01:33.002 --> 00:01:34.185
&gt;&gt; Brian Holt: Yeah, there's the project,

23
00:01:35.823 --> 00:01:36.909
&gt;&gt; Brian Holt: Okay?

24
00:01:40.402 --> 00:01:42.100
&gt;&gt; Brian Holt: So we have parcel-bundler

25
00:01:42.100 --> 00:01:43.139
installed now.

26
00:01:44.710 --> 00:01:47.720
And this is like the wow moment for
Parcel.

27
00:01:47.720 --> 00:01:51.070
I'm just gonna say comma,
and I'm gonna put "dev".

28
00:01:53.390 --> 00:01:54.720
This is inside of "scripts", right?

29
00:01:54.720 --> 00:02:02.601
"parcel src/index.html", that's it.

30
00:02:02.601 --> 00:02:07.569
That's really all we have to do for
Parcel for the rest of the course.

31
00:02:07.569 --> 00:02:10.866
There's no additional
configuration that we need here.

32
00:02:10.866 --> 00:02:15.691
It just blows my mind.
&gt;&gt; Brian Holt: That's

33
00:02:15.691 --> 00:02:20.630
because Parcel knows out of the box what
to do with most types of front end files.

34
00:02:20.630 --> 00:02:22.520
So, it knows how to handle flow,

35
00:02:22.520 --> 00:02:26.640
it knows how to handle type script,
it knows how to handle JSX.

36
00:02:26.640 --> 00:02:29.746
These are all things that it just
knows how to handle out of the box,

37
00:02:29.746 --> 00:02:35.069
which is amazing,
&gt;&gt; Brian Holt: It can handle Sass,

38
00:02:35.069 --> 00:02:37.858
it can handle LESS,
handles quite a bit of stuff.

39
00:02:45.285 --> 00:02:46.204
&gt;&gt; Brian Holt: Great, so now,

40
00:02:46.204 --> 00:02:51.761
what we should be able to do,
&gt;&gt; Brian Holt: is say npm

41
00:02:51.761 --> 00:03:00.179
run dev.
&gt;&gt; Brian Holt: Now,

42
00:03:00.179 --> 00:03:04.966
this isn't super interesting because we're
not really compiling anything, right?

43
00:03:04.966 --> 00:03:06.579
We're not doing a module imports.

44
00:03:06.579 --> 00:03:08.888
We're not bringing in anything
from our node modules.

45
00:03:08.888 --> 00:03:10.304
So nothing's really happening here.

46
00:03:10.304 --> 00:03:13.097
All it's just doing is running
a local server for us.

47
00:03:13.097 --> 00:03:19.103
So whereas before you have been running
your project using like the file open,

48
00:03:19.103 --> 00:03:19.743
right?

49
00:03:19.743 --> 00:03:22.050
We're not gonna do that anymore.

50
00:03:22.050 --> 00:03:23.150
So doing file open.

51
00:03:23.150 --> 00:03:25.070
What we're gonna do is
we're going to local host.

52
00:03:26.440 --> 00:03:29.850
Which is,
local host points at your computer, right?

53
00:03:29.850 --> 00:03:31.050
So it kind of loops back to itself.

54
00:03:31.050 --> 00:03:34.740
So it like, pretends that it's going
out to the Internet to get this file.

55
00:03:34.740 --> 00:03:36.596
But it's really just grabbing
it from own local computer.

56
00:03:36.596 --> 00:03:38.316
That's what local host does.

57
00:03:38.316 --> 00:03:43.571
And then, localhost: 1234,
it's the port that is on,

58
00:03:43.571 --> 00:03:46.614
by default that's where it opens.

59
00:03:46.614 --> 00:03:52.560
So localhost: 1234, the port incase you're
wondering it's like an address, right?

60
00:03:52.560 --> 00:03:54.160
Local host tells you where to go.

61
00:03:54.160 --> 00:03:55.572
So it goes through a computer and

62
00:03:55.572 --> 00:03:58.618
then says which address like which
door to knock on to get it, right?

63
00:03:58.618 --> 00:04:01.779
So we're going to address 1234.

64
00:04:01.779 --> 00:04:05.364
And we open it,
we can see our project here, right?

