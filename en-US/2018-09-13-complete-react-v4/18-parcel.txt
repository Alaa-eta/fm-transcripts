[00:00:00]
>> Brian Holt: So let's go ahead and start,
>> Brian Holt: Building our project here.
>> Brian Holt: We're gonna go into our command line and we're gonna say npm install -D parcel-bundler.
>> Brian Holt: Like that.
>> Brian Holt: Something that I wanted to like, this obviously all will work for you because you're all doing this on the same day that I am, but for people watching this video in the future.

[00:00:42]

>> Brian Holt: You might have version incompatibilities, because if you watch this in six months from now, versions will change, APIs will break, all that kind of stuff. If you're finding yourself having weird errors with ESLINT or Prettier or Parcel. What I would suggest you do is go to the GitHub for this particular project which is here, and look at the package.json for the versions that I'm using.

[00:01:09]
And just go and install those versions of what I'm using. Because things might break, or you can at least find an upgrade guide or something like that. But that's something you should be suspect of. So for example, of parcel we are using 1.9.7.
>> Brian Holt: Oops.
>> Brian Holt: Yeah, there's the project,

[00:01:35]

>> Brian Holt: Okay?
>> Brian Holt: So we have parcel-bundler installed now. And this is like the wow moment for Parcel. I'm just gonna say comma, and I'm gonna put "dev". This is inside of "scripts", right? "parcel src/index.html", that's it. That's really all we have to do for Parcel for the rest of the course.

[00:02:07]
There's no additional configuration that we need here. It just blows my mind.
>> Brian Holt: That's because Parcel knows out of the box what to do with most types of front end files. So, it knows how to handle flow, it knows how to handle type script, it knows how to handle JSX.

[00:02:26]
These are all things that it just knows how to handle out of the box, which is amazing,
>> Brian Holt: It can handle Sass, it can handle LESS, handles quite a bit of stuff.
>> Brian Holt: Great, so now, what we should be able to do,
>> Brian Holt: is say npm run dev.

[00:02:59]

>> Brian Holt: Now, this isn't super interesting because we're not really compiling anything, right? We're not doing a module imports. We're not bringing in anything from our node modules. So nothing's really happening here. All it's just doing is running a local server for us. So whereas before you have been running your project using like the file open, right?

[00:03:19]
We're not gonna do that anymore. So doing file open. What we're gonna do is we're going to local host. Which is, local host points at your computer, right? So it kind of loops back to itself. So it like, pretends that it's going out to the Internet to get this file.

[00:03:34]
But it's really just grabbing it from own local computer. That's what local host does. And then, localhost: 1234, it's the port that is on, by default that's where it opens. So localhost: 1234, the port incase you're wondering it's like an address, right? Local host tells you where to go.

[00:03:54]
So it goes through a computer and then says which address like which door to knock on to get it, right? So we're going to address 1234. And we open it, we can see our project here, right?

