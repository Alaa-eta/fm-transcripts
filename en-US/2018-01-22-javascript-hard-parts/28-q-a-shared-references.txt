[00:00:00]
>> Will Sentance: Let's have fun to this point. You lost me a long time ago, I still have a clarification. I'm clear on the, I think, most esoteric, most profound concept in JavaScript and it's okay to have clarifications. Andrew, clarification, throw it out there, Dave has one. Andrew, do you wanna go?

[00:00:19]

>> Speaker 2: So if I were to take after you say let my new function equal outer. And that is let my new function equal my new function. Would that be?
>> Will Sentance: They're both labels of the same function with the same backpack, yeah. And by the way, what about this cool one.

[00:00:37]
What if I were return out not a function, but an object full of methods. They all share the same reference, the same persistant, local memory from when they were born. Very, very cool, okay, all right. I'm gonna leave it at that for now, we're gonna come back together in about ten minutes after you've done some pairing through these challenges and talk about what this empowers us to do.

[00:01:02]
This allows us to have functions that remember the previous time they were run. Functions aren't just functions with some static text in them now. They're functions with some static instructions to be run, and a persistent store of data on their back. Before we do, I want to add one more thing.

[00:01:21]
What if I defined counter, not here, not here, but instead, counter = 0 globally. And I ran myNewFunction, myNewFunction, otherFunction, otherFunction, right? Assign it globally, what would I see at the end, Andrea?
>> Speaker 3: It would be 4.
>> Will Sentance: 4, 1, 2, 3, 4, spot on. What if I define counter inside of incrementCounter?

[00:01:43]
So when I run my new function, before I do counter plus, plus, I do counter equals zero, Counter is zero. And what would I see then, Katie, if I ran my new function, my new function, another function, another function?
>> Speaker 3: It would be one.
>> Will Sentance: One, one, one, one, exactly.

[00:01:56]
I'd never even reached my, even if I defined my backpack version, I'd never even reach it. As soon as hits it found, it's found a variable with that name, done, as we go up the chain. All right, I wanna add that point. For now folk, back to your pairing and in about ten minutes we'll talk about what this empowers us to do.

