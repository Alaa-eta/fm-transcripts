[00:00:00]
>> Will Sentance: All right, let's have thumbs. I'm not accepting this, I have clarifications. I'm clear that our functions, when treated like functions by adding parens on the end of them, behave as functions. If they're treated like an object, userCreator.andrew, what would this return for, what would this evaluate to, Andrea?

[00:00:21]

>> Andrea: It's going to be an object with Andrew.
>> Will Sentance: Well but what would me retrieving this. So here we've already got the Andrew property, so userCreator.andrew. I'd be retrieving three, exactly. Okay, so let's have thumbs on that notion. It's weird, if part of it's just, I need more time to embrace it.

[00:00:41]
So Andrew's got a thumb, Katy's got a thumb, a medium thumb, sorry I'll call it a thumb. Art is good to go, Lindsay has a medium thumb, Griffin has one. Griffin, will you kick us off?
>> Griffin: So if you were to use the user creator as a callback function, can you use that user creator object data in that function that you're using?

[00:01:01]

>> Will Sentance: You certainly can but I'll just make this point. That wouldn't be standard practice. Just cuz it's there doesn't mean we use it. We use it for this one thing we're gonna talk about. It isn't standard practice to bundle them in that sense. They're functions, it is all fundamentally objects, but they're used as functions, okay.

[00:01:20]
But we can store stuff here. We're gonna see in a moment we're gonna store something here, something here. We are gonna store something here. All right, anyone got that? Okay, Griffin, go ahead.
>> Griffin: Again, with the memory, could you kind of, instead of using the backpack or the lexicon thing, could you-

[00:01:41]

>> Griffin: Yeah, could you store it into the function's object?
>> Will Sentance: This is where it gets a bit hard with hard parts is we're seeing all of the underlying features of JavaScript. Some of them you can cross-use. This one, the is a special magical property that is not involved in conventional objects like this.

[00:02:05]
It's hidden off cuz, you're right, we said functions have a hidden square back that's good. That's not this guy here. That's a really nice clarification by Griffin. This object is definitely is not that scope property. Do you remember that guy which held on to state live in data?

[00:02:20]
Okay, that's an interesting one, man. Definitely not no, stop, stop it. That's not allowed. Okay, Lindsay.
>> Lindsey: I don't know, I think I got lost somewhere, but what's the function in user creator right now?
>> Will Sentance: User creator was declared-
>> Lindsey: Maybe seeing this would help you.
>> Will Sentance: We're gonna see it in a second, but user creator was declared as a function at the top, right?

[00:02:46]

>> Lindsey: Mm-hm.
>> Will Sentance: Whenever you declare a function, by default, just by its very nature, it's also an object. Okay, just declared that for, talk me through what we did in line one there Lindsey.
>> Lindsey: Declare the function, user creator.
>> Will Sentance: User creator. Remember how I draw my functions, there's a box like that?

[00:03:05]
What do we do in a few lines down in let user one equal?
>> Lindsey: We declared a variable and assigned it that whatever the user creator will return.
>> Will Sentance: Great, go run that functionality. And I know I'm gonna go run the functionality, why? Parens, good. But let's just not forget if in the next line I were to write usercreator.Andrew, in other words treating user creator as an object.

[00:03:35]
JavaScript's not gonna complain. It's gonna go yep, sure, yes, I'm a function, but I'm also an object. You treat me like a function, I run like a function. You put something in me like an object [INAUDIBLE]
weird thing to say. You put something in me like an object, I behave as an object.

[00:03:51]
That is just how it is. Okay Lindsey, so it is a function nothing has changed. But, if I were to treat it like an object, userCreator, and said I don't know, userCreator.andrew equal three. Now if I had a console log, if I had a console log my userCreator, I'd still see the function.

[00:04:11]
But if I were to console log my user creator with a special Chrome dev tool, down arrow. I would see the function, but also in the properties, I would see some other properties and Andrew three. Okay, this is not surface level really. We're not going to be doing this day to day, but it's there.

[00:04:30]
This is our day to day. This is what the function really is, but we can store some stuff here, but were not gonna be storing it ourselves. JavaScript stores stuff here for us, that's really what the real story is here. We treat user creator as a function but JavaScript can store some stuff here for.

[00:04:47]
We're definitely never storing Andrew as three ever, ever, ever on this object, let's be really clear on that we're not doing that ever. We definitely, but, Java script can store stuff there, for us. Because it wants, it has special, goals and things it wants to achieve that we wanna make available to you as a creator.

[00:05:06]
So, now we know, anyone still want to try and clarify? Yeah, Katie?
>> Katy: I have a question on the new, adding new to the.
>> Will Sentance: Okay, we may come to that in a second, but go ahead, throw it out.
>> Katy: Okay.
>> Will Sentance: So try it out now. We're gonna go through it line by line, believe me.

[00:05:24]

>> Katy: Maybe I'll wait.
>> Will Sentance: This is more about do we get this idea? So are good with the function?
>> Katy: I just need to keep doing.
>> Will Sentance: Okay, let's see our new in action then.

