WEBVTT

1
00:00:00.000 --> 00:00:02.964
Pair programming foot is without question.

2
00:00:02.964 --> 00:00:05.694
Code wouldn't work without it.

3
00:00:05.694 --> 00:00:10.920
Of the thousands hours you spend at
codes with about 400 I'd say are paired.

4
00:00:10.920 --> 00:00:12.792
There was laptops four two.

5
00:00:12.792 --> 00:00:13.962
Thank you Ameen.

6
00:00:13.962 --> 00:00:14.976
Thank you man.

7
00:00:14.976 --> 00:00:17.160
A passive aggressive thank you.

8
00:00:17.160 --> 00:00:20.380
Never should thank you
be less grateful or...

9
00:00:20.380 --> 00:00:21.662
More demanding.

10
00:00:21.662 --> 00:00:22.516
All right so

11
00:00:22.516 --> 00:00:27.644
pair programming is the secret approach
to how you grow as an engineer.

12
00:00:27.644 --> 00:00:32.600
Let's look at it up here,
there are two types of learning out there,

13
00:00:32.600 --> 00:00:34.053
always a spectrum.

14
00:00:34.053 --> 00:00:36.789
Harder learning, easier learning.

15
00:00:36.789 --> 00:00:39.020
Easier learning spoon feeds.

16
00:01:02.730 --> 00:01:07.710
But at some point, you're gonna
start to plateau in your growth

17
00:01:07.710 --> 00:01:10.662
if you follow the spoon fed approach.

18
00:01:10.662 --> 00:01:13.984
You're gonna remain a junior developer.

19
00:01:13.984 --> 00:01:16.105
An entry level developer.

20
00:01:16.105 --> 00:01:18.227
That's not what you want.

21
00:01:18.227 --> 00:01:24.132
You wanna grow into an autonomous
problem solving mid or senior developer.

22
00:01:24.132 --> 00:01:25.820
That how do you do it?

23
00:01:25.820 --> 00:01:30.450
You do hard learning,
you don't do the easier learning for long.

24
00:01:30.450 --> 00:01:32.021
You do hard learning.

25
00:01:32.021 --> 00:01:37.643
So hard learning is things like shot out
to Clara, I go and try to build projects.

26
00:01:37.643 --> 00:01:41.118
Hard learning is doing MIT
opening courseware and

27
00:01:41.118 --> 00:01:43.185
all the problem sets with it.

28
00:01:43.185 --> 00:01:46.053
Hard learning is doing all those mooks And

29
00:01:46.053 --> 00:01:49.911
all the problems that's associated
with them, like Coursera, edX.

30
00:01:49.911 --> 00:01:52.033
Has anyone ever finished one of those?

31
00:01:52.033 --> 00:01:52.675
I doubt it.

32
00:01:52.675 --> 00:01:53.831
So maybe you have.

33
00:01:53.831 --> 00:01:56.723
My god, it's gonna be a life
changing moment for me.

34
00:01:56.723 --> 00:01:59.359
Which one did you finish
all the problem sets on?

35
00:01:59.359 --> 00:02:00.966
&gt;&gt; It was not a programming one.

36
00:02:00.966 --> 00:02:02.509
I finished a different one.

37
00:02:02.509 --> 00:02:03.665
&gt;&gt; Okay, there you go.

38
00:02:03.665 --> 00:02:05.207
That's confirmed my bias.

39
00:02:05.207 --> 00:02:06.340
&gt;&gt; Coursera for Ruby.

40
00:02:06.340 --> 00:02:08.468
You completed a full course.

41
00:02:08.468 --> 00:02:09.798
&gt;&gt; Yeah.
&gt;&gt; All promisets.

42
00:02:09.798 --> 00:02:13.123
&gt;&gt; Yeah.&gt;&gt;Let's give her
a round of applause, my god.

43
00:02:13.123 --> 00:02:14.520
This is unprecedented.

44
00:02:14.520 --> 00:02:16.315
[APPLAUSE]
&gt;&gt; I felt obligated too,

45
00:02:16.315 --> 00:02:18.510
becasue my company paid for me to do it.

46
00:02:18.510 --> 00:02:20.705
&gt;&gt; Well I'll tell you this, seriously,

47
00:02:20.705 --> 00:02:23.900
commitment device because
it's incredbly hard right?

48
00:02:23.900 --> 00:02:25.895
The hard learning, what happens?

49
00:02:25.895 --> 00:02:28.720
You hit a block and
that's what hard learning is.

50
00:02:28.720 --> 00:02:30.675
At that moment you give up.

51
00:02:30.675 --> 00:02:33.055
So you grow as a problem solver and

52
00:02:33.055 --> 00:02:36.456
you grow as a communicator
when you hit a block.

53
00:02:36.456 --> 00:02:39.261
When you cannot make this thing work and

54
00:02:39.261 --> 00:02:43.086
everything is screaming at
you go do something else.

55
00:02:43.086 --> 00:02:44.361
Make a cup of tea.

56
00:02:44.361 --> 00:02:45.126
Just run.

57
00:02:45.126 --> 00:02:47.950
You want to get away from the struggle.

58
00:02:47.950 --> 00:02:49.613
But that's when you grow.

59
00:02:49.613 --> 00:02:52.794
That moment where you keep
pushing is when you grow.

60
00:02:52.794 --> 00:02:57.419
If it takes a commitment device that
your company pay for you to do it, okay,

61
00:02:57.419 --> 00:02:58.214
that helps.

62
00:02:58.214 --> 00:03:02.475
But most of the time we do tend to slip
into the give up approach when we do

63
00:03:02.475 --> 00:03:03.487
hard learning.

64
00:03:03.487 --> 00:03:05.655
But hard learning is where we grow.

65
00:03:05.655 --> 00:03:08.331
It's where you become an actual engineer.

66
00:03:08.331 --> 00:03:12.576
No one ever became an engineer
Unfortunately by doing code school.

67
00:03:12.576 --> 00:03:14.214
I love code school, man.

68
00:03:14.214 --> 00:03:15.630
Childhood road trip.

69
00:03:15.630 --> 00:03:17.939
I hear that theme tune one more time.

70
00:03:17.939 --> 00:03:22.111
But instead we fall into the trap
of doing the easier learning, and

71
00:03:22.111 --> 00:03:25.166
thinking we're growing,
but we hit a plateau.

72
00:03:25.166 --> 00:03:26.283
What do I do next?

73
00:03:26.283 --> 00:03:29.220
Or we do hard learning,
but we risk giving up.

74
00:03:29.220 --> 00:03:32.373
Now.
If we push through the hard learning.

75
00:03:32.373 --> 00:03:37.234
Suppose we're doing Java sub 30 and
now we're pushing through.

76
00:03:37.234 --> 00:03:42.092
Suppose we're doing, I don't know,
call Sarah or add Ex course.

77
00:03:42.092 --> 00:03:44.224
And we're pushing through.

78
00:03:44.224 --> 00:03:44.820
Great.

79
00:03:44.820 --> 00:03:47.463
Now we're moving to this camp here.

80
00:03:47.463 --> 00:03:48.571
This bit here.

81
00:03:48.571 --> 00:03:50.980
Even here, we're not safe yet.

82
00:03:50.980 --> 00:03:55.041
There's two, there's a spectrum here
of how we do the hard learning.

83
00:03:55.041 --> 00:03:56.936
One one end, is the researcher.

84
00:03:56.936 --> 00:04:01.881
So you're saying I'm gonna go, I've heard
Will say I should be doing hard learning.

85
00:04:01.881 --> 00:04:04.792
I've heard him say it,
I'm gonna go do a project.

86
00:04:04.792 --> 00:04:09.330
I'm gonna build a project or I'm gonna go
and do some hard cord rules problems or

87
00:04:09.330 --> 00:04:11.700
I'm gonna do some exorcism io problems.

88
00:04:11.700 --> 00:04:13.170
They're gonna be hard.

89
00:04:13.170 --> 00:04:14.694
But I'm going to do it.

90
00:04:14.694 --> 00:04:15.533
Okay great.

91
00:04:15.533 --> 00:04:19.653
And then you see 10 words in
the question that you don't know.

92
00:04:19.653 --> 00:04:21.405
Then you go crap, okay.

93
00:04:21.405 --> 00:04:22.700
You go look them up.

94
00:04:22.700 --> 00:04:27.051
In their documentation you see
another 10 words you don't know.

95
00:04:27.051 --> 00:04:28.808
That's halfway through.

96
00:04:28.808 --> 00:04:32.929
Now it's lunchtime so you take
a quick break and you come back and

97
00:04:32.929 --> 00:04:34.570
you go okay, I've got.

98
00:04:34.570 --> 00:04:37.521
And by the end of the day,
you have read everything there is to know

99
00:04:37.521 --> 00:04:39.883
about object oriented
programming in JavaScript.

100
00:04:39.883 --> 00:04:42.245
But you have not put your
hands on the keyboard once.

101
00:04:42.245 --> 00:04:45.198
You've fallen into the researcher trap,
that's one extreme.

102
00:04:45.198 --> 00:04:48.204
You're doing hard learning, but
you're not actually doing it.

103
00:04:48.204 --> 00:04:50.565
You're doing hard work,
but you're not doing it.

104
00:04:50.565 --> 00:04:53.196
Hard problems but
you're not actually doing it.

105
00:04:53.196 --> 00:04:55.454
Other end The stack overflow approach.

106
00:04:55.454 --> 00:04:59.180
This is the I'm doing a project,
I'm doing real hard.

107
00:04:59.180 --> 00:05:00.974
This is real problem solving.

108
00:05:00.974 --> 00:05:02.975
Okay, this isn't working.

109
00:05:02.975 --> 00:05:04.424
There's a snip on it.

110
00:05:04.424 --> 00:05:06.287
Man, someone's had.

111
00:05:06.287 --> 00:05:09.875
Snip it from stack overflow,
take snippet, copy and paste.

112
00:05:09.875 --> 00:05:11.393
Still not quite working.

113
00:05:11.393 --> 00:05:14.759
Take another snippet, copy and
paste Okay, [INAUDIBLE].

114
00:05:14.759 --> 00:05:17.037
Okay, they're not working together.

115
00:05:17.037 --> 00:05:20.923
Post those three snippets and
ask someone how to make them work.

116
00:05:20.923 --> 00:05:21.861
It's working!

117
00:05:21.861 --> 00:05:23.469
Stack [INAUDIBLE] approach.

118
00:05:23.469 --> 00:05:25.211
You're doing hard learning.

119
00:05:25.211 --> 00:05:26.953
You're doing a hard problem.

120
00:05:26.953 --> 00:05:31.442
But you're doing the just make it work and
you have no idea of how it's working.

121
00:05:31.442 --> 00:05:35.150
So it might seem we're stuck in
catch 22 with all of this stuff.

122
00:05:35.150 --> 00:05:38.528
No.
Are my arrows to, that's funny,

123
00:05:38.528 --> 00:05:40.844
it doesn't show up on here.

124
00:05:40.844 --> 00:05:44.028
Everyone can see, there's my arrow.

125
00:05:44.028 --> 00:05:48.372
where programming lands us
perfectly in the middle.

126
00:05:48.372 --> 00:05:52.041
Clearly it just sits
there separately here.

127
00:05:52.041 --> 00:05:56.890
But that little arrow about
that pointing a the green area.

128
00:05:56.890 --> 00:06:01.884
Pair programming lands us perfectly
in the middle, hopefully,

129
00:06:01.884 --> 00:06:06.784
if you do it right, between the I
must understand what I'm doing

130
00:06:06.784 --> 00:06:11.138
in the hard learning and
the other end, the make it work.

131
00:06:11.138 --> 00:06:16.002
Pair programming says because you
have to never Problem solve that is

132
00:06:16.002 --> 00:06:17.723
never come up with a solution,

133
00:06:17.723 --> 00:06:21.365
never come up with an approach to
solving the problem and type it.

134
00:06:21.365 --> 00:06:24.942
If you come up with the approach
your hands are behind your back.

135
00:06:24.942 --> 00:06:29.514
You're having your partner interpret your
pseudo code, the sort of way we talk to

136
00:06:29.514 --> 00:06:33.890
our code up here which we're gonna do a
lot more of in the next two days You have

137
00:06:33.890 --> 00:06:38.374
your partner talk through,
your partner turn your pseudo code,

138
00:06:38.374 --> 00:06:43.103
your spoken verbalized problem
solving approach into actual code.

139
00:06:43.103 --> 00:06:48.238
All that means is that as you explain
your approach to solving the problem,

140
00:06:48.238 --> 00:06:53.161
and then have them actually interpret
your approach into actual code You

141
00:06:53.161 --> 00:06:55.957
have to understand it just
enough that you can explain it.

142
00:06:55.957 --> 00:06:59.321
Like this is why we are going to do it,
this is how we're going to do it.

143
00:06:59.321 --> 00:07:03.144
But, you don't have to understand it so
much because you can't leave your pair

144
00:07:03.144 --> 00:07:07.313
programming partner waiting there while
you research all of objective programming.

145
00:07:07.313 --> 00:07:09.251
You got to at least get your hands dirty,

146
00:07:09.251 --> 00:07:11.520
because their sitting there waiting for
you.

147
00:07:11.520 --> 00:07:15.374
But nor can you just plug and play,
because you've got to talk through

148
00:07:15.374 --> 00:07:19.288
the code line by line to them, and
have them actually turn it into code.

149
00:07:19.288 --> 00:07:23.860
So you're forced to land in the green area
between on the one end the must understand

150
00:07:23.860 --> 00:07:26.081
everything, never get my hands dirty.

151
00:07:26.081 --> 00:07:30.710
And the don't understand anything, but
hey, I've put my hands on the keyboard.

152
00:07:30.710 --> 00:07:33.781
This is an incredibly powerful approach.

153
00:07:33.781 --> 00:07:35.571
Let's see it in action.

154
00:07:35.571 --> 00:07:38.472
Let's imagine we have Bob and Lindsay.

155
00:07:38.472 --> 00:07:38.983
Okay.

156
00:07:38.983 --> 00:07:43.930
So Bob and Lindsay, they see a problem
presented they got to work on.

157
00:07:43.930 --> 00:07:50.280
It says okay, Bob, Lindsay, display 10
Tweets from Twitter's API on the webpage.

158
00:07:50.280 --> 00:07:53.420
Ten tweets from Twitter's API
on the webpage.

159
00:07:53.420 --> 00:07:57.659
All right, so Bob says, Lindsey,
do you know Twitter's API?

160
00:07:57.659 --> 00:07:59.072
And he's like, no.

161
00:07:59.072 --> 00:08:01.663
Let's go look at Twitter's API docs.

162
00:08:01.663 --> 00:08:04.882
Let's go look at the docs,
the documentation,

163
00:08:04.882 --> 00:08:07.550
see what it says about how the API works.

164
00:08:07.550 --> 00:08:10.492
And then they get there and
Bob sees Lindsay,

165
00:08:10.492 --> 00:08:15.054
it says that it's going to give us very
conveniently an array of ten strings.

166
00:08:15.054 --> 00:08:19.896
Which are the ten tweets directly from
this address, and he's like, that's not

167
00:08:19.896 --> 00:08:24.454
likely, but Bob said, yes it is,
there it is, look, that's what it says.

168
00:08:24.454 --> 00:08:27.261
Its just an array of ten strings,
effortless.

169
00:08:27.261 --> 00:08:28.804
Easiest API in the world.

170
00:08:28.804 --> 00:08:32.165
No authentication Nothing,
just there they are.

171
00:08:32.165 --> 00:08:33.953
And Barb is really happy.

172
00:08:33.953 --> 00:08:35.497
Barb, look happier.

173
00:08:35.497 --> 00:08:41.024
Barb is really happy, she's grinning
she's so happy with how easy this API is.

174
00:08:41.024 --> 00:08:47.070
Then Lindsay says, hey actually let's look
again, I think there's a J query method.

175
00:08:47.070 --> 00:08:51.439
That we can use to append strings to
a DOM element, to a bit of the page,

176
00:08:51.439 --> 00:08:56.180
to a DOM element, like an element with
a class name tweet container, okay.

177
00:08:56.180 --> 00:09:00.403
So now they've done their research,
that was the research stage.

178
00:09:00.403 --> 00:09:04.033
They did that together,
kinda hustling, figuring out.

179
00:09:04.033 --> 00:09:07.180
Now they move into the driver,
navigator stage.

180
00:09:07.180 --> 00:09:12.248
So here we have, let's say Bob says,
hey Lindsay I've actually

181
00:09:12.248 --> 00:09:17.131
got an idea how we can approach this,
do you mind if I navigate?

182
00:09:17.131 --> 00:09:22.198
So Bob's job is now gonna be to
talk through an approach to solving

183
00:09:22.198 --> 00:09:27.110
this problem and her hands
are never gonna touch the keyboard.

184
00:09:27.110 --> 00:09:30.932
If she feels man, Lindsey,
I know what I want you to do,

185
00:09:30.932 --> 00:09:35.691
that's the moment where her technical
communication gets to level up,

186
00:09:35.691 --> 00:09:40.449
cuz she needs to be able to explicate
how to solve the problem to Lindsey,

187
00:09:40.449 --> 00:09:44.349
such that Lindsey can actually
type it out on the keyboard.

188
00:09:44.349 --> 00:09:50.389
So, for example says All right Lenzy,
let's start by declaring a function.

189
00:09:50.389 --> 00:09:52.594
Let's call it appendTweets.

190
00:09:52.594 --> 00:09:57.511
Let's have it be past the parameters,
let's call it tweetsArray,

191
00:09:57.511 --> 00:09:59.462
that's the placeholder.

192
00:09:59.462 --> 00:10:01.580
And the body of the function.

193
00:10:01.580 --> 00:10:04.719
Let's iterate through that tweetsArray,

194
00:10:04.719 --> 00:10:08.494
loop through it,
take each string Each tweet, and

195
00:10:08.494 --> 00:10:13.082
pass the tweet string to
jQuery's built in append method.

196
00:10:13.082 --> 00:10:18.955
And it's called that append method on
the dorm element with the class name,

197
00:10:18.955 --> 00:10:21.616
let's call it tweets container.

198
00:10:21.616 --> 00:10:23.267
Let's call it that.

199
00:10:23.267 --> 00:10:27.945
And now, at this point, so
they've used the research, and

200
00:10:27.945 --> 00:10:32.976
Barb has I've spoken in pseudo code, and
she's never put her hands on the keyboard.

201
00:10:32.976 --> 00:10:35.121
And now Lindsey, she's our driver.

202
00:10:35.121 --> 00:10:37.200
So she's actually at the keyboard.

203
00:10:37.200 --> 00:10:40.484
She's going okay,
to clear a function, append tweets.

204
00:10:40.484 --> 00:10:42.790
All right, function, append tweets.

205
00:10:42.790 --> 00:10:49.296
Prints tweets array is the parameter,
tweets array, close parenths,

206
00:10:49.296 --> 00:10:54.522
open the curly braces,
iterate through the input array,

207
00:10:54.522 --> 00:10:59.533
for in parenths let I equal 0,
and at no point did bob say

208
00:10:59.533 --> 00:11:04.500
Lindsay function append tweets
Open paren though she was

209
00:11:04.500 --> 00:11:09.602
saying all this precise pseudo
code which we'll be working on

210
00:11:09.602 --> 00:11:14.606
today as Amin said we're
declaring the function multiplied

211
00:11:14.606 --> 00:11:19.510
by two we are declaring output and
assigning it to the return

212
00:11:19.510 --> 00:11:24.440
value of the core to multiply
by two with the argument four.

213
00:11:24.440 --> 00:11:30.811
That pseudocode is what Lindsey's turning
into actual code on the keyboard, okay?

214
00:11:30.811 --> 00:11:35.765
What this does is ensures that
has enough understanding to

215
00:11:35.765 --> 00:11:41.071
be able to talk through it, but
not too much that she stopped and

216
00:11:41.071 --> 00:11:45.713
and that Lindsey has the ability
To interpret that precise CO code.

217
00:11:45.713 --> 00:11:49.151
After about 10, 15 minutes,
they can swap over.

218
00:11:49.151 --> 00:11:53.857
Now, you might hear a like damn,
we have no idea how to solve this.

219
00:11:53.857 --> 00:11:56.771
So yeah, as always,
try figuring stuff out.

220
00:11:56.771 --> 00:12:01.840
But if you have an idea, force yourself,
actually, Bob, I have an idea.

221
00:12:01.840 --> 00:12:03.199
Do you mind driving?

222
00:12:03.199 --> 00:12:06.069
And so, Lindsey's gonna explain her idea.

223
00:12:06.069 --> 00:12:11.277
Not a moment where you're like, let me try
this, or can we just console log that?

224
00:12:11.277 --> 00:12:15.808
Force yourself to have the other
person be navigated through it by you.

225
00:12:15.808 --> 00:12:20.261
And by the way, Bob thinks that
Lindsey is making a horrible mistake.

226
00:12:20.261 --> 00:12:23.920
Or Lindsey thinks that Bob is
making a horrible mistake.

227
00:12:23.920 --> 00:12:26.868
She does not say stop, stop, stop, stop.

228
00:12:26.868 --> 00:12:28.699
Let me show you how to do it.

229
00:12:28.699 --> 00:12:30.214
She doesn't do that.

230
00:12:30.214 --> 00:12:33.244
She lets, she quietly sits there, smugly.

231
00:12:33.244 --> 00:12:34.439
No, not smugly.

232
00:12:34.439 --> 00:12:38.744
She quietly sits there, goes mhmm,
mhmm, yeah, keep going.

233
00:12:38.744 --> 00:12:39.698
No, no, no.

234
00:12:39.698 --> 00:12:44.210
And by the way, half the time,
the smugness is wiped off her face.

235
00:12:44.210 --> 00:12:47.991
Bob, I know your not actually like this,
I think you're charming.

236
00:12:47.991 --> 00:12:48.838
Half the time.

237
00:12:48.838 --> 00:12:53.335
Actually it turns out Lindsey was, had
a different approach to what bob thought,

238
00:12:53.335 --> 00:12:54.572
and it kind of worked.

239
00:12:54.572 --> 00:12:56.004
And it worked anyway, but

240
00:12:56.004 --> 00:12:59.981
half the time Actually you know what
Bob's approach was totally wrong.

241
00:12:59.981 --> 00:13:04.060
So Lindsey's typing Bob's approach but
Bob's really wrong, but now.

242
00:13:04.060 --> 00:13:07.579
Lindsey, even though she thinks
she knew a better approach,

243
00:13:07.579 --> 00:13:09.339
they press Run in the console.

244
00:13:09.339 --> 00:13:13.129
They see the error appear,
it says an undefined is not a function.

245
00:13:13.129 --> 00:13:16.039
And now they get to debug
as a pair together as well.

246
00:13:16.039 --> 00:13:20.033
All right, this is gonna be a long
introduction to pair programming.

247
00:13:20.033 --> 00:13:23.553
But anyone got questions on how
to pair program effectively?

248
00:13:23.553 --> 00:13:25.760
We're gonna be doing it for two days.

249
00:13:25.760 --> 00:13:28.499
So you want to really know,
what if this happens?

250
00:13:28.499 --> 00:13:29.607
What if I feel this?

251
00:13:29.607 --> 00:13:30.389
How do I know?

252
00:13:30.389 --> 00:13:32.673
Don't be a driver that your navigating.

253
00:13:32.673 --> 00:13:35.478
In other words,
don't be typing and explaining.

254
00:13:35.478 --> 00:13:37.566
I don't want to be wandering around.

255
00:13:37.566 --> 00:13:40.632
I want to be clear who's
driver navigator at any point.

256
00:13:40.632 --> 00:13:42.589
Try to hold yourself accountable.

257
00:13:42.589 --> 00:13:45.230
But also let me tell you,
it's an aspiration.

258
00:13:45.230 --> 00:13:48.255
And the best execution of
pair programming is just,

259
00:13:48.255 --> 00:13:52.787
if I have an idea of how to solve it, I am
not gonna have my hands on the keyboard,

260
00:13:52.787 --> 00:13:57.806
the other person is, I'm gonna communicate
them through and explain how to solve it.

261
00:13:57.806 --> 00:13:59.563
Any questions on how to pair?

