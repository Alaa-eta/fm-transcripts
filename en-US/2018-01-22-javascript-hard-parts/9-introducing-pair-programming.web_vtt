WEBVTT

1
00:00:00.008 --> 00:00:02.965
&gt;&gt; Will: Pair Programming [INAUDIBLE] is,
without question,

2
00:00:02.965 --> 00:00:05.148
CodeSmith wouldn't work without it.

3
00:00:05.148 --> 00:00:08.454
Of the 1,000 hours you spend at CodeSmith,
about 400, I'd say, are paired.

4
00:00:08.454 --> 00:00:10.970
Everyone's laptops [INAUDIBLE]?

5
00:00:10.970 --> 00:00:12.550
Thank you, Ameen.

6
00:00:12.550 --> 00:00:13.415
Thank you, man.

7
00:00:13.415 --> 00:00:16.491
My passive aggressive thank you.

8
00:00:16.491 --> 00:00:19.895
&gt;&gt; [LAUGH]
&gt;&gt; Will: Never has a thank you been less

9
00:00:19.895 --> 00:00:23.527
grateful [LAUGH], and more demanding.

10
00:00:23.527 --> 00:00:25.600
All right, so

11
00:00:25.600 --> 00:00:29.850
pair programming is the secret approach
to how you grow as an engineer.

12
00:00:29.850 --> 00:00:31.031
Let's look at it up here.

13
00:00:31.031 --> 00:00:34.990
There are two types of learning out there,
or there's a spectrum.

14
00:00:34.990 --> 00:00:37.016
Harder learning, easier learning.

15
00:00:37.016 --> 00:00:39.562
Easier learning spoon feeds.

16
00:00:39.562 --> 00:00:40.820
How many diagrams there?

17
00:00:40.820 --> 00:00:44.050
He is going to need spoon feeds,
that is fine.

18
00:00:44.050 --> 00:00:48.800
So people mention Codeacademy,
Code School, wonderful.

19
00:00:48.800 --> 00:00:53.123
For your first 30, 50, even 100,
even 200 hours, great.

20
00:00:53.123 --> 00:00:57.192
You have to just keep going,
just keep pushing.

21
00:00:57.192 --> 00:01:00.324
If it spoonfeeds that keeps you going,
and repeating and

22
00:01:00.324 --> 00:01:03.467
rewriting a function a hundred times,
that is worth it.

23
00:01:03.467 --> 00:01:08.237
But at some point you're
gonna start a plateau in your

24
00:01:08.237 --> 00:01:12.271
growth if you follow
the spoonfed approach.

25
00:01:12.271 --> 00:01:16.762
You're gonna remain a junior developer,
an entry-level developer,

26
00:01:16.762 --> 00:01:18.462
that's not what you want.

27
00:01:18.462 --> 00:01:24.808
You wanna grow into an autonomous
problem-solving mid- or senior developer.

28
00:01:24.808 --> 00:01:25.819
So how do you do it?

29
00:01:27.080 --> 00:01:28.140
You do hard learning.

30
00:01:29.410 --> 00:01:32.140
You don't do the easier learning for
long, you do hard learning.

31
00:01:32.140 --> 00:01:38.930
So hard learning is things like, shout out
to Clara, I go and try and build projects.

32
00:01:38.930 --> 00:01:42.860
Hard learning is doing MIT open courseware
and all the problem sets of it.

33
00:01:42.860 --> 00:01:46.390
Hard learning is doing all those MOOCs and

34
00:01:46.390 --> 00:01:48.940
all the problems sets associated
with them, like Coursera, edX.

35
00:01:48.940 --> 00:01:54.287
Has anyone ever finished one of those?

36
00:01:54.287 --> 00:01:55.190
I doubt it.

37
00:01:55.190 --> 00:01:58.060
So, maybe you have, my, this is gonna
be a life changing moment for me.

38
00:01:58.060 --> 00:01:59.760
Which one did you finish
all the problem sets on?

39
00:01:59.760 --> 00:02:01.953
&gt;&gt; Speaker 2: It was not a programming
one, I finished a different one.

40
00:02:01.953 --> 00:02:04.800
&gt;&gt; Will: Okay, there you go,
that's confirmed my bias.

41
00:02:04.800 --> 00:02:06.830
And?
&gt;&gt; Speaker 3: Coursera, for Ruby.

42
00:02:06.830 --> 00:02:09.350
&gt;&gt; Will: You completed
a full Coursera course.

43
00:02:09.350 --> 00:02:10.610
&gt;&gt; Speaker 3: Yeah, it was [INAUDIBLE].
&gt;&gt; Will: All problem sets?

44
00:02:10.610 --> 00:02:11.170
&gt;&gt; Speaker 3: Yeah.

45
00:02:11.170 --> 00:02:12.570
&gt;&gt; Will: Let's give her
a round of applause.

46
00:02:12.570 --> 00:02:13.230
My God!

47
00:02:13.230 --> 00:02:16.572
This is unprecedented.

48
00:02:16.572 --> 00:02:19.306
&gt;&gt; Speaker 3: I felt obligated to
because my company paid for me to do it.

49
00:02:19.306 --> 00:02:21.648
&gt;&gt; Will: So I'll tell you this,
commitment device is very,

50
00:02:21.648 --> 00:02:23.522
because it's incredibly hard, right?

51
00:02:23.522 --> 00:02:25.502
The hard learning, what happens?

52
00:02:25.502 --> 00:02:29.859
You hit a block, and
that's what hard learning is.

53
00:02:29.859 --> 00:02:31.280
At that moment, you give up.

54
00:02:32.334 --> 00:02:34.920
So you grow as a problem solver, and

55
00:02:34.920 --> 00:02:38.830
you grow as a communicator
when you hit a block.

56
00:02:38.830 --> 00:02:41.600
When you cannot make this thing work and

57
00:02:41.600 --> 00:02:45.560
everything is screaming at you,
go do something up, make a cup of tea.

58
00:02:45.560 --> 00:02:48.515
Just run,
you wanna get away from the struggle.

59
00:02:48.515 --> 00:02:50.146
That's, but that's when you grow.

60
00:02:50.146 --> 00:02:53.007
That moment when you keep pushing
through is when you grow.

61
00:02:53.007 --> 00:02:57.617
If it takes a commitment device like
your company paying for you to do it,

62
00:02:57.617 --> 00:03:00.110
okay that helps, but most of the time,

63
00:03:00.110 --> 00:03:04.437
we do tend to slip into the give up
approach when we do hard learning.

64
00:03:04.437 --> 00:03:08.765
But hard learning is where we grow,
it's where we become an actual engineer.

65
00:03:08.765 --> 00:03:12.361
No one ever became an engineer,
unfortunately, by doing Code School.

66
00:03:12.361 --> 00:03:17.937
I love Code School I hear that
theme tune one more time.

67
00:03:17.937 --> 00:03:22.025
But, instead, we fall into the trap
of doing the easier learning and

68
00:03:22.025 --> 00:03:24.985
thinking we're growing,
but we hit a plateau and

69
00:03:24.985 --> 00:03:29.448
we think, what do I do next, or we do
hard learning, but we risk giving up.

70
00:03:29.448 --> 00:03:33.690
Now, if we push through the hard learning,
suppose we're doing JavaScript 30,

71
00:03:33.690 --> 00:03:35.016
we're pushing through.

72
00:03:35.016 --> 00:03:39.090
Suppose we're doing,
I don't know, Coursera, or

73
00:03:39.090 --> 00:03:42.358
edX course, and we're pushing through.

74
00:03:42.358 --> 00:03:43.030
Great.

75
00:03:43.030 --> 00:03:46.037
Now we move into this camp here.

76
00:03:46.037 --> 00:03:48.522
This bit here.

77
00:03:48.522 --> 00:03:51.610
Even here, we're not safe yet.

78
00:03:51.610 --> 00:03:56.100
There's a spectrum here of
how we do the hard learning.

79
00:03:56.100 --> 00:03:58.570
On one end is the researcher.

80
00:03:58.570 --> 00:04:02.645
So you'll say, I've heard Will say,
I should be doing hard learning.

81
00:04:02.645 --> 00:04:07.300
I've heard him say it, I'm gonna go do
a project, I'm gonna build a project, or

82
00:04:07.300 --> 00:04:09.750
I'm gonna go and do some hard problems, or

83
00:04:09.750 --> 00:04:13.930
I'm gonna do some exorcism IO problems,
they're gonna be hard.

84
00:04:13.930 --> 00:04:15.330
But I wanna do it.

85
00:04:15.330 --> 00:04:15.830
Okay, great.

86
00:04:17.520 --> 00:04:21.820
And then you see ten words, you see ten
words in the question that you don't know.

87
00:04:21.820 --> 00:04:24.710
And you go, crap, okay,
you go look them up.

88
00:04:24.710 --> 00:04:30.100
And in their documentation,
you see another ten words you don't know.

89
00:04:30.100 --> 00:04:31.890
Okay, now it's halfway through,
now it's lunchtime.

90
00:04:31.890 --> 00:04:33.900
So you take a quick break,
and then you come back.

91
00:04:33.900 --> 00:04:36.570
And you go, okay, I've got, and
by the end of the day, you've read

92
00:04:36.570 --> 00:04:40.060
everything these is to know about object
oriented programming in JavaScript.

93
00:04:40.060 --> 00:04:43.080
But you have not put your
hands on the keyboard once.

94
00:04:43.080 --> 00:04:46.912
You fall into the researcher trap,
that's one extreme.

95
00:04:46.912 --> 00:04:50.210
You're doing hard learning, you're not
actually doing it, you're doing hard work,

96
00:04:50.210 --> 00:04:50.935
but you're not doing it.

97
00:04:50.935 --> 00:04:53.000
Hard problems, but
you're not actually doing it.

98
00:04:53.000 --> 00:04:57.370
Other end, the StackOverflow approach.

99
00:04:57.370 --> 00:04:59.670
This is the, I'm doing a project,
I'm doing hard learning,

100
00:04:59.670 --> 00:05:01.690
this is real problem-solving.

101
00:05:01.690 --> 00:05:03.340
Okay, this isn't working.

102
00:05:03.340 --> 00:05:04.870
Let me, there's a snippet.

103
00:05:04.870 --> 00:05:06.390
Man, someone's had this error before.

104
00:05:06.390 --> 00:05:07.880
Snip it from StackOverflow.

105
00:05:07.880 --> 00:05:10.370
Take snippet, copy and paste.

106
00:05:10.370 --> 00:05:11.780
Still not quite working.

107
00:05:11.780 --> 00:05:13.625
Take another snippet, copy and paste.

108
00:05:13.625 --> 00:05:15.212
Okay, another snippet, copy and paste.

109
00:05:15.212 --> 00:05:17.216
Okay, they're not working together.

110
00:05:17.216 --> 00:05:21.351
Post those three snippets, and
ask someone how to make them work.

111
00:05:21.351 --> 00:05:23.310
It's working, Stack Overflow approach.

112
00:05:23.310 --> 00:05:25.476
You're doing hard learning,
you're doing a hard problem.

113
00:05:25.476 --> 00:05:32.087
But, you're doing the, just make it work,
you have no idea how it's working.

114
00:05:32.087 --> 00:05:35.149
So, it might seem we're stuck in
a catch-22 with all this stuff.

115
00:05:36.160 --> 00:05:40.015
No.
Are my arrows too, that's funny,

116
00:05:40.015 --> 00:05:43.300
it doesn't show up on here.

117
00:05:43.300 --> 00:05:45.947
Everyone can see, there's my arrow,

118
00:05:45.947 --> 00:05:50.210
pair programming lands us
perfectly in the middle, clearly.

119
00:05:51.240 --> 00:05:54.049
It just sits there separately here.

120
00:05:54.049 --> 00:05:57.153
That's a little arrow
pointing at the green area.

121
00:05:57.153 --> 00:06:00.590
Pair programming lands us
perfectly in the middle.

122
00:06:00.590 --> 00:06:05.378
Hopefully, if we do it right,
between the, I must understand what

123
00:06:05.378 --> 00:06:10.335
I'm doing in the hard learning, and
the other end, the make it work.

124
00:06:10.335 --> 00:06:14.930
Pair programming says,
because you have to never problem solve,

125
00:06:14.930 --> 00:06:17.719
that is, never come up with a solution,

126
00:06:17.719 --> 00:06:22.246
never come up with an approach to
solving the problem and type it.

127
00:06:22.246 --> 00:06:26.001
If you come up with the approach,
your hands are behind your back,

128
00:06:26.001 --> 00:06:29.437
you're having your partner
interpret your pseudo-code.

129
00:06:29.437 --> 00:06:32.723
The sort of way we talk through our
code up here is gonna be a lot more over

130
00:06:32.723 --> 00:06:33.634
the next two days.

131
00:06:33.634 --> 00:06:37.734
You have your partner
turning your pseudocode,

132
00:06:37.734 --> 00:06:43.935
your spoken verbalized problem-solving
approach, into actual code.

133
00:06:43.935 --> 00:06:48.194
What that means is that, as you explain
your approaches over the problem,

134
00:06:48.194 --> 00:06:52.249
and then have them actually interpret
your approach into actual code,

135
00:06:52.249 --> 00:06:55.765
you have to understand it just
enough that you can explain it,

136
00:06:55.765 --> 00:07:00.090
this is why we're gonna do it, and
this is how we're gonna do it.

137
00:07:00.090 --> 00:07:01.808
But you don't have to understand it so

138
00:07:01.808 --> 00:07:05.193
much because you can't leave your pair
programming partner waiting there

139
00:07:05.193 --> 00:07:07.892
while you research all of
object-oriented programming.

140
00:07:07.892 --> 00:07:09.808
You've got to at least
get your hands dirty,

141
00:07:09.808 --> 00:07:11.937
because they're sitting there waiting for
you.

142
00:07:11.937 --> 00:07:16.831
But nor can you just plug and play because
you gotta talk through the code line

143
00:07:16.831 --> 00:07:20.753
by line to them and
have them actually turn them it into code.

144
00:07:20.753 --> 00:07:24.427
So you're forced to land in the green
area between on the one end, the,

145
00:07:24.427 --> 00:07:27.428
must understand everything,
never get my hands dirty and

146
00:07:27.428 --> 00:07:31.435
the, don't understand anything but
hey I'll put my hands on the keyboard.

147
00:07:31.435 --> 00:07:33.390
This is an incredibly powerful approach.

148
00:07:33.390 --> 00:07:35.654
So let's see it in action,
let's imagine we have Bob and Lindsey.

149
00:07:35.654 --> 00:07:43.260
So Bob and Lindsey, they see a problem
presented they're gonna work on.

150
00:07:43.260 --> 00:07:50.662
It says, okay Bob and Lindsey, display 10
tweets from Twitter's API on the webpage.

151
00:07:50.662 --> 00:07:53.478
Ten tweets from Twitter's API
on the webpage.

152
00:07:53.478 --> 00:07:54.358
All right.

153
00:07:54.358 --> 00:07:58.358
So, Bob says, Lindsey,
do you know Twitter's API?

154
00:07:58.358 --> 00:07:58.950
And it's like, no.

155
00:07:58.950 --> 00:08:00.734
Let's go look at Twitter's API.

156
00:08:00.734 --> 00:08:04.052
Let's look at the docs, let's go looks
at the docs and see, the documentation,

157
00:08:04.052 --> 00:08:05.703
see what it says about how the API works.

158
00:08:05.703 --> 00:08:09.704
And then they get there and
Bob sees, Lindsay,

159
00:08:09.704 --> 00:08:15.807
it says it's gonna give us very
conveniently, an array of ten strings,

160
00:08:15.807 --> 00:08:21.050
which are the ten tweets,
directly from this address.

161
00:08:21.050 --> 00:08:22.539
And then she's like, that's not likely.

162
00:08:22.539 --> 00:08:24.590
But Bob says, yes it is.

163
00:08:24.590 --> 00:08:26.650
There it is.
Look, that's what it says.

164
00:08:26.650 --> 00:08:28.040
Just an array of ten strings.

165
00:08:28.040 --> 00:08:29.310
Effortless, easiest API in the world.

166
00:08:29.310 --> 00:08:29.940
No authentication.

167
00:08:31.010 --> 00:08:31.750
Nothing.

168
00:08:31.750 --> 00:08:33.550
Just effort, there they are.

169
00:08:33.550 --> 00:08:34.530
And Bob's really happy.

170
00:08:36.730 --> 00:08:37.800
Bob, look happier.

171
00:08:37.800 --> 00:08:38.570
Bob really happy.

172
00:08:38.570 --> 00:08:42.130
She's grinning, she's so
happy with how easy this API is.

173
00:08:42.130 --> 00:08:45.180
And then Lindsey says hey,
actually, let's look again.

174
00:08:45.180 --> 00:08:50.880
I think there's a jQuery method that
we can use to append strings to web,

175
00:08:50.880 --> 00:08:52.360
to a dom element.

176
00:08:52.360 --> 00:08:53.220
To the bit of the page,

177
00:08:53.220 --> 00:08:56.980
to the dom element, element with
a class called Tweet container.

178
00:08:56.980 --> 00:08:57.960
Okay?

179
00:08:57.960 --> 00:08:59.570
So, now they've done their research.

180
00:08:59.570 --> 00:09:03.250
That was the research stage, we did that
together kind of hustling, figuring out.

181
00:09:03.250 --> 00:09:07.192
Now they move into the driver,
navigator stage.

182
00:09:07.192 --> 00:09:14.750
So here we have, let's say, Bob says, hey

183
00:09:14.750 --> 00:09:18.640
Lindsay I actually got an idea how we can
approach this, do you mind if I navigate.

184
00:09:18.640 --> 00:09:23.344
So Bob's job is now going to be to
talk through an approach to solving

185
00:09:23.344 --> 00:09:27.895
this problem and her hands are never
going to touch the keyboard.

186
00:09:27.895 --> 00:09:31.891
If she feels, man, Lindsay,
just I know what I want you to do,

187
00:09:31.891 --> 00:09:36.349
that's the moment where her technical
communication gets to level up.

188
00:09:36.349 --> 00:09:39.360
Because she needs to be able
to explicate how to solve

189
00:09:39.360 --> 00:09:44.092
the problem to Lindsay such that Lindsay
can actually type it out on the keyboard.

190
00:09:44.092 --> 00:09:47.311
So for example, Bob says,
all right, Lindsay,

191
00:09:47.311 --> 00:09:50.690
let's start by declaring a function.

192
00:09:50.690 --> 00:09:53.270
Let's call it append tweets.

193
00:09:54.600 --> 00:09:57.120
Let's have it be passed the parameter.

194
00:09:57.120 --> 00:09:58.530
Let's call it tweets array.

195
00:09:58.530 --> 00:10:00.120
That's a placeholder.

196
00:10:00.120 --> 00:10:04.976
And the body of the function,
let's iterate through that tweets array,

197
00:10:04.976 --> 00:10:06.163
loop through it.

198
00:10:06.163 --> 00:10:09.264
Take each string, each tweet and

199
00:10:09.264 --> 00:10:15.040
pass the tweet string to
jQuery's built-in append method.

200
00:10:15.040 --> 00:10:20.820
And let's call that append method on
the DOM element with the class name,

201
00:10:20.820 --> 00:10:24.050
let's call it tweetscontainer,
let's call it that.

202
00:10:24.050 --> 00:10:28.222
And now, at this point, so
you've used their research, and

203
00:10:28.222 --> 00:10:30.950
Bob has spoken in pseudo code.

204
00:10:30.950 --> 00:10:32.670
And she's never put her
hands on the keyboard.

205
00:10:32.670 --> 00:10:35.310
And now Lindsey, she is our driver.

206
00:10:35.310 --> 00:10:37.830
So, she is actually at the keyboard.

207
00:10:37.830 --> 00:10:40.540
She is going, okay,
declare a function, append tweets.

208
00:10:40.540 --> 00:10:43.520
All right, function, append tweets.

209
00:10:43.520 --> 00:10:48.104
Parens, tweetsarray is the parameter,
tweetsarray, close parens,

210
00:10:48.104 --> 00:10:51.196
open curly braces,
iterate through the input.

211
00:10:51.196 --> 00:10:56.099
For open parens,
let i equal zero semicolon, and

212
00:10:56.099 --> 00:11:02.940
at no point did Barb say,
Lindsay, function, append tweets.

213
00:11:02.940 --> 00:11:03.691
Open paren.
No,

214
00:11:03.691 --> 00:11:09.521
she was saying all this precise pseudo
code which we'll all be working on today,

215
00:11:09.521 --> 00:11:14.338
as Ameen said, we're declaring
the function multiplied by two.

216
00:11:14.338 --> 00:11:19.402
We are declaring output and
assigning it to the return value

217
00:11:19.402 --> 00:11:25.230
of the call two multiplied by
two with the argument four.

218
00:11:25.230 --> 00:11:31.303
That pseudo code is what Lindsay's
turning into actual code on the keyboard.

219
00:11:31.303 --> 00:11:36.740
Okay, what this does is it ensures
that Bob has enough understanding

220
00:11:36.740 --> 00:11:41.040
to be able to talk through it but not too
much that she's stopped and not coded and

221
00:11:41.040 --> 00:11:48.390
that Lindsay has the ability to
interpret that precise pseudo code.

222
00:11:48.390 --> 00:11:50.640
After about ten to 15
minutes they can swap over.

223
00:11:50.640 --> 00:11:54.090
Now, you may hit a block and be like,
damn, we've no idea how to solve this.

224
00:11:54.090 --> 00:11:56.620
So yeah, as always,
try figuring stuff out.

225
00:11:56.620 --> 00:12:02.310
But if you have an idea, force yourself,
actually, Bob I have an idea.

226
00:12:02.310 --> 00:12:03.861
Do you mind driving?

227
00:12:03.861 --> 00:12:06.490
And so
Lindsay's going to explain her idea.

228
00:12:06.490 --> 00:12:08.266
In that moment where you're like,
let me just try this.

229
00:12:08.266 --> 00:12:09.808
Or, can we just cancel all that.

230
00:12:09.808 --> 00:12:15.520
Force yourself to have the other
person be navigated through it by you.

231
00:12:15.520 --> 00:12:20.330
And, by the way, Bob thinks that
Lindsay is making a horrible mistake.

232
00:12:20.330 --> 00:12:22.050
Or, Lindsay thinks Bob is
making a horrible mistake.

233
00:12:22.050 --> 00:12:22.980
Let's be equal.
Lindsay thinks Bob

234
00:12:22.980 --> 00:12:24.770
is making a horrible mistake.

235
00:12:24.770 --> 00:12:28.310
She does not say stop, stop, stop, stop.

236
00:12:28.310 --> 00:12:29.188
Let me show you how to do it.

237
00:12:29.188 --> 00:12:30.430
She does not do that.

238
00:12:30.430 --> 00:12:34.996
She let's the, she just quietly
sits there, smugly [INAUDIBLE].

239
00:12:34.996 --> 00:12:40.160
[LAUGH] She quietly sits there,
goes um-hmm, um-hmm, yeah, keep going.

240
00:12:40.160 --> 00:12:40.867
No, no, no.

241
00:12:40.867 --> 00:12:45.042
By the way, half the time,
the smugness is wiped off her face.

242
00:12:45.042 --> 00:12:46.419
Bob, I don't think you're
actually like this.

243
00:12:46.419 --> 00:12:47.883
I think you're charming.

244
00:12:47.883 --> 00:12:51.934
Half the time, actually it turns out
Lindsey had a different approach to what

245
00:12:51.934 --> 00:12:53.820
Bob thought, and it kinda worked.

246
00:12:53.820 --> 00:12:54.905
It worked anyway, but

247
00:12:54.905 --> 00:12:58.512
half of the time actually you know
what Bob's approach was totally wrong.

248
00:12:58.512 --> 00:13:03.766
So Lindsey is typing to Bob's approach,
and Bob is really wrong, but now Lindsay,

249
00:13:03.766 --> 00:13:08.884
even though she thinks she knew a better
approach, they press run in the console.

250
00:13:08.884 --> 00:13:13.711
They see the error appear, it says,
you know, undefined is not a function.

251
00:13:13.711 --> 00:13:16.868
And now they get to debug
as a pair together as well.

252
00:13:16.868 --> 00:13:20.569
All right, this has been a long
introduction to pair programming.

253
00:13:20.569 --> 00:13:24.120
Anyone got questions on how
to pair program effectively,

254
00:13:24.120 --> 00:13:26.591
we're going to be doing it for two days.

255
00:13:26.591 --> 00:13:29.260
So we want to really know like,
what if this happens?

256
00:13:29.260 --> 00:13:30.640
What if I feel this?

257
00:13:30.640 --> 00:13:31.570
How do people know?

258
00:13:31.570 --> 00:13:35.233
Don't be a driver,
a dual driver-navigator, in other words,

259
00:13:35.233 --> 00:13:37.174
don't be typing and explaining.

260
00:13:37.174 --> 00:13:38.794
I'm going to be wandering around,

261
00:13:38.794 --> 00:13:42.131
if I wanna be clear who's
driving navigator any point.

262
00:13:42.131 --> 00:13:45.539
But also let me tell you,
it's an aspiration.

263
00:13:45.539 --> 00:13:49.865
And the best execution of pair programming
is just, if I have an idea of how to solve

264
00:13:49.865 --> 00:13:53.876
it, I am not going to have my hands on
the keyboard, the other person is, and

265
00:13:53.876 --> 00:13:57.170
it will communicate them through and
explain how to solve it.

266
00:13:57.170 --> 00:13:58.840
Are there any questions on how to pair?

