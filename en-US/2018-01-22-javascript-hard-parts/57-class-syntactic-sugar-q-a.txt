[00:00:00]
>> Will Sentance: Let's have thumbs at this point. We're gonna go back to the challenges in a second, and then we're gonna have closing thoughts after that. Everybody's thumbs out. Man, clarification, let's get into challenges. Everyone's thumbs out. Let's see it. Katie has her clarifying?
>> Speaker 2: No.
>> Will Sentance: Loud and clear.

[00:00:16]
Katie's clear. Let's see if our friends online have anything they wanna ask. Use it to product, use to creator. I see. Yeah so that's a good question from Justin there. And so Julian do we, in the end, actually say user two and user one's prototype is user? I really don't like that vagueness.

[00:00:41]
Cuz it's definitely not it's user.prototype. That's the prototype of user 1 and user 2. It's this object here, not this object, it's the sub-object, the one attached to the property prototype. So I would prefer you said user 1 and user 2's prototype is user.prototype, which is this object here.

[00:01:01]
I prefer that. I also love instead, if you gonna say that, at least clarify and say that is to say the reference made in the underscore proto. Underscore reference I'm using one is to the object user.prototype. I much prefer that more intuitive way. Victor says what about the class keywords define and parse, is there any difference?

[00:01:24]
Victor, I hope we answered your question. Due to performance? I encourage using it Victor. In terms of performance with this sort of stuff, we're doing under the hood similar things. All right Julian, how should we do if we want to attach a proto to an already declared function?

[00:01:43]
Is there an accepted way to do that? Attaching a new proto is not best practice so, Julian's question. What if I want to set a whole new guy here as a proto to this function? Let's to this object or these objects. That's not best practice. We can do it by using a built-in method set prototype of, but typically, it's apparently very poor performance.

[00:02:11]
Under the hood, a whole bunch of things are getting broke, well, have to be re-optimized to make that successful. We can do it, but what we tend to do instead, is better to create a whole new object and have set a new prototype for it. We can reset our prototype if we wanted to but not best practice.

[00:02:30]
Lindsay.
>> Speaker 2: What if you wanna add a new method later?
>> Will Sentance: Do we have access to this? Could we do it?
>> Speaker 2: We used to do it the old way like-
>> Will Sentance: We could do it the old way, absolutely.
>> Speaker 2: [CROSSTALK] yeah.
>> Will Sentance: Absolutely.

