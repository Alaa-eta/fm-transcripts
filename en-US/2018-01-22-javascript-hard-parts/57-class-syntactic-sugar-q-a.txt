[00:00:00]
>> Let's have thumbs at this point. We're gonna go back to the challenge in a second, and then we're gonna have closing thoughts after that. Everybody's thumbs out. [PAUSE] Man. Clarification, let's get into challenges. Everyone's thumbs out. Let's see it, Katie has a clarifying.
>> No.
>> Okay.

[00:00:15]
Katie's clear. Let's see if our friends online have anything you wanna ask? User 2 prototype is user creator. I see, Yeah that's a good question from Julian. Do we in the end actually say user 2 and user 1's prototype is user, I really don't like that vagueness Cuz it's definitely not you, it's user.prototype.

[00:00:44]
That's the prototype of user one and user two. It's this object here, not this object. It's the subobject, the one attached on the property prototype. So I prefer you said user one and user two's prototype is user.prototype, which is this object here Victor says what about the clause keyword to define a clause, is there any difference?

[00:01:25]
Victor I hope he answered your question. Items and performance, I encourage using it Victor. In terms of performance with this sort of staff we do end of the hood similar things. Alright. Julian, how should we do if we want to attach a proton to an already declared function?

[00:01:45]
Is there an accepted way to do that? Attach a new proto is not best practice. Julian's question is, hold on, what if I want to set a whole new guy here as the proto to this function? These objects. That's not the best practice. We can do it by using the built in method set proto type of but apparently it's a very poor performance.

[00:02:11]
Under the hood a whole bunch of things have to be re-optimized to make that Successful. We can do it, but what we tend to instead, is it better to create a whole new object and have set a new prototype for it. But we can reset our prototype if we wanted to.

[00:02:28]
But not best practice. Lindsey.
>> What if you wanna add a new method later. Would you use the frst set?
>> Do we have access to them? Can we do it?
>> We just do it the old way like [INAUDIBLE]
>> Absolutely.

