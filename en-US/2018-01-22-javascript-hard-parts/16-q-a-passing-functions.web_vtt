WEBVTT

1
00:00:00.552 --> 00:00:01.681
&gt;&gt; Will Sentance: We'll get our thumbs and

2
00:00:01.681 --> 00:00:04.906
we're going to go test this out in
pairing through the challenges, and

3
00:00:04.906 --> 00:00:07.772
then we're going to talk about
why is it even possible in Java.

4
00:00:07.772 --> 00:00:11.201
You know a language where you
do not pass functions around.

5
00:00:11.201 --> 00:00:15.561
This is gonna feel very,
very uncomfortable.

6
00:00:15.561 --> 00:00:20.155
If you had any idea of parsing
a function in to another function,

7
00:00:20.155 --> 00:00:22.972
it's gonna feel very uncomfortable.

8
00:00:22.972 --> 00:00:25.545
In JavaScript, a core part of Java.

9
00:00:25.545 --> 00:00:27.444
We're going to see why after the pairing.

10
00:00:27.444 --> 00:00:29.272
But first, funds.

11
00:00:29.272 --> 00:00:31.641
I do not know what happened.

12
00:00:31.641 --> 00:00:33.180
I have some clarifications.

13
00:00:33.180 --> 00:00:38.058
I'm clear on this core fundamental
principle of creating a function

14
00:00:38.058 --> 00:00:40.160
where I can take in an array and

15
00:00:40.160 --> 00:00:45.120
the placeholder that will then only
when I call the function determine

16
00:00:45.120 --> 00:00:49.852
what functionality I apply to each
specific element of the array.

17
00:00:49.852 --> 00:00:52.633
Thumbs on this,
no I don't have clarification, clear.

18
00:00:52.633 --> 00:00:54.360
It's good to have clarifications.

19
00:00:56.760 --> 00:00:57.962
A lot of thumbs up.

20
00:00:57.962 --> 00:00:59.810
Do wanna phrase us a question?

21
00:00:59.810 --> 00:01:04.183
&gt;&gt; Speaker 2: I don't understand
why instruction becomes functional.

22
00:01:04.183 --> 00:01:08.110
I bet it's just because it's
a second parameter that's passed?

23
00:01:08.110 --> 00:01:09.031
&gt;&gt; Will Sentance: It's exactly that.

24
00:01:09.031 --> 00:01:09.621
Damn right.

25
00:01:09.621 --> 00:01:16.321
So why does a ray become one, two, three?

26
00:01:16.321 --> 00:01:18.506
So when we redefine the function.

27
00:01:18.506 --> 00:01:20.110
So with function there's two stages.

28
00:01:22.040 --> 00:01:24.352
This is what it will do if you use me.

29
00:01:24.352 --> 00:01:25.327
This is a definition.

30
00:01:25.327 --> 00:01:31.433
It's like if you ever use me, this is what
I will do and then there's the running it.

31
00:01:31.433 --> 00:01:37.722
Can you gesture which
bit is the definition?

32
00:01:37.722 --> 00:01:39.403
Which bit of the copy around manipulate?

33
00:01:39.403 --> 00:01:40.632
Which version is the definition?

34
00:01:42.205 --> 00:01:44.653
&gt;&gt; Speaker 3: I don't really
understand the question.

35
00:01:44.653 --> 00:01:46.860
&gt;&gt; Will Sentance: Lindsay,
which of these is a definition?

36
00:01:46.860 --> 00:01:48.274
&gt;&gt; Speaker 2: The top one.
&gt;&gt; Will Sentance: The top one, exactly,

37
00:01:48.274 --> 00:01:49.461
copyArrayAndManipulate.

38
00:01:49.461 --> 00:01:52.031
That's like this is what
I'll do if you ever run me.

39
00:01:52.031 --> 00:01:53.042
This is my description.

40
00:01:53.042 --> 00:01:55.691
This is what my functionality is.

41
00:01:55.691 --> 00:01:57.543
That's general, it's generic.

42
00:01:57.543 --> 00:02:02.196
It says, ultimately, I'm gonna run
this functionality on some data,

43
00:02:02.196 --> 00:02:07.252
some numbers or some strings or some words
or whatever and I run it on some data.

44
00:02:07.252 --> 00:02:09.681
But I don't yet
know what that data's gonna be,

45
00:02:09.681 --> 00:02:11.882
because that's part of having a function.

46
00:02:11.882 --> 00:02:14.751
I wanna be able to use it on
lots of different types of data.

47
00:02:14.751 --> 00:02:19.610
So leave instead some blanks,
some placeholders for that data.

48
00:02:19.610 --> 00:02:25.963
And then when you do run me and where am I
running copyArrayandManipulate, Lindsey?

49
00:02:25.963 --> 00:02:26.616
&gt;&gt; Speaker 2: The bottom line.
&gt;&gt; Will Sentance: And

50
00:02:26.616 --> 00:02:27.983
how do I know I'm running it?

51
00:02:27.983 --> 00:02:29.742
&gt;&gt; Speaker 2: With the parens.
&gt;&gt; Will Sentance: With the parens.

52
00:02:29.742 --> 00:02:31.691
That's where I fill in my placeholders.

53
00:02:31.691 --> 00:02:35.440
So my blanks, so
array is a blank I fill it in what?

54
00:02:35.440 --> 00:02:35.973
&gt;&gt; Speaker 2: One, two, three.
&gt;&gt; Will Sentance: And

55
00:02:35.973 --> 00:02:38.471
instructions are blank, I fill it in with?

56
00:02:38.471 --> 00:02:39.880
And the reason is just the ordering.

57
00:02:39.880 --> 00:02:41.895
You will spot on is just the ordering.

58
00:02:41.895 --> 00:02:43.220
Does that answer the question?

59
00:02:43.220 --> 00:02:45.454
Excellent, good clarification.

60
00:02:45.454 --> 00:02:47.835
Folks, at this point,
we are going to get back to paring.

61
00:02:47.835 --> 00:02:49.954
Work through the challenges.

62
00:02:49.954 --> 00:02:54.107
Map with and for each,
make sure you try and do then.

63
00:02:54.107 --> 00:02:56.532
I'm gonna have look at how
you reach doing them and

64
00:02:56.532 --> 00:02:58.978
then we will talk about
how is this even possible.

