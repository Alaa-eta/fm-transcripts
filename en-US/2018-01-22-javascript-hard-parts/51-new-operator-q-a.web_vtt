WEBVTT

1
00:00:00.390 --> 00:00:02.170
&gt;&gt; Will Sentance: All right,
let's have thumbs.

2
00:00:02.170 --> 00:00:05.310
I'm not accepting this,
I have clarifications.

3
00:00:05.310 --> 00:00:09.490
I'm clear that our functions,
when treated like functions by adding

4
00:00:09.490 --> 00:00:11.740
parens on the end of them,
behave as functions.

5
00:00:11.740 --> 00:00:15.740
If they're treated like an object,
userCreator.andrew,

6
00:00:15.740 --> 00:00:18.860
what would this return for,

7
00:00:18.860 --> 00:00:22.420
what would this evaluate to, Andrea?
&gt;&gt; Andrea: It's going to be

8
00:00:23.490 --> 00:00:26.490
an object with Andrew.
&gt;&gt; Will Sentance: Well but

9
00:00:26.490 --> 00:00:27.970
what would me retrieving this.

10
00:00:27.970 --> 00:00:32.898
So here we've already got the Andrew
property, so userCreator.andrew.

11
00:00:32.898 --> 00:00:34.820
I'd be retrieving three, exactly.

12
00:00:34.820 --> 00:00:37.490
Okay, so let's have thumbs on that notion.

13
00:00:37.490 --> 00:00:41.492
It's weird, if part of it's just,
I need more time to embrace it.

14
00:00:41.492 --> 00:00:44.957
So Andrew's got a thumb,
Katy's got a thumb,

15
00:00:44.957 --> 00:00:48.270
a medium thumb,
sorry I'll call it a thumb.

16
00:00:48.270 --> 00:00:51.830
Art is good to go, Lindsay has
a medium thumb, Griffin has one.

17
00:00:51.830 --> 00:00:55.140
Griffin, will you kick us off?
&gt;&gt; Griffin: So if you were to use the user

18
00:00:55.140 --> 00:01:00.100
creator as a callback function,
can you use that user creator object

19
00:01:00.100 --> 00:01:03.050
data in that function that you're using?
&gt;&gt; Will Sentance: You certainly can but

20
00:01:03.050 --> 00:01:04.370
I'll just make this point.

21
00:01:04.370 --> 00:01:06.150
That wouldn't be standard practice.

22
00:01:06.150 --> 00:01:07.990
Just cuz it's there
doesn't mean we use it.

23
00:01:07.990 --> 00:01:10.680
We use it for
this one thing we're gonna talk about.

24
00:01:10.680 --> 00:01:14.830
It isn't standard practice to
bundle them in that sense.

25
00:01:14.830 --> 00:01:18.150
They're functions,
it is all fundamentally objects, but

26
00:01:18.150 --> 00:01:20.390
they're used as functions, okay.

27
00:01:20.390 --> 00:01:21.610
But we can store stuff here.

28
00:01:21.610 --> 00:01:27.760
We're gonna see in a moment we're gonna
store something here, something here.

29
00:01:27.760 --> 00:01:31.310
We are gonna store something here.

30
00:01:31.310 --> 00:01:32.530
All right, anyone got that?

31
00:01:32.530 --> 00:01:34.680
Okay, Griffin, go ahead.
&gt;&gt; Griffin: Again,

32
00:01:34.680 --> 00:01:38.650
with the memory, could you kind of,
instead of using the backpack or

33
00:01:38.650 --> 00:01:43.528
the lexicon thing, could you-
&gt;&gt; Griffin: Yeah, could you store it

34
00:01:43.528 --> 00:01:47.300
into the function's object?
&gt;&gt; Will Sentance: This is where

35
00:01:47.300 --> 00:01:52.650
it gets a bit hard with hard parts is
we're seeing all of the underlying

36
00:01:52.650 --> 00:01:53.800
features of JavaScript.

37
00:01:54.970 --> 00:01:57.019
Some of them you can cross-use.

38
00:01:58.170 --> 00:02:01.660
This one, the is a special magical

39
00:02:01.660 --> 00:02:05.720
property that is not involved in
conventional objects like this.

40
00:02:05.720 --> 00:02:07.850
It's hidden off cuz, you're right,

41
00:02:07.850 --> 00:02:10.140
we said functions have a hidden
square back that's good.

42
00:02:10.140 --> 00:02:11.836
That's not this guy here.

43
00:02:11.836 --> 00:02:14.210
That's a really nice
clarification by Griffin.

44
00:02:14.210 --> 00:02:17.398
This object is definitely
is not that scope property.

45
00:02:17.398 --> 00:02:20.527
Do you remember that guy which
held on to state live in data?

46
00:02:20.527 --> 00:02:22.820
Okay, that's an interesting one, man.

47
00:02:22.820 --> 00:02:26.540
Definitely not no, stop, stop it.

48
00:02:26.540 --> 00:02:28.710
That's not allowed.

49
00:02:28.710 --> 00:02:32.490
Okay, Lindsay.
&gt;&gt; Lindsey: I don't know,

50
00:02:32.490 --> 00:02:36.770
I think I got lost somewhere, but what's
the function in user creator right now?

51
00:02:38.590 --> 00:02:39.680
&gt;&gt; Will Sentance: User creator

52
00:02:39.680 --> 00:02:42.300
was declared-
&gt;&gt; Lindsey: Maybe seeing this

53
00:02:42.300 --> 00:02:43.890
would help you.
&gt;&gt; Will Sentance: We're gonna see it in

54
00:02:43.890 --> 00:02:46.615
a second, but user creator was declared
as a function at the top, right?

55
00:02:46.615 --> 00:02:47.530
&gt;&gt; Lindsey: Mm-hm.

56
00:02:47.530 --> 00:02:49.217
&gt;&gt; Will Sentance: Whenever you declare

57
00:02:49.217 --> 00:02:55.033
a function, by default, just by its
very nature, it's also an object.

58
00:02:55.033 --> 00:02:58.435
Okay, just declared that for, talk me
through what we did in line one there

59
00:02:58.435 --> 00:03:00.585
Lindsey.
&gt;&gt; Lindsey: Declare the function,

60
00:03:00.585 --> 00:03:01.883
user creator.
&gt;&gt; Will Sentance: User creator.

61
00:03:01.883 --> 00:03:05.610
Remember how I draw my functions,
there's a box like that?

62
00:03:05.610 --> 00:03:11.725
What do we do in a few lines
down in let user one equal?

63
00:03:11.725 --> 00:03:13.920
&gt;&gt; Lindsey: We declared a variable and

64
00:03:13.920 --> 00:03:17.912
assigned it that whatever
the user creator will

65
00:03:17.912 --> 00:03:19.060
return.
&gt;&gt; Will Sentance: Great,

66
00:03:19.060 --> 00:03:20.550
go run that functionality.

67
00:03:20.550 --> 00:03:22.160
And I know I'm gonna go run
the functionality, why?

68
00:03:23.750 --> 00:03:25.130
Parens, good.

69
00:03:25.130 --> 00:03:31.310
But let's just not forget if in the next
line I were to write usercreator.Andrew,

70
00:03:31.310 --> 00:03:35.110
in other words treating
user creator as an object.

71
00:03:35.110 --> 00:03:37.020
JavaScript's not gonna complain.

72
00:03:37.020 --> 00:03:40.710
It's gonna go yep, sure, yes,
I'm a function, but I'm also an object.

73
00:03:40.710 --> 00:03:43.520
You treat me like a function,
I run like a function.

74
00:03:43.520 --> 00:03:48.030
You put something in me
like an object [INAUDIBLE]

75
00:03:48.030 --> 00:03:49.060
weird thing to say.

76
00:03:49.060 --> 00:03:51.770
You put something in me like an object,
I behave as an object.

77
00:03:51.770 --> 00:03:54.950
That is just how it is.

78
00:03:54.950 --> 00:03:58.380
Okay Lindsey, so
it is a function nothing has changed.

79
00:03:58.380 --> 00:04:02.419
But, if I were to treat it like an object,
userCreator, and

80
00:04:02.419 --> 00:04:06.236
said I don't know,
userCreator.andrew equal three.

81
00:04:06.236 --> 00:04:10.016
Now if I had a console log,
if I had a console log my userCreator,

82
00:04:10.016 --> 00:04:11.780
I'd still see the function.

83
00:04:11.780 --> 00:04:15.820
But if I were to console log my user
creator with a special Chrome dev tool,

84
00:04:15.820 --> 00:04:16.460
down arrow.

85
00:04:16.460 --> 00:04:19.890
I would see the function,
but also in the properties,

86
00:04:19.890 --> 00:04:24.020
I would see some other properties and
Andrew three.

87
00:04:24.020 --> 00:04:27.323
Okay, this is not surface level really.

88
00:04:27.323 --> 00:04:29.720
We're not going to be doing this
day to day, but it's there.

89
00:04:30.930 --> 00:04:32.400
This is our day to day.

90
00:04:32.400 --> 00:04:35.948
This is what the function really is,
but we can store some stuff here, but

91
00:04:35.948 --> 00:04:37.907
were not gonna be storing it ourselves.

92
00:04:37.907 --> 00:04:42.927
JavaScript stores stuff here for us,
that's really what the real story is here.

93
00:04:42.927 --> 00:04:47.326
We treat user creator as a function but
JavaScript can store some stuff here for.

94
00:04:47.326 --> 00:04:50.329
We're definitely never storing Andrew as
three ever, ever, ever on this object,

95
00:04:50.329 --> 00:04:53.310
let's be really clear on that
we're not doing that ever.

96
00:04:53.310 --> 00:04:58.720
We definitely, but,
Java script can store stuff there, for us.

97
00:04:58.720 --> 00:05:02.185
Because it wants,
it has special, goals and

98
00:05:02.185 --> 00:05:06.030
things it wants to achieve that we wanna
make available to you as a creator.

99
00:05:06.030 --> 00:05:10.140
So, now we know,
anyone still want to try and clarify?

100
00:05:10.140 --> 00:05:15.280
Yeah, Katie?
&gt;&gt; Katy: I have a question on the new,

101
00:05:15.280 --> 00:05:16.910
adding new to the.
&gt;&gt; Will Sentance: Okay,

102
00:05:16.910 --> 00:05:18.330
we may come to that in a second,
but go ahead,

103
00:05:18.330 --> 00:05:19.630
throw it out.

104
00:05:19.630 --> 00:05:20.754
&gt;&gt; Katy: Okay.
&gt;&gt; Will Sentance: So try it out now.

105
00:05:20.754 --> 00:05:23.020
We're gonna go through it line by line,

106
00:05:23.020 --> 00:05:25.330
believe me.
&gt;&gt; Katy: Maybe I'll wait.

107
00:05:25.330 --> 00:05:26.220
&gt;&gt; Will Sentance: This is more about

108
00:05:26.220 --> 00:05:27.240
do we get this idea?

109
00:05:27.240 --> 00:05:30.430
So are good with the function?
&gt;&gt; Katy: I just need to keep doing.

110
00:05:30.430 --> 00:05:31.770
&gt;&gt; Will Sentance: Okay, let's see our new

111
00:05:31.770 --> 00:05:32.410
in action then.

