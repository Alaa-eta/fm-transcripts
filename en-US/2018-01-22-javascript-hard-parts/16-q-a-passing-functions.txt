[00:00:00]
>> Will Sentance: Okay, we're gonna have thumbs. Then we're gonna go and test this out in pairing through the challenges. And then, we're gonna talk about why is this even possibly in JavaScript? If you come from a language where you do not pass functions around, this is gonna feel very, very uncomfortable.

[00:00:14]
If [INAUDIBLE] language where the idea of passing a function into another function is gonna feel very uncomfortable. In JavaScript, a core part of the job is we're gonna see why of the pairing. But first thumbs, I do not know what happened. I have some clarifications. I'm clear on this core fundamental principle of creating a function where I can take in an array and a placeholder that will then only when I call the function determine what functionality I applied to each specific element of the array.

[00:00:49]
Okay, thumbs on this. No I don't have clarification, clear. It's good to have clarifications. Okay, a lot of thumbs up. Do you want to phrase that as a question?
>> Speaker 2: I don't understand why instructions becomes function multiply by two. Is it just because it's the second parameter that's passed?

[00:01:08]

>> Will Sentance: It's exactly that, damn right. So why does array become one, two, three?
>> Will Sentance: So when we define the function. So, with functions it's two stages, right? There's the this is what it will do, if you use me. This is the definition. It's like if you ever use me, this is what I will do.

[00:01:29]
And then there's the running it. Can you gesture which bit's the definition? Which bit of the copyArrayAndManipulate, which version is the definition?
>> Speaker 3: I don't think I understand the question.
>> Will Sentance: Lindsey, which of these is a definition?
>> Lindsey: The top one.
>> Will Sentance: The top one, exactly, copyArrayAndManipulate. That's the, this is what I will do if you ever run me.

[00:01:52]
This is my description. This is what my functionality is. That's general, it's generic. It says, ultimately, I'm gonna run this functionality on some data, some numbers, or some strings, or some words or whatever. I'm gonna run it on some data. But I don't yet know what that data's gonna be, right?

[00:02:09]
Because that's the whole point of having a function, is I wanna be able to use it on lots of different types of data. So leave instead some blanks, some place holders for that data. And then, when you do run me and where am I running copyArrayAndManipulate, Lindsey?
>> Lindsey: The bottom line?

[00:02:26]

>> Will Sentance: And how do I know I'm running it?
>> Lindsey: With a parentheses.
>> Will Sentance: With a parens. That's where I fill in my placeholders, so my blanks, so array is a blank. I fill it in with what?
>> Lindsey: One, two, three.
>> Will Sentance: And instructions are blank, I fill it in with?

[00:02:37]

>> [INAUDIBLE].
>> Will Sentance: And the reason is just the ordering. You're spot on. It's just the ordering. Okay, does that answer the question? Excellent, good clarification. All right, folk, at this point, we're gonna go back to the pairing. Work through the challenges. Map with, and for each, make sure you try and do them.

[00:02:54]
I'm gonna have a look at how you're each doing them. And then, we will talk about how is this even possible.

