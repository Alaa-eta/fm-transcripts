WEBVTT

1
00:00:00.103 --> 00:00:02.002
&gt;&gt; Will Sentance: Let's
have thumbs at this point.

2
00:00:02.002 --> 00:00:04.164
We're gonna go back to
the challenges in a second, and

3
00:00:04.164 --> 00:00:06.690
then we're gonna have
closing thoughts after that.

4
00:00:06.690 --> 00:00:07.630
Everybody's thumbs out.

5
00:00:08.910 --> 00:00:12.010
Man, clarification,
let's get into challenges.

6
00:00:12.010 --> 00:00:12.830
Everyone's thumbs out.

7
00:00:12.830 --> 00:00:13.940
Let's see it.

8
00:00:13.940 --> 00:00:15.740
Katie has her clarifying?

9
00:00:15.740 --> 00:00:16.500
&gt;&gt; Speaker 2: No.
&gt;&gt; Will Sentance: Loud and clear.

10
00:00:16.500 --> 00:00:17.292
Katie's clear.

11
00:00:17.292 --> 00:00:20.153
Let's see if our friends online
have anything they wanna ask.

12
00:00:20.153 --> 00:00:22.663
Use it to product, use to creator.

13
00:00:24.091 --> 00:00:28.378
I see.

14
00:00:28.378 --> 00:00:31.329
Yeah so
that's a good question from Justin there.

15
00:00:31.329 --> 00:00:35.154
And so Julian do we, in the end,
actually say user two and

16
00:00:35.154 --> 00:00:37.320
user one's prototype is user?

17
00:00:39.180 --> 00:00:41.070
I really don't like that vagueness.

18
00:00:41.070 --> 00:00:44.120
Cuz it's definitely not
it's user.prototype.

19
00:00:44.120 --> 00:00:47.330
That's the prototype of user 1 and user 2.

20
00:00:47.330 --> 00:00:49.420
It's this object here, not this object,

21
00:00:49.420 --> 00:00:52.320
it's the sub-object, the one
attached to the property prototype.

22
00:00:52.320 --> 00:00:57.432
So I would prefer you said user 1 and
user 2's prototype

23
00:00:57.432 --> 00:01:01.914
is user.prototype,
which is this object here.

24
00:01:01.914 --> 00:01:03.194
I prefer that.

25
00:01:03.194 --> 00:01:07.629
I also love instead, if you gonna
say that, at least clarify and

26
00:01:07.629 --> 00:01:11.915
say that is to say the reference
made in the underscore proto.

27
00:01:11.915 --> 00:01:16.966
Underscore reference I'm using one
is to the object user.prototype.

28
00:01:16.966 --> 00:01:19.269
I much prefer that more intuitive way.

29
00:01:21.020 --> 00:01:24.880
Victor says what about the class keywords
define and parse, is there any difference?

30
00:01:24.880 --> 00:01:27.200
Victor, I hope we answered your question.

31
00:01:28.560 --> 00:01:30.160
Due to performance?

32
00:01:31.470 --> 00:01:33.370
I encourage using it Victor.

33
00:01:33.370 --> 00:01:35.890
In terms of performance
with this sort of stuff,

34
00:01:35.890 --> 00:01:38.230
we're doing under the hood similar things.

35
00:01:38.230 --> 00:01:39.309
All right Julian,

36
00:01:39.309 --> 00:01:43.635
how should we do if we want to attach
a proto to an already declared function?

37
00:01:43.635 --> 00:01:45.270
Is there an accepted way to do that?

38
00:01:45.270 --> 00:01:51.159
Attaching a new proto is
not best practice so,

39
00:01:51.159 --> 00:01:54.029
Julian's question.

40
00:01:54.029 --> 00:01:59.792
What if I want to set a whole new guy
here as a proto to this function?

41
00:01:59.792 --> 00:02:02.430
Let's to this object or these objects.

42
00:02:02.430 --> 00:02:04.080
That's not best practice.

43
00:02:04.080 --> 00:02:08.630
We can do it by using a built-in
method set prototype of, but

44
00:02:08.630 --> 00:02:11.790
typically, it's apparently
very poor performance.

45
00:02:11.790 --> 00:02:14.750
Under the hood,
a whole bunch of things are getting broke,

46
00:02:14.750 --> 00:02:18.900
well, have to be re-optimized
to make that successful.

47
00:02:18.900 --> 00:02:21.170
We can do it, but
what we tend to do instead,

48
00:02:21.170 --> 00:02:25.970
is better to create a whole new object and
have set a new prototype for it.

49
00:02:25.970 --> 00:02:30.360
We can reset our prototype if we
wanted to but not best practice.

50
00:02:30.360 --> 00:02:31.150
Lindsay.

51
00:02:31.150 --> 00:02:33.260
&gt;&gt; Speaker 2: What if you
wanna add a new method later?

52
00:02:34.700 --> 00:02:36.310
&gt;&gt; Will Sentance: Do we
have access to this?

53
00:02:36.310 --> 00:02:37.440
Could we do it?

54
00:02:37.440 --> 00:02:38.600
&gt;&gt; Speaker 2: We used to
do it the old way like-

55
00:02:38.600 --> 00:02:39.110
&gt;&gt; Will Sentance: We could do it

56
00:02:39.110 --> 00:02:39.795
the old way, absolutely.

57
00:02:39.795 --> 00:02:40.705
&gt;&gt; Speaker 2: [CROSSTALK] yeah.

58
00:02:40.705 --> 00:02:41.205
&gt;&gt; Will Sentance: Absolutely.

