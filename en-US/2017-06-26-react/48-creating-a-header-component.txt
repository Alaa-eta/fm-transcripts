[00:00:00]
>> Brian: If you're writing React, there are some code smells that you definitely wanna pay attention to. One particular thing that you might notice that's a little bit smelly is we have this header that lives on several pages, right? So we have this header here and then if you go back to search you have a really similar header here, right?

[00:00:18]
It's not exactly the same cuz the inputs here similar enough though. So this is where your brain should be thinking, hey I have two concerns on this page. I have a header concern and then I have a details route concern, so what I should be doing here I should be abstracting this out so that I can have a reusable header component that I can just drop in to multiple pages.

[00:00:42]
So, let's go give that a shot.
>> Brian: So make a file called header.jsx. We're gonna import React from 'react'. import, well, we'll do that one in just a sec. And we're gonna say const Header =
>> Brian: And this is gonna be a header.
>> Brian: And with an h1, which is going to be the s video.

[00:01:24]
And then we're gonna export default header.
>> Speaker 2: Wouldn't you also want to put it in Flow?
>> Brian: Good call. Something I often forget to do. In fact, when I was writing this course I forgot to opt part of the course into Flow and I ended up having to rewrite a good I don't know 10% of the course because I just forgot to opt it into Flow.

[00:01:55]
So it is something that I often forget.
>> Brian: Okay, so go back to details real quick. And now we have this nice header component so we can import Header from ./Header. And then we can just replace this with a Header like that. Something I haven't mentioned yet, notice that I'm always calling my personal components with a capital letter.

[00:02:29]
Not only is that convention, it's actually required and enforced by React now. If you put it as div like this or x something, it's going to literally output an x something tag to the DOM. So it's assuming if it's lowercase, you want that literally to be the tag name and if it's uppercase that's a composite component or something that you've created, right?

[00:02:55]
The one exception is sales passing an anonymous component from the parent. It was this.props.passedInComponent like that, right? Obviously, you can't have dots in HTML tags. So it knows, okay it's actually gonna be an anonymous component. That's the one exception to that rule. Anyway, make that a Header. So now if we come back in here, refresh, our header is still there.

[00:03:28]
But what's nice about having this being a shared component is so, we wanted to make an improvement. Right now, if you click the header nothing happens. Typically when you click the logo, people expect you to go back to the home page. That's a generally accepted UI pattern. So, let's make that work.

[00:03:45]
So here, we're going to import a link from a react-router-dom
>> Brian: And then what we're going to do here is inside of the h1, we're going to make this a link, which is going to go to slash. I guess you don't even have to do that. It just needs to be slash like that and then close that.

[00:04:29]

>> Brian: What did I do here? I'm out of order. Link goes inside. There we go.
>> Brian: So now if I save that and refresh over here, now I click on the header and it'll take me back to landing.
>> Brian: So again that's one of the big advantages of extracting components out and reusing them is you can upgrade one thing and upgrade it across the site.

