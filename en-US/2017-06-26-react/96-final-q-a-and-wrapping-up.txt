[00:00:00]
>> Brian Holt: So B3 says 31. That is the last one. So 30 is using the react. 31 is using preact. You're welcome to go check those out. If you're feeling so inclined, go ahead and add inferno and substitute inferno in. That's what I was gonna try. I was gonna try real quick, if I could just switch out I haven't tried this recently, so it might or might not work.

[00:00:23]
Let's try just doing Preact. Preact doesn't have all of the API, so I don't know what React Router is using, I don't know what the React Redux stuff, all those bindings are using, so this might not work. Let's try yarn build.
>> Brian Holt: It will probably build, it might not be super happy about it though.

[00:00:53]

>> Brian Holt: Yeah, no see, we're stuck in loading hell. So, it doesn't work. So for now we have to use compat. The way you would eventually fix that, compat is a crutch, it's a good way to get to using preact and then what you wanna do is you want to go strip out the function calls that preact doesn't have.

[00:01:11]
And then eventually, you can go from the 8 kilobyte library to the 3 kilobyte library, which is even better.
>> Speaker 2: Greg's asking if you have used any JavaScript end-to-end testing libraries.
>> Brian Holt: Yes there is, I hope you can see the sadness in my eyes, is yes, I have.

[00:01:29]
[LAUGH] It's important, right? Something like Selenium, Selenium tests. You can kind of verify that things are working. It's important to have the happy path, right? Like login and sign up, and all these different processes that are key, that are just so flaky, right? Like how many times have I messed around with flaky cilennium tests, the answer is way too much.

[00:01:54]
So it's important to have, there's nothing like protractor. Protractor is really cool for angular. React doesn't have anything like that, unfortunately.
>> Speaker 2: Well, actually [INAUDIBLE] testing job is for fabrications course. It's not out yet, but it will be out on [INAUDIBLE] Masters slash courses soon, you can watch the replay.

[00:02:15]
But he uses the cypress.io testing and-
>> Brian Holt: I don't know anything about that.
>> Speaker 2: And it's pretty new, but he shows how awesome it is. And Cory loves it and stuff, and it's way better than Selenium. So definitely, when that course drops, if you're interested in end-to-end testing, there's a whole section on that.

[00:02:35]
And it should be out in probably two weeks.
>> Brian Holt: I don't think I've ever heard anyone say that they love end to end testing. So that is a strong endorsement and Kent is a smart guy.
>> Speaker 2: He also gets excited about weird things like Webpack and unit testing.

[00:02:51]

>> Brian Holt: I love Webpack, I get that one, but unit testing.
>> Speaker 2: All right, I always thought Webpack it's like the best you can do is just spit out a couple of files, right?
>> Brian Holt: It is but I have a great amount of fun just messing around, trying to get my bundle even smaller.

[00:03:04]
It's like a game to me.
>> Speaker 2: I can see that. Have you used roll up at all?
>> Brian Holt: Roll up is also a really cool packager. It really pushed webpack hard, and that's why webpack 2 is as cool as it is. Cuz Rollup came in and says screw you.

[00:03:22]
I'm gonna do treeshaking, right? That was kinda their thing. And actually what, so the way treeshaking works with webpack 2, is that it doesn't actually remove the code itself. It basically outputs the code in such a way that it's unreachable. And then uglify 2 right which is the new version of uglify.

[00:03:42]
I guess uglify 3 is about to come out. Uglify 2 is smart enough to say this code is never reachable and just pulls that stuff out. So that's what roll up was really great for, roll up is still really great and important. It's great for libraries right? So you wanna build your libraries like react.

[00:04:01]
React is built with roll up. And it outputs it in such a way that it's consumable by webpack. And it's much better that way, so I typically recommend webpack for your applications and use roll up for your libraries.
>> Brian Holt: That's a good question. Roll up is really cool.

[00:04:22]
It's a little bit more difficult to wrangle in my opinion, but I think that might be just cuz I have Stockholm Syndrome from wrangling so much with WebEx. Any other questions?
>> Speaker 2: How do you feel about SaaS versus dialog components, and how would you use it in this application?

[00:04:48]

>> Brian Holt: SaaS is too powerful, in my opinion. I don't need a Turing complete scripting language on top of my CSS, personal opinion. I think SaaS script is too much. To the points that I remember at Reddit we had this like little bit of SAS script that generated a bunch of classes that we used.

[00:05:04]
And it just ballooned our css files for no good reason. Now, you rightfully can point out, that's your fault. It is my fault, right? But it gives me tools for things that I don't need to do, right? So I appreciate some of the things, nesting can be nice and selectors can be nice.

[00:05:26]
But if I have like five layers deep and I am using mixins it is too much indirection for me for CSS. I like using post CSS and including things like auto prefixer and maybe a couple extra plugins for like nesting and like That's it. The least powerful styling rules that I can have and then I like to import it as CSS modules.

[00:05:49]
So that's my go to of how to deal with CSS. Styles components is really cool. As you can see, we messed up our navigating without JavaScript because it does have a runtime associated with it and that also kinda sucks, right? So I might be a little more on the Glamour train right now, but I know Macs and I know they're working on getting up to the same speed that Glamour is and so it's coming.

[00:06:14]
It's definitely coming so.
>> Speaker 2: And where in your configure or whatever you had SAS or post?
>> Brian Holt: There's a couple of places to do it, but it would be here inside of your module. You would do something like, I'm making this up so don't validate it, but it would be.

[00:06:33]
You would have a test that would say basically this right here. Then instead of being this, it would be like .css right, then you would say loader, like sass loader, I think is what it is, I'm assuming that's what it's called. And then you would have to have one as well on here called style loader.

[00:07:01]
I can't remember which one comes first. It's important which one it is, but let's just assume it comes second. So what this is going to do is it's going to be able to read your SASS and it's also going to be able to inject into your app. And then I can go into my action creators, or like spinner right?

[00:07:18]
And then I can say import spinner or it would just be import spinner.SASS. This equally applies to stylus or less, just so you know, or to just plain css. And I've come back to webpac config, and then I'd have to have a plug in in here for style extraction.

[00:07:43]
It's like webpack.
>> Speaker 2: Yeah, I think if you'd just Google sas webpack.
>> Brian Holt: Yeah, you have to have something that'll pull out the sass file and then it's gonna output it in a separate CSS so you can load it separately. But that's the general gist of how to do it.

[00:08:00]

>> Brian Holt: Actually I show you in version two, so if you're super interested it's in version two.
>> Speaker 2: Well thus concludes version three of React.
>> Brian Holt: Yeah, thank you so much for coming. I'm It's a real pleasure to talk to you all about one of the things I'm pretty passionate about.

[00:08:14]
I think React's a really great library and i just think this is a really good way to build large, scalable architecture. I hope you can at least take pieces and parts of this out and bring it into your workflow. It's okay if there's parts that you don't like.

[00:08:28]
Don't include those parts but it's a puzzle, right? You get to put together your own puzzle. So cool, yeah, thanks.
>> [APPLAUSE]
>> Speaker 2: The last thing I want to ask is do you have any recommendations for further reading further, people to follow, things to look at in the React community that you're particularly excited about?

[00:08:57]

>> Brian Holt: I get a lot of my information from twitter which is a great source of news. That's a joke, it can be daunting at times. So the React Core team are all super nice approachable people. So that's definitely one thing I would suggest is at Soprano I think that's Ben Alpert.

[00:09:18]
[COUGH] They're all super interesting. I think the graph QL relay story is really interesting to follow as well. That's a nice puzzle piece to fit with React, and Lee Byron and the team that runs that, they're all really great. I think Jason Miller and Dominic [INAUDIBLE], who do Preact and Inferno respectively Are both amazing, interesting people to follow.

[00:09:41]
The CSS and JS story is really heating up and I think we're gonna see a lot of innovation over the next year about that. So watch Glamour, watch Glamorous, watch styled components, Aphrodite is not going away any time soon, and CSS modules in general. I think that story's going to continue to evolve and get better and more interesting.

[00:10:03]
The web pack team is always pushing the envelope as well as the battle team. They are definitely two projects that need help. So if you can either contribute or give money to I think that's worthy to do, as well. Same with the pre-active projects.
>> Brian Holt: The React doc's really good.

[00:10:26]
I think that's a good place to look at well.
>> Brian Holt: Yeah, that's what I got off the top of my head.
>> Speaker 2: Perfect, all right, thank you. Well, until next time.
>> Brian Holt: Yeah, until version four.

