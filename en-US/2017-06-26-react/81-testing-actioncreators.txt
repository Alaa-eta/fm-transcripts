[00:00:00]
>> Brian: Let's go ahead and go create some test specs for action creators since those are easy to test, as well. ActionCreators.spec.js, okay. The other thing is you can go into reduce.spec. This should be a flow document as well. No reason that it can't be.
>> Brian: That shouldn't cause any errors, so good.

[00:00:29]

>> Brian: Let's go at flow into this document. This is the actionCreators.spec.js. Here we're going to import our two action creators, setSearchTern and addAPIData from ../actionCreators.
>> Brian: So first one we're gonna test here is test,
>> Brian: Set search term,
>> Brian: Which is gonna be a function.
>> Brian: So we're going to expect if we pass it a setSearchTerm,

[00:01:25]

>> Brian: Okay, and let's say we pass it the search, we've been using black this whole time, but here notes say I have New York, so we'll just say that, New York. So let's go take a look at the actionCreator itself. If we pass in New York here, what do we expect to get back from it?

[00:01:44]
We expect to get back a well formed object of type, setSearchTerm, and payload of whatever that string that we passed in is, right? Now remember that jest has that ability to do snapshots, right? The only thing that a snapshot is, is it is just a JSON structure, right?

[00:02:05]
So our snapshots that we're generating for React is just a JSON representation of what our components look like, right? Well if we go in here to our actionCreators, our actionCreators spec, actionCreator spec.js, setSearchTerm is just going to return a json structure, right? So we can actually just say toMatchSnapshot here and leverage that same ability.

[00:02:38]
So now, this JSON structure really shouldn't change over time, right? And if it does change, we wanna be well aware that that's what's happening. So to test actionCreators, it's really just snapshots. I mean, I could come in here and say, to equal,
>> Brian: Type SET_SEARCH_TERM and then payload.

[00:03:10]

>> Brian: New York. I mean, that's fine too, but why not leverage that snapshot ability? So that's what we're gonna do here. So again, we're gonna say yarn test. So the first time, it's gonna create our snapshot. We can go in here and actually look at our snapshot, actionCreators.spec.snap.

[00:03:34]
And we expect the first one to equal that particular object that we created with our actionCreator. What I like about this is say I decide that later, I want a different test case, or maybe, no this is even better. Let's actually go into actionCreators, and let's say we start using the error ability of these and I say error: null or something like that.

[00:03:58]
Now it's gonna fail, yarn test. This fails because here I started adding this error ability, but now it's really easy to update it. That's what I anticipate, so can just say yarn test:update, right? So that's why I like the snapshot tests, is that they're really easy to update as your app evolves.

[00:04:20]
Your tests evolve with you and you don't actually have to do a lot of extra coding to get there. So coming back here and say yarn test.
>> Brian: And it passes. As you might imagine, going back to our actionCreator spec, actionCreator spec. Testing addAPIData is gonna be just as easy, addAPIData,

[00:04:47]

>> Brian: Here we're just going to say, expect,
>> Brian: Put this on multiple lines. AddAPIData, and we're just gonna give it some sort of API data of like 0.8. Title, in fact, we can just really grab this from data.json. So we'll just grab Stranger Things here.
>> Brian: Go back to actionCreators.spec.

[00:05:18]
Just going to paste that right there, and we're gonna give it a rating because that's ultimately what's coming back from the API. So rating: I don't know 8.6, something like that. And then here we'll say, toMatchSnapShot and voila. And we're gonna say yarn test here.
>> Brian: And now we have an extra snapshot.

[00:05:50]
So we can detect ever if something happens with an API data that drifts in one direction or the other. So if you look at the snap just to make sure that everything looks like what you want it to, payload. It's gonna be this object here and type is going to be ADD_API_DATA.

[00:06:07]
That's exactly what we expect, so cool. Everything is good, it all works.
>> Brian: So testing actionCreators is really easy. It's a snap? No okay [LAUGH] That was horrible okay. Any questions about that? So this is why, again, one of the reasons I really, really like redux is it makes testing these kind of micro pieces of changing state pretty iron clad now.

[00:06:44]
I'm guaranteed now that setSearchTerm is going to create these objects the way I anticipated and this is well tested and I trust it now.

