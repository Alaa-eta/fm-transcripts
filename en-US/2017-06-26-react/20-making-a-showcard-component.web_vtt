WEBVTT

1
00:00:00.140 --> 00:00:02.650
&gt;&gt; Brian Holt: We're gonna make this
a little more complicated display

2
00:00:02.650 --> 00:00:04.090
a little bit more.

3
00:00:04.090 --> 00:00:07.020
So, what we're gonna do now,

4
00:00:07.020 --> 00:00:12.440
is we're gonna make a div
className="show-card'.

5
00:00:16.696 --> 00:00:18.645
&gt;&gt; Speaker 2: I have
a follow up to his question.

6
00:00:18.645 --> 00:00:20.351
&gt;&gt; Brian Holt: Sure.

7
00:00:20.351 --> 00:00:25.087
&gt;&gt; Speaker 2: So remember early on when
you showed us the style with the two

8
00:00:25.087 --> 00:00:26.990
curly braces, right?

9
00:00:26.990 --> 00:00:30.560
And then you said well a lot of
people get uncomfortable with that so

10
00:00:30.560 --> 00:00:35.050
let's pull that out into its own variable
and then substitute the style variable.

11
00:00:36.260 --> 00:00:42.320
Would that be an option here, or
not because we are returning the h?

12
00:00:42.320 --> 00:00:46.040
We're projecting with the math
function to the H3, so

13
00:00:46.040 --> 00:00:51.630
does that have to happen
inside our parentheses?

14
00:00:51.630 --> 00:00:55.250
&gt;&gt; Brian Holt: So, you could totally do,
let's just say I do it up here.

15
00:00:55.250 --> 00:01:03.984
You would do it inside
the function body but

16
00:01:03.984 --> 00:01:09.321
you could totally do const

17
00:01:09.321 --> 00:01:14.415
preload shows.map show

18
00:01:14.415 --> 00:01:23.303
&lt;hs&gt;(show.title) shows
&gt;&gt; Brian Holt: Right,

19
00:01:23.303 --> 00:01:25.840
so now shows is an array of components.

20
00:01:25.840 --> 00:01:29.760
And I could totally
right here to say shows.

21
00:01:30.820 --> 00:01:31.462
It work just fine.

22
00:01:31.462 --> 00:01:32.011
&gt;&gt; Speaker 2: Okay.

23
00:01:32.011 --> 00:01:33.750
&gt;&gt; Brian Holt: Does that
answer your question?

24
00:01:33.750 --> 00:01:37.490
&gt;&gt; Speaker 2: Yeah, I guess I'm making
the assumption that in JSX files

25
00:01:39.180 --> 00:01:40.286
only within component.

26
00:01:40.286 --> 00:01:41.983
&gt;&gt; Brian Holt: Like within the returns?

27
00:01:41.983 --> 00:01:45.187
&gt;&gt; Speaker 2: Last definitions
the html syntax makes sense, but

28
00:01:45.187 --> 00:01:47.830
it looks like anywhere in the file.

29
00:01:47.830 --> 00:01:48.379
&gt;&gt; Brian Holt: Totally, yup.

30
00:01:48.379 --> 00:01:49.932
&gt;&gt; Speaker 2: Awesome.
&gt;&gt; Brian Holt: And we'll do this later,

31
00:01:49.932 --> 00:01:51.930
once we're doing conditionals, right?

32
00:01:51.930 --> 00:01:56.380
You can technically put conditionals
inside the return blocks of jsx.

33
00:01:56.380 --> 00:01:58.420
It gets real hairy real quick.

34
00:01:58.420 --> 00:02:00.490
So I like to pull them above.

35
00:02:00.490 --> 00:02:03.610
Store them in variables and then show them
or hide them, depending on whether or

36
00:02:03.610 --> 00:02:06.240
not they're in the variable or not.

37
00:02:06.240 --> 00:02:07.060
So, yeah, that's astute.

38
00:02:07.060 --> 00:02:09.070
That's a good way of doing things for
sure.

39
00:02:10.270 --> 00:02:12.550
What I just showed you here is
a horrible way of doing it, right?

40
00:02:12.550 --> 00:02:15.250
Because these shows have
been predetermined, so

41
00:02:15.250 --> 00:02:19.950
if anything inside of preload.shows
changed, it would not change.

42
00:02:19.950 --> 00:02:22.876
But,
&gt;&gt; Brian Holt: Yeah,

43
00:02:22.876 --> 00:02:24.280
we won't worry about that for now.

44
00:02:24.280 --> 00:02:24.936
Okay, so.

45
00:02:31.435 --> 00:02:35.076
&gt;&gt; Brian Holt: Okay, so,
we're just gonna put some,

46
00:02:39.871 --> 00:02:41.619
&gt;&gt; Brian Holt: Some components in here.

47
00:02:44.797 --> 00:02:48.255
&gt;&gt; Brian Holt: I'm gonna put an ALT tag
on our image cuz we're good citizens of

48
00:02:48.255 --> 00:02:51.070
the internet, and
we make our things accessible.

49
00:02:53.380 --> 00:02:58.184
(Show.title) show poster.

50
00:02:58.184 --> 00:03:03.330
So take note of that as a backtick,
which is the same key as the tilde.

51
00:03:03.330 --> 00:03:05.090
This is an ES6 template literal.

52
00:03:06.520 --> 00:03:11.220
You are welcome,
I have again linked to the tuality

53
00:03:11.220 --> 00:03:13.100
post on template literals if
you're not familiar with them.

54
00:03:13.100 --> 00:03:17.442
But suffice to say, rather than doing,

55
00:03:17.442 --> 00:03:24.094
like if this was a string and
I had to do concatenation, oops.

56
00:03:29.328 --> 00:03:31.160
&gt;&gt; Brian Holt: That's what it would like,
right?

57
00:03:33.610 --> 00:03:36.070
Like we've all seen that syntax before so

58
00:03:36.070 --> 00:03:38.959
with temporal literals
you can just do this.

59
00:03:40.230 --> 00:03:44.050
And then anything between curly braces
with a dollar sign in front of it which is

60
00:03:44.050 --> 00:03:47.724
like the same kind of
bashy way of doing it.

61
00:03:47.724 --> 00:03:48.940
Gets outputted as an expression and

62
00:03:48.940 --> 00:03:52.730
then anything not inside of
it is literally the string.

63
00:03:52.730 --> 00:03:53.510
Does that make sense?

64
00:03:55.020 --> 00:03:58.500
So for we have here House of Cards.

65
00:03:58.500 --> 00:04:00.504
This will be House of Cards Show Poster.

66
00:04:03.595 --> 00:04:04.128
&gt;&gt; Brian Holt: Okay, and

67
00:04:04.128 --> 00:04:08.410
then we're gonna do a source for the image
again using our template literal strings.

68
00:04:08.410 --> 00:04:10.910
I'm gonna do

69
00:04:10.910 --> 00:04:20.010
/public/IMG/posters/$show.poster.

70
00:04:21.810 --> 00:04:26.130
I've included a bunch of posters in your
repo, which is where that's coming from.

71
00:04:27.680 --> 00:04:29.136
Okay, we're gonna do a div.

72
00:04:32.343 --> 00:04:33.890
&gt;&gt; Brian Holt: Then we're gonna do an h3.

73
00:04:36.902 --> 00:04:38.938
&gt;&gt; Brian Holt: And show.title.

74
00:04:38.938 --> 00:04:43.288
We're gonna do an h4,

75
00:04:43.288 --> 00:04:51.203
with show.year,
&gt;&gt; Brian Holt: Now for display purposes,

76
00:04:51.203 --> 00:04:56.031
I want it to be parentheses around, so
it will say like, parenthese 1996 to

77
00:04:56.031 --> 00:05:01.840
2005 end parenthese, so I want parenthese
literally to be output to the dom.

78
00:05:01.840 --> 00:05:05.449
So I'm going to surround
teis with parentheses.

79
00:05:05.449 --> 00:05:10.247
But I just want you to know that it's
literally parenthesis right, okay.

80
00:05:12.542 --> 00:05:16.663
&gt;&gt; Brian Holt: And then down here
we have a p which is going to be

81
00:05:16.663 --> 00:05:19.003
the show.description.

82
00:05:26.887 --> 00:05:29.980
&gt;&gt; Brian Holt: Okay, so
now we should be able to save that.

83
00:05:31.570 --> 00:05:35.180
If we come back over here you
should be seeing more stuff.

84
00:05:36.990 --> 00:05:38.240
Which with broken style.

85
00:05:40.190 --> 00:05:42.740
You should be seeing broken style, right?

86
00:05:42.740 --> 00:05:45.530
The reason why is we're gonna go do
the styles components in just a second,

87
00:05:45.530 --> 00:05:46.566
probably after the break.

88
00:05:51.919 --> 00:05:54.135
&gt;&gt; Brian Holt: But yeah, you should
be seeing something like this, right?

89
00:06:00.944 --> 00:06:03.590
&gt;&gt; Brian Holt: Okay, any questions, yes?

90
00:06:03.590 --> 00:06:05.730
&gt;&gt; Speaker 3: I'm not sure when the ideal
time to talk about this would be.

91
00:06:05.730 --> 00:06:10.700
But for, at least I'm using Atom for
doing autocomplete inside of JSX,

92
00:06:10.700 --> 00:06:13.200
HTML completion inside of JSX.

93
00:06:13.200 --> 00:06:14.950
I noticed there's some happening for you.

94
00:06:14.950 --> 00:06:17.830
Do you have some kind of plugin installed?

95
00:06:17.830 --> 00:06:19.520
&gt;&gt; Brian Holt: That does auto completion?

96
00:06:19.520 --> 00:06:22.900
&gt;&gt; Speaker 3: Yeah, cuz right now I'm
having to close everything by hand.

97
00:06:22.900 --> 00:06:25.570
&gt;&gt; Speaker 3: Which is
minorly inconvenient.

98
00:06:25.570 --> 00:06:29.875
&gt;&gt; Brian Holt: So when I do that and
it just closes the tag?

99
00:06:29.875 --> 00:06:30.473
&gt;&gt; Speaker 3: Exactly.
&gt;&gt; Brian Holt: That

100
00:06:30.473 --> 00:06:34.977
is a sublime thing which
is Alt+Cmd+Period.

101
00:06:34.977 --> 00:06:36.333
&gt;&gt; Speaker 3: You're just
doing that every time.

102
00:06:36.333 --> 00:06:37.039
&gt;&gt; Brian Holt: Yeah.

103
00:06:37.039 --> 00:06:38.279
&gt;&gt; Speaker 3: All right, cool.

104
00:06:38.279 --> 00:06:40.964
&gt;&gt; Brian Holt: There's probably a better
way to do it, it's just that I'm so

105
00:06:40.964 --> 00:06:41.730
used to doing it.

106
00:06:43.320 --> 00:06:45.110
You can also use Emmet, right?

107
00:06:45.110 --> 00:06:46.790
Which is what I was talking about earlier.

108
00:06:46.790 --> 00:06:48.220
I don't have it enabled in mine so

109
00:06:48.220 --> 00:06:51.143
I'm not tempted to use it because I
hate explaining how to set it up.

110
00:06:53.489 --> 00:06:55.720
&gt;&gt; Brian Holt: But
that's also possible to use, as well.

111
00:06:55.720 --> 00:07:00.276
And the idea behind Emmet is you
can do like, this is an HTML.

112
00:07:00.276 --> 00:07:04.527
But I can do like, h1 important

113
00:07:04.527 --> 00:07:09.723
thing.coolthing and I just hit tab and

114
00:07:09.723 --> 00:07:15.270
it just completes into a full element.

115
00:07:15.270 --> 00:07:19.190
You can also get this working with
JSX it just takes some finagling and

116
00:07:19.190 --> 00:07:22.790
it works very different for
each thing so I don't talk about it.

117
00:07:24.620 --> 00:07:26.290
&gt;&gt; Speaker 3: Might ask you afterwards.

118
00:07:26.290 --> 00:07:27.180
&gt;&gt; Brian Holt: What's that?
&gt;&gt; Speaker 3: I might ask you

119
00:07:27.180 --> 00:07:27.780
later about that.

120
00:07:27.780 --> 00:07:31.874
&gt;&gt; Brian Holt: Yeah, the problem with
it is it wants to complete to class and

121
00:07:31.874 --> 00:07:33.482
not class name.

122
00:07:33.482 --> 00:07:36.100
&gt;&gt; Brian Holt: And
you also can be fixed as well.

123
00:07:36.100 --> 00:07:41.060
But there's a great stack overflow
question, asked by yours truly,

124
00:07:41.060 --> 00:07:43.170
on how to fix it, and someone answered me.

125
00:07:43.170 --> 00:07:44.950
So that's how I fixed it.

126
00:07:46.680 --> 00:07:51.918
Okay, so back to your beans
question which is we're in search.

127
00:07:54.942 --> 00:07:57.110
&gt;&gt; Brian Holt: We kinda have two
things going on here, right?

128
00:07:57.110 --> 00:08:00.920
We have the search component,
which is like the search page, right?

129
00:08:00.920 --> 00:08:03.240
It's like the layout for the search page.

130
00:08:03.240 --> 00:08:07.250
And then we have these like
inner show cards, right?

131
00:08:07.250 --> 00:08:09.730
So there is kinda like two
competing ideas here on the page.

132
00:08:09.730 --> 00:08:13.123
And so, this is where you kind of
have to start wondering to yourself,

133
00:08:13.123 --> 00:08:16.930
this feels like something I should split
out into another component, right?

134
00:08:16.930 --> 00:08:22.026
Cuz I two ideas going on, so
that's exactly what we're gonna do,

135
00:08:22.026 --> 00:08:26.130
gonna create a new component
call it showcard.jsx.

136
00:08:26.130 --> 00:08:32.809
We're going to import React from React.

137
00:08:35.559 --> 00:08:40.716
&gt;&gt; Brian Holt: And
you're gonna say, const ShowCard =

138
00:08:40.716 --> 00:08:47.970
props as a parameter We're
gonna go here to search.jsx.

139
00:08:47.970 --> 00:08:53.600
We're going to cut that out, come back
here to show card, paste that in.

140
00:08:55.650 --> 00:08:59.130
Again, we're gonna let Prettier
take care of all the details.

141
00:08:59.130 --> 00:09:02.840
And I'm gonna say export
default show card.

142
00:09:03.910 --> 00:09:06.370
And then save.

143
00:09:06.370 --> 00:09:09.550
And everything will
magically rework itself.

144
00:09:12.180 --> 00:09:15.480
You are gonna have all sorts of lint
errors cuz we're not doing prop types yet.

145
00:09:15.480 --> 00:09:19.529
And the other thing to
show it's not defined yet.

146
00:09:21.560 --> 00:09:28.012
So props is going to be whatever the
parent passes down into ShowCard, right.

147
00:09:28.012 --> 00:09:32.767
So in a moment we are going to make
the parent pass down props.ShowCard but

148
00:09:32.767 --> 00:09:36.066
in the meantime anywhere
that you reference show,

149
00:09:36.066 --> 00:09:40.149
just go in front of it,
I'm gonna do it with multiple cursors.

150
00:09:43.004 --> 00:09:46.487
&gt;&gt; Brian Holt: And say props.whatever.

151
00:09:51.815 --> 00:09:55.910
&gt;&gt; Brian Holt: So now all these
are saying, where's my prop type?

152
00:09:57.580 --> 00:10:02.210
Which I think we'll talk about soon here.

153
00:10:02.210 --> 00:10:07.410
Yep, very soon we'll
be talking about that.

154
00:10:07.410 --> 00:10:10.520
Okay so for now ignore the lint errors.

155
00:10:11.590 --> 00:10:12.530
Go back to search.

156
00:10:15.030 --> 00:10:18.269
After this I'll push a branch,
during the break.

157
00:10:19.920 --> 00:10:27.559
Okay, now inside of search we're going
to import showCard from ./ShowCard.

158
00:10:30.385 --> 00:10:33.670
&gt;&gt; Brian Holt: And
then here where we were,

159
00:10:38.981 --> 00:10:40.791
&gt;&gt; Brian Holt: What we're going to do is

160
00:10:40.791 --> 00:10:44.941
we're going to return show
card where show={show}.

161
00:11:00.493 --> 00:11:01.607
&gt;&gt; Brian Holt: Okay there we go.

162
00:11:07.628 --> 00:11:09.850
&gt;&gt; Brian Holt: This got a lot
cleaner to look at right?

163
00:11:11.650 --> 00:11:18.030
And if you go look everything should work,
or look the same as it did before.

164
00:11:19.540 --> 00:11:25.056
But now we have two components,
we have a show card, and we have a search

165
00:11:25.056 --> 00:11:29.016
route page.

166
00:11:29.016 --> 00:11:33.230
So something that is super advantageous
about this approach as well

167
00:11:33.230 --> 00:11:36.350
is that imagine later we
are building another page that

168
00:11:36.350 --> 00:11:38.210
we want to display like
one show card at a time.

169
00:11:39.300 --> 00:11:42.360
Well now we have this reusable component
as long as we feed it in a show.

170
00:11:42.360 --> 00:11:44.150
It doesn't care where it lives.

171
00:11:44.150 --> 00:11:48.490
It can display out that
information in a useful fashion.

172
00:11:48.490 --> 00:11:49.985
So now we get there reusable components,

173
00:11:49.985 --> 00:11:51.600
that we can put multiple
places on our site.

174
00:11:54.040 --> 00:11:59.517
So this kind of brings me to talking
about how the render method works and

175
00:11:59.517 --> 00:12:05.100
kind of the way you need to be thinking
about this render method, right?

176
00:12:06.560 --> 00:12:08.980
So here, this method here,

177
00:12:08.980 --> 00:12:13.720
given a set of props, this is how
this component's gonna look, right?

178
00:12:13.720 --> 00:12:15.620
It's deterministic, it's pure.

179
00:12:15.620 --> 00:12:18.060
It's, indepident, right?

180
00:12:18.060 --> 00:12:23.130
If I call this function a billion times
with the same parameters, the same show,

181
00:12:23.130 --> 00:12:25.960
on the billion and first time I run
this call, what's it gonna look like?

182
00:12:27.380 --> 00:12:29.710
Exactly the same, nothing changes.

183
00:12:29.710 --> 00:12:33.970
So this is very, very, very important
about React components is that

184
00:12:33.970 --> 00:12:37.320
if you call them a bunch of different
times with the same parameters,

185
00:12:37.320 --> 00:12:39.670
it's always going to look the same.

186
00:12:39.670 --> 00:12:43.354
So for example, it's a terrible idea for
me to come in here and say,

187
00:12:48.490 --> 00:12:50.798
&gt;&gt; Brian Holt: Math.random here, right?

188
00:12:53.274 --> 00:12:55.886
&gt;&gt; Brian Holt: That's gonna
change every single time.

189
00:12:55.886 --> 00:13:02.167
So now if I refresh
&gt;&gt; Brian Holt: Now,

190
00:13:02.167 --> 00:13:06.947
what's bad about this,
&gt;&gt; Brian Holt: Or maybe even worse.

191
00:13:09.453 --> 00:13:11.400
&gt;&gt; Brian Holt: Yeah, no,
we'll talk about that later.

192
00:13:11.400 --> 00:13:15.159
Anyway, in any case,
this is now a nondeterministic, right?

193
00:13:16.340 --> 00:13:19.820
So if I call it and I, I can,
and I force it to rerender again,

194
00:13:23.410 --> 00:13:25.500
which I'll show you how to do later,
how to force it to rerender.

195
00:13:27.230 --> 00:13:29.496
We have no idea what the component's
gonna end up looking like.

196
00:13:29.496 --> 00:13:32.640
This became non-testable,
this became basically

197
00:13:32.640 --> 00:13:35.260
not a useful component anymore
because it's not deterministic.

198
00:13:36.900 --> 00:13:41.810
So given the same properties the component
should always look the same.

199
00:13:41.810 --> 00:13:45.900
So like an example that someone might ask
me is well what happens if I'm dealing

200
00:13:45.900 --> 00:13:48.260
with dates right,
dates are always changing right.

201
00:13:49.320 --> 00:13:52.540
Well what you do you pass in
a date to that component and

202
00:13:52.540 --> 00:13:55.700
given that date it's always
going to look the same right.

203
00:13:55.700 --> 00:13:58.630
So your not reading the date from
the interior of the render method

204
00:13:58.630 --> 00:14:00.448
you should be reading it from the props.

205
00:14:06.006 --> 00:14:08.006
&gt;&gt; Brian Holt: Cool, any questions?

206
00:14:09.822 --> 00:14:13.812
&gt;&gt; Brian Holt: It's also super important
that these components are going to get run

207
00:14:13.812 --> 00:14:14.720
a lot, right?

208
00:14:14.720 --> 00:14:19.927
Every time React senses a difference like
if there's an event in your computer or

209
00:14:19.927 --> 00:14:24.905
sorry if there's an event in the DOM if
the state changes if the prop changes,

210
00:14:24.905 --> 00:14:28.368
React runs a rerender to
figure out what's changed.

211
00:14:28.368 --> 00:14:30.840
And then it only updates the things
that have changed in the DOM.

212
00:14:30.840 --> 00:14:31.874
That's called the virtual DOM.

213
00:14:31.874 --> 00:14:34.710
Notice we're already hours
into this course and

214
00:14:34.710 --> 00:14:36.210
I haven't mentioned the virtual DOM.

215
00:14:36.210 --> 00:14:39.540
It doesn't matter, right,
it's a implementation detail.

216
00:14:39.540 --> 00:14:42.259
It's not important to what
actually what React is.

217
00:14:43.510 --> 00:14:45.940
But anyway what I wanna say is that,

218
00:14:45.940 --> 00:14:48.840
your render method is going
to be run a lot, right.

219
00:14:48.840 --> 00:14:52.100
So make sure that code
path is very performant.

220
00:14:52.100 --> 00:14:53.640
Everything else can be slower.

221
00:14:53.640 --> 00:14:57.780
But that render path needs to be
fast cuz it gets called a lot.

222
00:15:00.040 --> 00:15:01.317
Especially on large apps.

