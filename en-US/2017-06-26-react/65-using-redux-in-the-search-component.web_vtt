WEBVTT

1
00:00:00.300 --> 00:00:04.870
&gt;&gt; Brian Holt: So let's go to search, so

2
00:00:04.870 --> 00:00:08.950
let's go to search.jsx,
come to search.jsx,

3
00:00:08.950 --> 00:00:13.230
we import connect up here,
show card in header.

4
00:00:13.230 --> 00:00:15.868
Cool, that all looks really good.

5
00:00:15.868 --> 00:00:20.392
What's going to be really cool about
what we're going to do is we're

6
00:00:20.392 --> 00:00:23.201
going to eliminate state from search, and

7
00:00:23.201 --> 00:00:27.038
we're going to eliminate
handle's search term change.

8
00:00:33.810 --> 00:00:35.603
&gt;&gt; Brian Holt: And
we're going to eliminate props here.

9
00:00:39.884 --> 00:00:41.454
&gt;&gt; Brian Holt: So
all this stuff is going away,

10
00:00:41.454 --> 00:00:45.370
which means search has now become
a stateless functional component.

11
00:00:45.370 --> 00:00:48.770
So now we can migrate this back into
something that's a little bit more simple.

12
00:00:48.770 --> 00:00:54.353
So we're going to say, const, search,

13
00:00:54.353 --> 00:01:00.740
equals this and
we're going to get rid of that.

14
00:01:09.342 --> 00:01:14.075
&gt;&gt; Brian Holt: Okay, so now this is
back to being a not a class anymore, but

15
00:01:14.075 --> 00:01:15.600
being a function.

16
00:01:16.700 --> 00:01:21.170
It's going to take in props
which is going to be.

17
00:01:21.170 --> 00:01:24.062
We're going to have to type those props,

18
00:01:24.062 --> 00:01:28.688
it's going to take in search term
which is going to be a string, and

19
00:01:28.688 --> 00:01:33.836
it's going to take in shows, which is
going to be an array of show, okay?

20
00:01:33.836 --> 00:01:39.130
Then here is where we say search term

21
00:01:39.130 --> 00:01:44.071
equals that we're going to say is

22
00:01:44.071 --> 00:01:48.690
equal to Props.searchTerm.

23
00:01:48.690 --> 00:01:53.839
And handleSearchTermChange is going to be
equal to props.handleSearchTermChange,

24
00:01:53.839 --> 00:01:56.140
which we'll write here momentarily.

25
00:02:01.088 --> 00:02:03.738
&gt;&gt; Brian Holt: I guess that's
one worth putting on there is

26
00:02:03.738 --> 00:02:06.900
handleSearchTermChange is
going to be a function.

27
00:02:10.230 --> 00:02:14.640
Instead of having props.shows,
it's going to just be just that.

28
00:02:14.640 --> 00:02:20.064
No this,
this is going to be props.searchterm.

29
00:02:23.800 --> 00:02:26.910
&gt;&gt; Brian Holt: That's getting on just
a little bit more succinct each time.

30
00:02:34.114 --> 00:02:35.620
&gt;&gt; Brian Holt: Not even that, I forgot.

31
00:02:35.620 --> 00:02:38.489
Okay, so
actually drop this handleSearchTermChange.

32
00:02:40.250 --> 00:02:44.760
Because now we can do instead of making
search have to worry about handle search

33
00:02:44.760 --> 00:02:48.990
term change and all this kind of stuff,
it can just make header write directly to

34
00:02:48.990 --> 00:02:51.880
redux and it doesn't have to be
the intermediary anymore, right?

35
00:02:55.980 --> 00:02:59.330
So actually get rid of all of that.

36
00:03:00.500 --> 00:03:02.195
And this is just going
to be showSearch now.

37
00:03:02.195 --> 00:03:08.768
Yup, that's exactly right.

38
00:03:13.292 --> 00:03:17.387
&gt;&gt; Brian Holt: And, now we're going
to filter on props.searchTerm,

39
00:03:17.387 --> 00:03:18.760
why is that upset?

40
00:03:24.297 --> 00:03:25.120
&gt;&gt; Brian Holt: That's right.

41
00:03:30.460 --> 00:03:34.580
So we're going to run up against
into a flow edge case right now.

42
00:03:34.580 --> 00:03:39.930
It's pretty good about following through,
but because we're inside a block which

43
00:03:39.930 --> 00:03:45.660
is inside of a block, here it actually
can't follow it further enough for

44
00:03:45.660 --> 00:03:50.280
ES Lint to say, hey,
you're never using this prop type.

45
00:03:50.280 --> 00:03:53.800
We actually are,
it's just ES Lint can't go that deep.

46
00:03:53.800 --> 00:03:55.580
It's not smart enough, right?

47
00:03:55.580 --> 00:03:58.400
It's not actually evaluating your code,
it's doing static analysis.

48
00:03:59.736 --> 00:04:02.648
&gt;&gt; Brian Holt: So what we're going to do
here is we're just going to say I know

49
00:04:02.648 --> 00:04:05.404
that this is what you think,
but you're actually wrong.

50
00:04:05.404 --> 00:04:09.450
Eslint-disable-line

51
00:04:09.450 --> 00:04:15.616
react/no-unused-prop-types.

52
00:04:19.446 --> 00:04:23.160
&gt;&gt; Brian Holt: And this is just us telling
eslint, no, I know better than you.

53
00:04:28.058 --> 00:04:32.042
&gt;&gt; Brian Holt: Okay, now we need to
make a maps state to props down here, so

54
00:04:32.042 --> 00:04:34.930
we're going to say const mapStateToProps

55
00:04:40.819 --> 00:04:42.360
&gt;&gt; Brian Holt: equals state, and

56
00:04:42.360 --> 00:04:48.149
we're going to return an object of
searchTerm is state.searchTerm.

57
00:04:50.687 --> 00:04:54.831
&gt;&gt; Brian Holt: And then we're going
to call connect with mapStateToProps.

58
00:05:08.350 --> 00:05:10.530
&gt;&gt; Brian Holt: And we don't need
this component up here anymore.

59
00:05:14.962 --> 00:05:15.662
&gt;&gt; Brian Holt: Okay, so

60
00:05:15.662 --> 00:05:21.500
now we've successfully disentangled
that component state from search.

61
00:05:21.500 --> 00:05:24.600
It's now totally reading from redux.

62
00:05:24.600 --> 00:05:26.590
And it no longer has to care
about writing to redux,

63
00:05:26.590 --> 00:05:28.290
because that's going to
become header's problem.

