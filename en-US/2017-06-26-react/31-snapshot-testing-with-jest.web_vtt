WEBVTT

1
00:00:00.140 --> 00:00:01.910
&gt;&gt; Brian Holt: We're gonna
be doing testing today.

2
00:00:01.910 --> 00:00:04.770
Something I wanted to remind you of
is that you can pull down the branch

3
00:00:04.770 --> 00:00:05.310
at any time.

4
00:00:06.410 --> 00:00:08.789
Right now we're on v3-10.

5
00:00:08.789 --> 00:00:13.594
So just to momentarily again show you how
to get the latest branch if you need to do

6
00:00:13.594 --> 00:00:14.540
that with git.

7
00:00:15.780 --> 00:00:18.080
So make sure that you
have cloned the repo.

8
00:00:18.080 --> 00:00:21.641
So in this case, I have,
you can see with git remote -vv.

9
00:00:21.641 --> 00:00:26.571
You can see that I'm pulling from
btholt/complete-intro-to-react,

10
00:00:26.571 --> 00:00:30.652
you can do get fetch origin, and
then the name of the branch, so

11
00:00:30.652 --> 00:00:35.270
in this case would be f3-10,
which is what we have.

12
00:00:35.270 --> 00:00:36.530
Turn that,
it's gonna tell me I already have it.

13
00:00:38.665 --> 00:00:44.113
&gt;&gt; Brian Holt: Okay, and
then you say git checkout v3-10.

14
00:00:44.113 --> 00:00:47.822
And that will actually switch you into
the branch which I'm already on v3-10, so

15
00:00:47.822 --> 00:00:49.589
its like you're done, don't do that.

16
00:00:49.589 --> 00:00:51.920
But you will actually switch to
the end of the branch, I promise.

17
00:00:54.072 --> 00:00:55.237
&gt;&gt; Brian Holt: So, cool.

18
00:00:55.237 --> 00:00:58.440
Hopefully we're all now on the same page.

19
00:00:58.440 --> 00:01:03.020
So what we're gonna be doing now
is doing some testing with React.

20
00:01:04.520 --> 00:01:07.310
React is actually not too bad to test.

21
00:01:07.310 --> 00:01:10.440
Providing you're not using a bunch of
crazy libraries cuz crazy libraries get

22
00:01:10.440 --> 00:01:11.420
pretty tough to test.

23
00:01:12.620 --> 00:01:15.500
Right now we're not doing anything
to nuts so it's not to bad.

24
00:01:16.950 --> 00:01:20.690
We're gonna be doing Jest testing today.

25
00:01:20.690 --> 00:01:25.551
I've personally really enjoyed Jest
it's my testing framework of choice.

26
00:01:25.551 --> 00:01:29.055
But there are some very perfectly valid
reasons to chose mocha, or java,, or

27
00:01:29.055 --> 00:01:30.700
any of those other ones.

28
00:01:30.700 --> 00:01:36.940
So feel free to switch
to your favorite one.

29
00:01:36.940 --> 00:01:40.890
Just in particular is well suited to test
react because it has something called

30
00:01:40.890 --> 00:01:44.120
Snapshot testing, which we're gonna
take a bunch of advantage of today.

31
00:01:45.390 --> 00:01:49.705
So something I did wanna message, or
tell you is that if you wanna learn about

32
00:01:49.705 --> 00:01:54.372
specifically MoCA testing with React,
you can watch version one of this course.

33
00:01:54.372 --> 00:01:56.213
You don't have to watch the whole course,

34
00:01:56.213 --> 00:01:58.220
you can watch just
the section on the testing.

35
00:01:58.220 --> 00:02:01.308
And that's available to you as well.

36
00:02:01.308 --> 00:02:07.034
Okay, so what I want you to do
now is in your js directory

37
00:02:07.034 --> 00:02:14.518
inside of it I want you to create
a new directory called __tests__.

38
00:02:16.086 --> 00:02:19.483
&gt;&gt; Brian Holt: This is just a convention
for creating tests, specific to I think

39
00:02:19.483 --> 00:02:23.888
Airbnb actually enforces it this way, that
you have to kinda structure it this way.

40
00:02:28.838 --> 00:02:31.140
&gt;&gt; Brian Holt: So, whatever,
I just roll with it.

41
00:02:31.140 --> 00:02:37.658
I've seen lots of people do it this way,
so we'll do it too, okay?

42
00:02:37.658 --> 00:02:41.027
And now, inside of this test directory,

43
00:02:41.027 --> 00:02:46.260
I want you to create a new file,
and call it Search.spec.jsx.

44
00:02:46.260 --> 00:02:49.782
You can call it search.spec or
search.test,

45
00:02:49.782 --> 00:02:52.429
I don't care which one you call it.

46
00:02:52.429 --> 00:02:55.140
Both of those will automatically
get picked up by Jest.

47
00:02:56.290 --> 00:02:57.220
I just do spec,

48
00:02:57.220 --> 00:02:59.948
and I think the reason why I do that
is cuz I've always done it that way.

49
00:02:59.948 --> 00:03:06.621
But if .test sounds better to
you then by all means go for it.

50
00:03:06.621 --> 00:03:11.878
So search.spec.jsx and
what we're gonna do inside

51
00:03:11.878 --> 00:03:16.913
of here is we're going to
import React from React.

52
00:03:16.913 --> 00:03:19.120
I guess it kind of bears mentioning that.

53
00:03:23.261 --> 00:03:25.440
&gt;&gt; Brian Holt: There's lots
of testing strategies.

54
00:03:25.440 --> 00:03:29.320
I'm just gonna show you, probably,
the most simple testing strategy.

55
00:03:29.320 --> 00:03:32.108
Like how to structure your test,
what to call your test.

56
00:03:32.108 --> 00:03:35.179
What I like to do is if I have
a search component I like to have

57
00:03:35.179 --> 00:03:37.902
another file called search.spec.jsx,
right?

58
00:03:37.902 --> 00:03:39.550
So there's a one to one mapping.

59
00:03:39.550 --> 00:03:42.003
Right so again,
optimizing for deletability.

60
00:03:42.003 --> 00:03:47.105
If I delete search.jsx, I know I can
delete its tests along with it, right?

61
00:03:47.105 --> 00:03:54.073
It's an easy way of being able
to tell whatâ€™s tied to what.

62
00:03:54.073 --> 00:04:01.863
Okay, import renderer from
react-test-renderer and

63
00:04:01.863 --> 00:04:07.712
import Search from ../Search, okay?

64
00:04:07.712 --> 00:04:12.567
So react-test-renderer it's

65
00:04:12.567 --> 00:04:18.410
gonna allow us to do some testing.

66
00:04:18.410 --> 00:04:24.161
We're gonna be able to render out
the search component and test it, right?

67
00:04:24.161 --> 00:04:26.150
Without actually having a DOM underneath.

68
00:04:26.150 --> 00:04:28.884
Which is gonna be pretty cool.

69
00:04:28.884 --> 00:04:32.353
Okay, so one thing to know about
jest is underneath the hood,

70
00:04:32.353 --> 00:04:34.499
it's actually just Jasmin, right?

71
00:04:34.499 --> 00:04:38.670
So if you've ever done Jasmin testing
before, it's the same syntax.

72
00:04:39.750 --> 00:04:44.723
I've been told by the Facebook team that
they reserve the right to change that so,

73
00:04:44.723 --> 00:04:46.250
it just be aware of that.

74
00:04:46.250 --> 00:04:51.546
So some of you have seen and actually in
the last couple of courses I did this way

75
00:04:51.546 --> 00:04:57.087
you can do like describe, and then inside
of it you do like it should do this test,

76
00:04:57.087 --> 00:04:59.812
I decided a simplify this just to test.

77
00:04:59.812 --> 00:05:03.580
So again there are several ways
that I can describe functions and

78
00:05:03.580 --> 00:05:05.547
have it assertions inside of it.

79
00:05:05.547 --> 00:05:08.770
I'm just going to have
a bunch of test functions.

80
00:05:08.770 --> 00:05:12.930
So this is all preference,
this is all correct, right?

81
00:05:12.930 --> 00:05:14.931
I'm just going with the simplest
one to teach, really.

82
00:05:14.931 --> 00:05:17.370
That's what I'm optimizing for.

83
00:05:17.370 --> 00:05:18.103
Okay, and

84
00:05:18.103 --> 00:05:23.490
test is just a global function that Jess
is going to inject into this function.

85
00:05:23.490 --> 00:05:28.698
So it's going to be globally available so
you don't have to import it from anywhere.

86
00:05:28.698 --> 00:05:31.679
Okay, so ("Search renders correctly").

87
00:05:35.168 --> 00:05:38.937
&gt;&gt; Brian Holt: Okay and then that's
gonna be a callback function here.

88
00:05:38.937 --> 00:05:44.708
And what we're going to do is

89
00:05:44.708 --> 00:05:51.921
we're going to say const component

90
00:05:51.921 --> 00:05:59.140
= renderer.create (Search).

91
00:05:59.140 --> 00:06:04.883
let tree, or actually,

92
00:06:04.883 --> 00:06:13.092
const tree = component.toJSON.

93
00:06:13.092 --> 00:06:19.771
And then expect (tree) toMatchSnapshot.

94
00:06:29.944 --> 00:06:30.770
&gt;&gt; Brian Holt: So let's save that.

95
00:06:30.770 --> 00:06:34.381
If you're gonna have your linter yelling
at you right now because it's like,

96
00:06:34.381 --> 00:06:37.075
I don't know what test is and
I don't know what expect is.

97
00:06:37.075 --> 00:06:38.555
I'm pretty sure you're just making it up.

98
00:06:38.555 --> 00:06:41.174
That's what ESLint is
telling you right now.

99
00:06:41.174 --> 00:06:45.264
So, let's go prove to ESLint,
that we're not making it up.

100
00:06:45.264 --> 00:06:50.564
Go to your ESLint.JSON.

101
00:06:50.564 --> 00:06:53.892
And inside of here,
we're gonna add one more env.

102
00:06:55.715 --> 00:07:00.237
&gt;&gt; Brian Holt: And it's gonna be "jest".

103
00:07:00.237 --> 00:07:05.940
This is telling ESLint, hey, ignore all
the global things that jest injects.

104
00:07:05.940 --> 00:07:08.810
The kinda trade off here is that
if you put inspect inside your,

105
00:07:08.810 --> 00:07:13.750
like your normal code where it won't
be available, it's gonna not flag that.

106
00:07:13.750 --> 00:07:17.950
So, it's a trade off, but it not
really bitten me in the butt yet, so

107
00:07:17.950 --> 00:07:20.300
I feel pretty good about doing this still.

108
00:07:20.300 --> 00:07:23.280
But just so you know, that's the trade-off
that right now I'm making for you.

109
00:07:25.310 --> 00:07:29.853
Okay, go back to your spec.jsx.

110
00:07:29.853 --> 00:07:32.394
And sometimes my linter is
a little bit slow to catch up,

111
00:07:32.394 --> 00:07:35.163
sometimes if I just copy and
paste it'll figure it shit out.

112
00:07:35.163 --> 00:07:36.320
Tthere is goes, okay.

