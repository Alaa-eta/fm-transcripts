WEBVTT

1
00:00:00.520 --> 00:00:03.330
&gt;&gt; Brian Holt: So we're gonna get going,
we're gonna create another route.

2
00:00:03.330 --> 00:00:09.367
So let's create a new file here,
call it details.jsx.

3
00:00:09.367 --> 00:00:12.790
Oops, and
we're gonna put that inside a js.

4
00:00:16.380 --> 00:00:17.830
One thing I was gonna mention is.

5
00:00:17.830 --> 00:00:20.790
That we haven't written tests for
details or show card or

6
00:00:20.790 --> 00:00:22.510
any of our other components.

7
00:00:22.510 --> 00:00:23.570
You would, right?

8
00:00:23.570 --> 00:00:25.120
You typically would write tests for

9
00:00:25.120 --> 00:00:27.590
every single component if you're
gonna write tests at all for those.

10
00:00:29.110 --> 00:00:31.310
We're not going to because it
would be redundant, right?

11
00:00:31.310 --> 00:00:32.920
I wouldn't be showing you new concepts,

12
00:00:32.920 --> 00:00:36.110
which is kinda the point
of what we're doing here.

13
00:00:36.110 --> 00:00:39.100
So, for now, we're only gonna
be writing tests for search.

14
00:00:39.100 --> 00:00:41.880
And then eventually we'll
write more tests for redux.

15
00:00:41.880 --> 00:00:43.830
But we're not going to write
the other rest of tests.

16
00:00:43.830 --> 00:00:44.870
But you should, right?

17
00:00:44.870 --> 00:00:48.440
In fact, it might even be a good exercise
for you to understand how to write tests.

18
00:00:50.320 --> 00:00:51.660
Okay.

19
00:00:51.660 --> 00:00:55.260
So, we have details, first thing.

20
00:00:55.260 --> 00:00:57.000
Since we're already typed everywhere else,

21
00:00:57.000 --> 00:00:58.600
we're going to first
thing opt in to typing.

22
00:01:02.320 --> 00:01:07.390
import React from 'react'.

23
00:01:07.390 --> 00:01:09.998
And we're just gonna
make a barebones const.

24
00:01:09.998 --> 00:01:16.670
Details equals.

25
00:01:16.670 --> 00:01:26.320
We're gonna have div className='details;
&gt;&gt; Brian Holt: And

26
00:01:26.320 --> 00:01:31.560
you can put an h1 in here with hi lol,
or whatever you want to put in there,

27
00:01:31.560 --> 00:01:36.700
just kind of make sure everything's gonna
work first before we work too much on it,

28
00:01:36.700 --> 00:01:40.900
export default Details.
&gt;&gt; Brian Holt: Okay, so

29
00:01:40.900 --> 00:01:45.000
now we have a bare bones component And

30
00:01:45.000 --> 00:01:50.476
then we're going to go import
that into our router, and

31
00:01:50.476 --> 00:01:55.510
make use of that.

32
00:01:55.510 --> 00:02:00.014
So, go to App.jsx, sorry,

33
00:02:00.014 --> 00:02:05.963
App.jsx, not We're going to

34
00:02:05.963 --> 00:02:11.414
import details from ./Details.

35
00:02:11.414 --> 00:02:15.460
And we're going to make a new route here,
which is going to be

36
00:02:16.830 --> 00:02:25.450
Route path="/details/:id And

37
00:02:25.450 --> 00:02:32.074
component is going to be ={Details}.
&gt;&gt; Brian Holt: So

38
00:02:32.074 --> 00:02:36.020
what this is saying is we're
gonna make a details page for

39
00:02:36.020 --> 00:02:41.530
each individual show that we have, right?
&gt;&gt; Brian Holt: And

40
00:02:41.530 --> 00:02:44.040
we wanna be able to address each
show individually, right, so

41
00:02:44.040 --> 00:02:48.800
where gonna have details Slash colon ID,
right.

42
00:02:48.800 --> 00:02:53.800
So that colon ID is going to be
the IMDB ID for that particular element.

43
00:02:55.110 --> 00:02:58.190
And then if it matches that it's
going to call the details router.

44
00:02:58.190 --> 00:03:00.970
And it's going to pass this
ID into details as well,

45
00:03:05.250 --> 00:03:09.880
cool.
&gt;&gt; Brian Holt: So

46
00:03:09.880 --> 00:03:12.920
what we're going to do here is we're going

47
00:03:15.040 --> 00:03:20.610
to first check to make sure that it works.
&gt;&gt; Brian Holt: My routes,

48
00:03:20.610 --> 00:03:23.320
my notes are incorrect here.

49
00:03:23.320 --> 00:03:24.360
So if you're following my notes,

50
00:03:24.360 --> 00:03:27.800
just be aware that I need to fix that.
&gt;&gt; Brian Holt: So

51
00:03:27.800 --> 00:03:32.970
we're gonna go here into our page.
&gt;&gt; Brian Holt: And

52
00:03:32.970 --> 00:03:34.040
it's not running right now, so

53
00:03:34.040 --> 00:03:39.394
we're going to get it running first.
&gt;&gt; Brian Holt: yarn

54
00:03:39.394 --> 00:03:44.212
dev.
&gt;&gt; Brian Holt: Okay,

55
00:03:44.212 --> 00:03:47.740
and then we're gonna come
in here to this page.

56
00:03:49.180 --> 00:03:50.640
And then just to make
sure everything works,

57
00:03:50.640 --> 00:03:53.520
we're just going to write a URL
that would match that route.

58
00:03:53.520 --> 00:03:56.190
So /details/something right?

59
00:03:56.190 --> 00:03:57.900
It could be literally anything.

60
00:03:59.810 --> 00:04:02.080
And notice that we get this hi lol, right?

61
00:04:02.080 --> 00:04:06.800
So it's working.
&gt;&gt; Brian Holt: In fact,

62
00:04:06.800 --> 00:04:09.229
something you can do here just to so
you can see what that looks like

63
00:04:10.370 --> 00:04:14.920
We come in here to details really quick.

64
00:04:14.920 --> 00:04:18.140
We're coming to see those
prems that route's passing in.

65
00:04:18.140 --> 00:04:24.420
We can do &lt;pre&gt;&lt;code&gt;, and
then do a {JSON.stringify}.

66
00:04:24.420 --> 00:04:27.219
We've done this before so
hopefully this looks familiar to (props.

67
00:04:27.219 --> 00:04:33.069
)&lt;/code&gt;&lt;/pre&gt; null, 4,
&gt;&gt; Brian Holt: And

68
00:04:33.069 --> 00:04:35.820
we're gonna pass in props here.

69
00:04:35.820 --> 00:04:39.040
So the first thing it's gonna
yell at us and say, hey,

70
00:04:39.040 --> 00:04:40.220
I don't know what those types are.

71
00:04:41.550 --> 00:04:45.600
That's fine, I don't care yet.
&gt;&gt; Brian Holt: I'm

72
00:04:45.600 --> 00:04:47.100
more interested in just
seeing what it looks like.

73
00:04:47.100 --> 00:04:49.910
So you can see here this is probably hard
to see but let's make it a little bit

74
00:04:49.910 --> 00:04:55.760
bigger So notice that we've got
something of a match, right?

75
00:04:55.760 --> 00:05:01.720
So we can see what information
is coming from the match, right?

76
00:05:01.720 --> 00:05:07.870
So this is the path that it matched,
the exact URL, if it was an exact match.

77
00:05:07.870 --> 00:05:08.980
And the params that came in.

78
00:05:08.980 --> 00:05:12.636
Right?
So, I called this URL with /details/1.

79
00:05:12.636 --> 00:05:13.170
Right?

80
00:05:13.170 --> 00:05:16.050
If I call this with something-else,

81
00:05:16.050 --> 00:05:20.280
it's going to come in with
something-else as that id.

82
00:05:20.280 --> 00:05:21.080
Right?
So, that's going to be

83
00:05:21.080 --> 00:05:22.630
pulled from the URL for you.

84
00:05:22.630 --> 00:05:27.870
You can see the location,
that's being passed in as well.

85
00:05:27.870 --> 00:05:30.250
As well as the history object.

86
00:05:32.350 --> 00:05:35.980
And this is going to be literally
the history package from mpm.

87
00:05:35.980 --> 00:05:40.990
That's how react-router-dom works, is it
works with this package called history.

88
00:05:40.990 --> 00:05:43.660
And so you're able to
manipulate the history that way

89
00:05:43.660 --> 00:05:47.864
as well.
&gt;&gt; Brian Holt: Okay,

90
00:05:47.864 --> 00:05:50.910
so Let's go ahead and
actually do something with it now.

91
00:05:54.950 --> 00:05:58.410
So, we'll drop this right here,
because we don't need it.

92
00:06:01.090 --> 00:06:07.570
And, yep,

93
00:06:07.570 --> 00:06:13.107
I showed you that.
&gt;&gt; Brian Holt: Actually,

94
00:06:13.107 --> 00:06:16.010
what we're going to do first.

95
00:06:18.780 --> 00:06:22.550
There's a couple strategies that we could
employ here to get the correct data into

96
00:06:22.550 --> 00:06:23.460
the details page.

97
00:06:23.460 --> 00:06:24.380
Right?

98
00:06:24.380 --> 00:06:27.030
So, we're reading stuff out of this props.

99
00:06:27.030 --> 00:06:29.230
No it's not props, but data.json.

100
00:06:29.230 --> 00:06:30.700
Right?

101
00:06:30.700 --> 00:06:34.290
And for a details page,
it's concentrating on one show, right?

102
00:06:34.290 --> 00:06:36.580
It's not concentrating on all
of the shows, it's just one.

103
00:06:37.770 --> 00:06:40.930
So one thing that we could do
is inside of the details page is

104
00:06:41.950 --> 00:06:44.250
just given that parameter
ID we could go and

105
00:06:44.250 --> 00:06:48.760
find the correct show out of our data.json
I don't think that's the best approach.

106
00:06:48.760 --> 00:06:53.000
I think the details page should be unaware
that other shows even exist, right?

107
00:06:53.000 --> 00:06:57.100
It should just have the one show and
that will make it more flexible.

108
00:06:57.100 --> 00:07:00.030
That way, the details like
the particular show can come from

109
00:07:00.030 --> 00:07:01.250
any number of sources, right?

110
00:07:01.250 --> 00:07:05.630
It could come from the API, it could come
from a hydrated server side rendering

111
00:07:05.630 --> 00:07:09.200
data store It could be side
loaded some other way, right?

112
00:07:09.200 --> 00:07:11.970
It makes it more flexible as well as more

113
00:07:11.970 --> 00:07:14.540
testable.
&gt;&gt; Brian Holt: So

114
00:07:14.540 --> 00:07:17.560
what we're gonna do instead
is we're gonna go to app.jsx.

115
00:07:17.560 --> 00:07:21.800
And what we're gonna do up here is
we're going to import the data up here,

116
00:07:24.166 --> 00:07:29.103
&gt;&gt; Brian Holt: preload from dot slash or

117
00:07:29.103 --> 00:07:34.750
dot dot slash data dot json.

118
00:07:34.750 --> 00:07:35.250
K.

119
00:07:38.360 --> 00:07:42.570
Now we wanna pass the correct
shell from preload into details.

120
00:07:42.570 --> 00:07:44.030
Right?

121
00:07:44.030 --> 00:07:47.040
However notice we're
not actually rendering

122
00:07:47.040 --> 00:07:48.970
We're not creating an instance
of Details right here.

123
00:07:48.970 --> 00:07:50.980
We're just passing at
the general component, and

124
00:07:50.980 --> 00:07:53.770
then Route is rendering the component,
right?

125
00:07:53.770 --> 00:07:57.950
So how do we pass props from what we have

126
00:07:57.950 --> 00:08:02.920
inside of app into Details?
&gt;&gt; Brian Holt: Well there's

127
00:08:02.920 --> 00:08:06.310
kind of a cool trick you can do here.

128
00:08:06.310 --> 00:08:08.740
If you have a function.

129
00:08:08.740 --> 00:08:14.000
That returns a component that in
that itself is a component, right?

130
00:08:14.000 --> 00:08:15.720
Because you can have these functions,
right?

131
00:08:15.720 --> 00:08:18.600
In fact this one is perfect,
this is perfect example right there.

132
00:08:18.600 --> 00:08:21.170
This is a function that that
we trans markup, right?

133
00:08:21.170 --> 00:08:25.410
So, here we could have
a function that returns

134
00:08:25.410 --> 00:08:30.690
details
&gt;&gt; Brian Holt: And that also works right?

135
00:08:30.690 --> 00:08:34.730
Because now, this in and of itself, this
block right here, is another component.

136
00:08:35.800 --> 00:08:39.840
What's cool about this is now
we can pass things into detail.

137
00:08:39.840 --> 00:08:42.000
We can pass props into details.

138
00:08:42.000 --> 00:08:44.680
So, like, stuff=cool.

139
00:08:44.680 --> 00:08:45.310
Right.

140
00:08:45.310 --> 00:08:45.840
I don't know.

141
00:08:45.840 --> 00:08:51.620
Whatever you want to put in there.
&gt;&gt; Brian Holt: But

142
00:08:51.620 --> 00:08:56.527
now what we can do instead,
we can say show={} and

143
00:08:56.527 --> 00:09:00.320
then we can figure out which particular
show we want to pass into there.

144
00:09:00.320 --> 00:09:07.929
So we can do preload.shows.find I
think is the method I wanna use.

145
00:09:15.590 --> 00:09:17.070
&gt;&gt; Brian Holt: I'm doing this kind of out

146
00:09:17.070 --> 00:09:25.660
of order, if that's okay.
&gt;&gt; Brian Holt: So

147
00:09:25.660 --> 00:09:33.750
we're gonna do find
&gt;&gt; Brian Holt: And

148
00:09:37.710 --> 00:09:39.880
this is going to be a show.

149
00:09:39.880 --> 00:09:45.234
And it's going to be
props.params.id === show.imdbID

150
00:09:53.650 --> 00:09:54.670
&gt;&gt; Brian Holt: So we have a couple of

151
00:09:54.670 --> 00:09:56.170
problems here.

152
00:09:56.170 --> 00:09:57.980
Well, first of all,
this is actually going to work.

153
00:09:59.080 --> 00:10:04.950
And now if we save this, we have some
complaining from our type system but

154
00:10:04.950 --> 00:10:10.220
we're going to Figure that out real quick.
&gt;&gt; Speaker 2: Does

155
00:10:10.220 --> 00:10:12.540
that arrow function have to accept props?
&gt;&gt; Brian Holt: Yep.

156
00:10:12.540 --> 00:10:13.230
Exactly.
Thank you.

157
00:10:13.230 --> 00:10:20.680
So this is going to be mad
that this isn't typed either.

158
00:10:20.680 --> 00:10:23.500
But we'll click it type
system momentarily.

159
00:10:26.270 --> 00:10:31.440
In fact you'll kind of see this
pattern emerging of how I write flow.

160
00:10:31.440 --> 00:10:35.080
It's like I'll write whatever the hell
I want to write then I'll go back and

161
00:10:35.080 --> 00:10:36.160
figure out the types.

162
00:10:36.160 --> 00:10:36.780
Right?

163
00:10:36.780 --> 00:10:40.610
And then I'll make solid,
my type annotation.

164
00:10:40.610 --> 00:10:43.540
But I'll first take advantage of
the dynamic nature of JavaScript and

165
00:10:43.540 --> 00:10:45.750
just throw stuff to the wind and
figure it out.

166
00:10:45.750 --> 00:10:48.590
And then come back and
say okay let's make this mature.

167
00:10:52.580 --> 00:10:57.030
So if something else is not
actually a valid id right but

168
00:10:57.030 --> 00:11:02.730
if I put in something like one of these
&gt;&gt; Brian Holt: Did I break it,

169
00:11:02.730 --> 00:11:03.830
I broke it didn't I?

170
00:11:12.054 --> 00:11:16.650
&gt;&gt; Brian Holt: But anyway,

171
00:11:16.650 --> 00:11:20.260
what I'm gonna be pulling out,
if you look here in your data.json

172
00:11:20.260 --> 00:11:25.130
You can just pick anyone of
these imdbIDs right here so

173
00:11:25.130 --> 00:11:30.490
let's look at like I don't know,
how about stranger things?

174
00:11:31.490 --> 00:11:36.150
I'll pull out one off going here and
paste that one in here

175
00:11:37.990 --> 00:11:43.070
see what is going on
&gt;&gt; Brian Holt: Cannot read ID.

176
00:11:45.100 --> 00:11:47.810
So let's go in and
figure out why it can't read the ID.

177
00:11:49.260 --> 00:11:55.790
So we are going back to app.jsx.
&gt;&gt; Brian Holt: So

178
00:11:55.790 --> 00:12:00.158
component here, props which is going
to return a details parameter.

179
00:12:00.158 --> 00:12:05.786
preload.shows.find(show.

180
00:12:09.265 --> 00:12:10.695
&gt;&gt; Brian Holt: This should refer to that

181
00:12:10.695 --> 00:12:15.750
props, props.params.id === show.imdbID.
&gt;&gt; Brian Holt: All right, let's

182
00:12:19.810 --> 00:12:25.310
make this a little bit more
&gt;&gt; Brian Holt: A little less clever.

183
00:12:42.110 --> 00:12:43.470
&gt;&gt; Brian Holt: Okay, and then we're gonna

184
00:12:43.470 --> 00:12:51.710
pull this out here, just a sec.
&gt;&gt; Brian Holt: const

185
00:12:51.710 --> 00:12:53.830
selectedShow equals that.

186
00:12:53.830 --> 00:13:00.219
And we'll pass in
selectedShow right there.

187
00:13:06.817 --> 00:13:09.351
Okay,

188
00:13:16.660 --> 00:13:17.670
&gt;&gt; Brian Holt: Still getting an error

189
00:13:17.670 --> 00:13:23.607
there, so props.
&gt;&gt; Brian Holt: .params,

190
00:13:23.607 --> 00:13:28.816
so I guess that's just
console.log(props) here.

191
00:13:53.665 --> 00:13:54.245
&gt;&gt; Brian Holt: Cannot read ID.

192
00:13:54.245 --> 00:13:54.810
There.

193
00:13:54.810 --> 00:14:02.160
Well that is not super useful.
&gt;&gt; Brian Holt: [COUGH]

194
00:14:05.910 --> 00:14:07.440
&gt;&gt; Brian Holt: So for now, we'll just

195
00:14:08.480 --> 00:14:10.850
come into that outcome,
I'm sure that's where it is, and

196
00:14:10.850 --> 00:14:17.460
return an h1.
&gt;&gt; Brian Holt: Let's see what's going on.

197
00:14:24.470 --> 00:14:25.860
&gt;&gt; Brian Holt: Okay, so that's all fine.

198
00:14:25.860 --> 00:14:27.310
I think.

199
00:14:30.060 --> 00:14:31.450
So it's from match.

200
00:14:34.290 --> 00:14:34.790
See.

201
00:14:34.790 --> 00:14:35.670
Okay.

202
00:14:35.670 --> 00:14:38.020
So this is something that my type
checker was trying to tell me,

203
00:14:38.020 --> 00:14:39.480
and I was just ignoring.

204
00:14:41.440 --> 00:14:46.540
So it should be, so
if we go back down here,

205
00:14:46.540 --> 00:14:52.986
it should be props.match.params.id.
&gt;&gt; Brian Holt: And

206
00:14:52.986 --> 00:14:56.940
if you come back in here and

207
00:14:56.940 --> 00:15:04.470
get rid of this h1 right here.
&gt;&gt; Brian Holt: There you go,

208
00:15:04.470 --> 00:15:08.690
and now notice that show is actually
being passed down Into details,

209
00:15:08.690 --> 00:15:15.150
right?
&gt;&gt; Brian Holt: Okay,

210
00:15:15.150 --> 00:15:18.130
so like let's recap cuz there
was a lot that went on there.

211
00:15:18.130 --> 00:15:22.410
So what we put in here was
this is a component here

212
00:15:23.480 --> 00:15:27.830
that It's going to select
the correct show and

213
00:15:27.830 --> 00:15:31.260
its going to pass that
show down into details.

214
00:15:31.260 --> 00:15:37.560
Now notice that we lost the match detail,
the history,

215
00:15:37.560 --> 00:15:39.780
all that stuff that was
being passed on to details.

216
00:15:39.780 --> 00:15:42.750
And that's kind of the problem, you want
those things to still show up because

217
00:15:42.750 --> 00:15:46.160
details is a route and
it should have access to that data.

218
00:15:46.160 --> 00:15:49.900
So what we're gonna do here after
show is just put in Hey, just

219
00:15:49.900 --> 00:15:54.270
give it the rest of the props as well.
&gt;&gt; Brian Holt: That's

220
00:15:54.270 --> 00:15:56.680
just good practice so that if it's
a route it should get all that

221
00:15:56.680 --> 00:15:59.070
detail.
&gt;&gt; Brian Holt: So

222
00:15:59.070 --> 00:16:03.900
now if you go back here and refresh,
&gt;&gt; Brian Holt: So the reason why

223
00:16:03.900 --> 00:16:08.800
it's not actually refreshing right now for
us is because It's encountering errors and

224
00:16:08.800 --> 00:16:11.180
it will only refresh
when there are no errors.

225
00:16:13.050 --> 00:16:14.970
That's why hot module reload
is not firing right now.

226
00:16:16.790 --> 00:16:19.970
But now notice it's getting the show,
the match, the location, the history, and

227
00:16:19.970 --> 00:16:21.630
all that kind of stuff.

228
00:16:21.630 --> 00:16:30.530
Cool?
&gt;&gt; Brian Holt: So let's actually go and

229
00:16:30.530 --> 00:16:36.320
fix some of our types here because this
is saying hey you're accessing match and

230
00:16:36.320 --> 00:16:38.990
I can't validate that that's
not going to cause an error so

231
00:16:38.990 --> 00:16:41.510
please help me understand
what's happening here.

232
00:16:43.780 --> 00:16:49.610
Well, what's cool is, is match is actually
a type that Direct writer Dom exports for

233
00:16:49.610 --> 00:16:52.090
you, so we actually just pull in match.

234
00:16:52.090 --> 00:16:58.100
So we're going to come up here and
say specific to flow right now.

235
00:16:58.100 --> 00:17:02.478
You're going to import type match.

236
00:17:02.478 --> 00:17:07.872
From react-router-dom.

237
00:17:07.872 --> 00:17:10.560
This is what, this came from flow typed.

238
00:17:11.910 --> 00:17:13.360
Okay.
So now we have this matched type and

239
00:17:15.200 --> 00:17:19.950
we can tell this props right here
that it's going to come from.

240
00:17:21.580 --> 00:17:22.620
It's going to have a match.

241
00:17:24.400 --> 00:17:30.430
And that match is going to be a match.
&gt;&gt; Brian Holt: That make sence?

242
00:17:30.430 --> 00:17:33.320
So props is gonna be an object on that.

243
00:17:33.320 --> 00:17:36.590
It's going to have a match object,

244
00:17:36.590 --> 00:17:41.400
which is going to be of type match.
&gt;&gt; Brian Holt: So

245
00:17:41.400 --> 00:17:43.380
this match corresponds to that, right?

246
00:17:43.380 --> 00:17:47.010
And this capital M match Corresponds
to that Match right there.

247
00:17:47.010 --> 00:17:50.220
It's a little confusing when
things are called the same thing,

248
00:17:50.220 --> 00:17:55.310
but that's what's happening.
&gt;&gt; Brian Holt: Now

249
00:17:55.310 --> 00:17:58.590
let's talk about that we're accessing
this object called params, right?

250
00:17:58.590 --> 00:18:01.500
Params is going to be defined
by definition on Match.

251
00:18:01.500 --> 00:18:04.060
Or else something else is
gonna throw a flow type error.

252
00:18:04.060 --> 00:18:06.040
So we know for a fact that Match.

253
00:18:06.040 --> 00:18:08.300
Always comes with params, and

254
00:18:08.300 --> 00:18:11.560
then everything else on params
is anyone's bet, right.

255
00:18:11.560 --> 00:18:16.023
But flow type's not
gonna validate that for

256
00:18:16.023 --> 00:18:17.340
you.
&gt;&gt; Brian Holt: I don't think,

257
00:18:17.340 --> 00:18:21.580
I think if I put other here.
&gt;&gt; Brian Holt: No,

258
00:18:21.580 --> 00:18:25.460
it's not, it's smart enough to know
that Id's gonna be from this, right,

259
00:18:25.460 --> 00:18:28.590
it's It's not gonna do string
interpolation for you, sorry.

260
00:18:30.460 --> 00:18:34.600
So what match is going to be,
it's gonna be an object of anything and

261
00:18:34.600 --> 00:18:37.750
it's just not gonna validate anything
that's coming back from params.

262
00:18:39.560 --> 00:18:44.450
Any questions, does that make sense?
&gt;&gt; Speaker 3: What was the import line for

263
00:18:44.450 --> 00:18:45.350
the match?
&gt;&gt; Brian Holt: Import type

