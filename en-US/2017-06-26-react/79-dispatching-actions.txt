[00:00:00]
>> Brian: What I do wanna show you though. If you're interested in still testing that user interaction. We don't really have a good way of testing directly on that input anymore, because we don't have access to header the way that we used to.
>> Brian: We could try and figure it out, but that would be kinda tough.

[00:00:21]
So let's try this instead.
>> Brian: So I'm gonna show you how, what we can do is we can actually dispatch an action to Redux, and see, based on dispatching an action to Redux, if we get the correct results. And let's go ahead and give that a shot. So unfortunately, we're gonna have to kind of set up Redux here in the process.

[00:00:45]
So we're gonna have to import, actually this is gonna have to go above it, here. Import provider from react-redux. And we're also going to have to import memory router from react-router-don.
>> Brian: So in order for our search components to not just out now fail, we're gonna have to give it a router, because it has a link component in the header.

[00:01:20]
And we're going to have to give it a provider. So that it can, we can provide the store to it, and we're also going to have to import store from ./store.
>> Brian: Okay, we're gonna get rid of this. And what we're gonna do is we're gonna do a shallow rendering.

[00:01:48]

>> Brian: With memory router on the outside, no provider on the outside. Provider store equals store,
>> Brian: And then memory router inside of that.
>> Brian: Okay?
>> Brian: That's the other thing we need to do.
>> Brian: So we're gonna get rid of this simulate change thing. I actually think we don't even need memory router, now that I'm thinking about it.

[00:02:37]
Let's keep going. We're gonna do store.dispatch up here. So we're actually going to dispatch an action directly to the store. We're gonna send a set search term, so we have to go import that as well, search word.
>> Brian: So let's go up to the top and import that as well.

[00:03:00]
So we're going to say import, set search term from ./actionCreators.
>> Brian: Okay, then we're gonna do the show countdown here and expect it's gonna work exactly the same way. So now that I'm thinking, let's go make sure this actually works first. So we're gonna say yarn test.
>> Brian: Could not find module store, that's right.

[00:03:34]
Cuz we have to do dot dot, and also dot dot there. Cuz we're inside the test directory, so we have to go up one. Let's try that again, yarn test.
>> Brian: And we got 0. All right, because,
>> Brian: Yup, we're gonna have to do render, right? Yup, okay.

[00:04:07]
So this is why this is. So at this point, shallow is actually not going to be enough for us to kind of get everything that we need out of here. So we're gonna get rid of shallow, and we're gonna keep shallow as well for the first two tests, but we're gonna use render for the last test.

[00:04:26]
Which is gonna be a deeper actually render out all of the markup.
>> Brian: Okay? Then down here, we're gonna change shallow to render.
>> Brian: And now that we're actually gonna fully render out everything, we actually can't do this kind of find anymore, cuz it's not gonna know what's a React component and what's not.

[00:04:50]
It's actually gonna render out all to markup, so we're gonna have to give it a CSS selector, and we're gonna do .show-card is what we called it.
>> Brian: And actually, we have to go add that as well, so that we can hook into it. So open your show-card really quick.

[00:05:09]

>> Brian: And here where it says rapper 2, we're just gonna say class equals show or class name rather, equals show-card
>> Brian: So this is in show-card. Now if we go back to our test search.spec.jsx, search.spec.jsx, this one. Now this should work, coming back to yarn test.
>> Brian: There we go, now it passes.

[00:05:45]
Now I hope you're looking at this as like, this is a lot of intimate knowledge to have about this component to test it, it is. So I'm gonna go ahead and assert while this is a valid test, it does test something. I'm not a huge fan of it.

[00:05:59]
I actually liked what we had better before, where we were just passing in the search term and seeing that it worked given that particular props. But if you wanna test integration there between Redux and passing in the store, and passing in the action, and then getting something out of it.

[00:06:13]
In that particular sense, this is how you're going to do that. But the sum of my entire story here is once you introduce Redux, your react components become a lot tougher to test. Significantly tougher to test, so that's something to be aware of. The flip side of that which is what I'm about to show after this, is that the Redux parts of it.

[00:06:36]
So the actual state management part becomes way easier to test, right, so you're kind of trading one for the other. And I'm gonna go ahead and assert that. The statement management part is actually the important part to test. Again, we've been doing this for three days and we've had to rewrite our tests already twice, right?

[00:06:54]
That kind of sucks, right? Rewriting tests is one of my least favorite things to do.
>> Brian: Okay, so any questions about that?
>> Brian: It's up to you which one you prefer, which one you actually are interested in testing. There's no reason that you couldn't have both tests as well.

[00:07:17]
So and what that would like is just, what I can do here is I can just copy this. And let's go back to where it was before, back when we were doing shallow without provider.
>> Brian: So I think this is fine right there. So let's copy this test case.

[00:07:59]
And after this, I'll push a branch so you can have both of them as well. And you can kind of compare them.
>> Brian: So this is gonna be without Redux. And this one is going to be with Redux,
>> Brian: And now we say yarn test. Make sure both of those pass the way we expect them to, and now we have an extra test, one we test with Redux and one without.

[00:08:33]
So you're welcome to make it, I probably would not write both of these tests, but it's good to demonstrate to what's going on. Various strategies of testing these components. Something worth noting. Search should render based on without Redux takes one millisecond, with Redux it's gonna take 35 milliseconds.

[00:08:56]
Why is that? It's not Redux, Redux is plenty fast. It's the render, right? This color right here, render wherever it is, this is expensive. Cuz this is actually going to render everything out to a string. It has jsdom built in and it does all sorts of this stuff for you.

[00:09:13]
So that's something to keep in mind. The more you use render the slower it's gonna be. Render is still pretty fast, but as soon as it's started again to static rendering it gets really slow, really fast, so.

