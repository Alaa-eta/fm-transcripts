WEBVTT

1
00:00:00.490 --> 00:00:03.950
&gt;&gt; Brian Holt: So, kinda to recap where
we were, we've now integrated Redux,

2
00:00:03.950 --> 00:00:04.860
into our application.

3
00:00:04.860 --> 00:00:06.290
It now works.

4
00:00:06.290 --> 00:00:10.200
So, if I type black right there,
and I go into Black Mirror, and

5
00:00:10.200 --> 00:00:11.120
I go back out of it.

6
00:00:11.120 --> 00:00:15.354
Notice, that Black is still up there.
&gt;&gt; Brian Holt: That's because,

7
00:00:15.354 --> 00:00:21.046
Redux is keeping that state.
&gt;&gt; Brian Holt: And,

8
00:00:21.046 --> 00:00:24.290
yeah, so we were able to do that.

9
00:00:24.290 --> 00:00:28.930
It's not fun to refacter to include
redux because it involves touching

10
00:00:28.930 --> 00:00:32.500
a lot of pieces of your code, and
those sorts of refacters are the worst.

11
00:00:32.500 --> 00:00:34.790
There's a lot of potential for breakage.

12
00:00:34.790 --> 00:00:38.450
But now that it's in there, it's actually
pretty convenient to keep using it and

13
00:00:38.450 --> 00:00:42.529
keep dispatching actions via
the reducers and all that kind of stuff.

14
00:00:43.850 --> 00:00:46.230
So something that we have not done yet

15
00:00:46.230 --> 00:00:48.670
is we have not integrated
flow into redux yet.

16
00:00:48.670 --> 00:00:52.580
And I did this on purpose because
you can do redux again without flow.

17
00:00:52.580 --> 00:00:54.600
I wanted to show you how to do that.

18
00:00:54.600 --> 00:00:58.730
But now that you've seen how to do
redux without flow I wanna go back and

19
00:00:58.730 --> 00:00:59.990
refactor to include flow.

20
00:00:59.990 --> 00:01:02.760
And luckily,
because of the patterns that we followed,

21
00:01:02.760 --> 00:01:04.160
it's not gonna be terribly difficult.

22
00:01:05.560 --> 00:01:08.421
So the first thing I want you
to do is we're gonna open

23
00:01:08.421 --> 00:01:13.288
our Types File.
&gt;&gt; Brian Holt: This is

24
00:01:13.288 --> 00:01:15.250
inside of your Flow Type Directory.

25
00:01:16.420 --> 00:01:18.050
And we're gonna add
three new types in here.

26
00:01:21.090 --> 00:01:21.980
Redux is for

27
00:01:21.980 --> 00:01:25.190
the most part pretty easy to, like already
rely on the types that come with it.

28
00:01:25.190 --> 00:01:29.120
If you notice inside of
your MPM Directory here,

29
00:01:29.120 --> 00:01:32.660
down here, you're gonna have
some redux types down here.

30
00:01:34.070 --> 00:01:34.680
Already included.

31
00:01:37.260 --> 00:01:40.300
But what we're gonna do now is
we're going to go type our actions.

32
00:01:41.680 --> 00:01:46.139
And I admit that I totally lifted
this from the Facebook F8 app.

33
00:01:46.139 --> 00:01:49.360
It's kind of like the best example app for

34
00:01:49.360 --> 00:01:53.670
how to use flow with various
different components.

35
00:01:53.670 --> 00:01:57.768
So I definitely when I
was just checking it out,

36
00:01:57.768 --> 00:02:03.818
it was their open source app that
they wrote for their F8 conference.

37
00:02:03.818 --> 00:02:07.118
So the first thing we are going to
do is we are going to declare all of

38
00:02:07.118 --> 00:02:10.570
the potential action types that we could,
that we can have.

39
00:02:10.570 --> 00:02:16.671
So the first one I wanna say is declare,
&gt;&gt; Brian Holt: type

40
00:02:16.671 --> 00:02:24.602
ActionType = ' SET_SEARCH_ TERM'.

41
00:02:24.602 --> 00:02:29.190
This is what we're gonna call an
enumerated type which if you have worked

42
00:02:29.190 --> 00:02:33.280
in various other programming languages
you usually will see here and there.

43
00:02:33.280 --> 00:02:35.550
This is just saying I have
this action type and for

44
00:02:35.550 --> 00:02:38.480
this particular case our action type
can literally only be the string.

45
00:02:38.480 --> 00:02:42.400
If it's literally anything else,
you're going to get a type checker error.

46
00:02:42.400 --> 00:02:45.730
However, as we add more action types,
we're just gonna keep adding them there.

47
00:02:45.730 --> 00:02:48.620
And so an action type can be
one of these strings, right.

48
00:02:48.620 --> 00:02:50.830
So for
this particular one it's set search term.

49
00:02:52.200 --> 00:02:56.912
So the second thing we're gonna have
is we're going to have an action type

50
00:02:56.912 --> 00:02:58.662
that's gonna be generic.

51
00:02:58.662 --> 00:03:05.751
So we're gonna say declare type action
T and this is gonna take in an A,

52
00:03:05.751 --> 00:03:11.638
which is gonna be an action type and
it's gonna take in a P,

53
00:03:11.638 --> 00:03:17.506
which is going to be some sort of payload.
&gt;&gt; Brian Holt: So

54
00:03:17.506 --> 00:03:22.289
we're just using A and
P to be generic types, right?

55
00:03:22.289 --> 00:03:24.230
I'll show you how to use this momentarily.

56
00:03:24.230 --> 00:03:28.610
So the first thing is gonna have the type,
right?

57
00:03:28.610 --> 00:03:32.213
Cuz every action has a type,
it's gonna be A.

58
00:03:32.213 --> 00:03:39.300
And it's gonna have the payload,
which is gonna be P, okay.

59
00:03:49.803 --> 00:03:51.009
&gt;&gt; Brian Holt: So these two types

60
00:03:51.009 --> 00:03:54.716
are purely for
internal use inside of this types file.

61
00:03:54.716 --> 00:03:58.070
The one that we're actually gonna export
out into the world is called action.

62
00:03:59.120 --> 00:04:03.720
So we're going to export, type, action,

63
00:04:05.110 --> 00:04:07.350
which is going to be equal
to one of these action Ts.

64
00:04:10.140 --> 00:04:17.508
And it's going to be a set search term and
a string for the payload.

65
00:04:25.199 --> 00:04:26.140
&gt;&gt; Brian Holt: So we have ActionType.

66
00:04:26.140 --> 00:04:27.820
This is always going to be a string.

67
00:04:27.820 --> 00:04:32.070
In this case it's always gonna be
the SET_SEARCH_TERM string, right?

68
00:04:32.070 --> 00:04:36.890
We have this kind of generic ActionType
that's gonna take in as you can see here,

69
00:04:36.890 --> 00:04:39.250
it takes in this parameter and
this parameter.

70
00:04:39.250 --> 00:04:44.140
So it takes in an action type and it takes
in a payload type of some sort, right?

71
00:04:44.140 --> 00:04:47.002
Because your payload can vary
from action to action, right?

72
00:04:47.002 --> 00:04:49.555
We're actually gonna write one here
momentarily that it's going to

73
00:04:49.555 --> 00:04:51.070
be an object.

74
00:04:51.070 --> 00:04:56.530
But for this particular one,
it's just gonna be a generic P, right?

75
00:04:56.530 --> 00:04:58.180
And the payload is going to be that,
right?

76
00:04:58.180 --> 00:05:02.327
So for every time that we have
a set search term action,

77
00:05:02.327 --> 00:05:06.489
its type is going to be string for
the payload, right?

78
00:05:06.489 --> 00:05:09.510
Does that make sense?

79
00:05:09.510 --> 00:05:10.813
Sort of?
&gt;&gt; Speaker 2: Could

80
00:05:10.813 --> 00:05:13.070
you explain that syntax?
&gt;&gt; Brian Holt: Like

81
00:05:13.070 --> 00:05:14.657
the angle brackets?
&gt;&gt; Speaker 2: Yeah.

82
00:05:14.657 --> 00:05:15.773
&gt;&gt; Brian Holt: Sure.

83
00:05:15.773 --> 00:05:18.076
So when you do these angle brackets,

84
00:05:18.076 --> 00:05:22.730
this is like parameters that you
are giving to that particular item.

85
00:05:22.730 --> 00:05:27.641
So for example, you've done this earlier
where we had an array of show, right.

86
00:05:29.190 --> 00:05:32.640
So we are adding another
type to this type, right.

87
00:05:33.700 --> 00:05:35.351
So in particular for this array of show,

88
00:05:35.351 --> 00:05:38.130
it is going to go validate everything
inside of it is a show, right.

89
00:05:39.150 --> 00:05:41.990
For ours here that we're doing,
we're gonna validate that

90
00:05:41.990 --> 00:05:45.570
the first item is going to be
the type of the action, right.

91
00:05:45.570 --> 00:05:47.680
And the second type,

92
00:05:47.680 --> 00:05:51.460
the P is going to be whatever
the type of the payload is, right.

93
00:05:51.460 --> 00:05:55.080
So the payload for SET_SEARCH_TERM
is always gonna be a string.

94
00:05:56.080 --> 00:05:58.820
So if I try and create a SET_SEARCH_TERM
action that's a number,

95
00:05:58.820 --> 00:06:02.090
it's going to fail my type check,
which is exactly what I want it to do.

96
00:06:02.090 --> 00:06:05.480
I guess I was curious is that in EX6?
&gt;&gt; Speaker 2: This

97
00:06:05.480 --> 00:06:07.040
is a Flow.
&gt;&gt; Brian Holt: Purely

98
00:06:07.040 --> 00:06:07.880
Flow stuff.
&gt;&gt; Speaker 2: Okay.

99
00:06:07.880 --> 00:06:11.022
Gotcha.
&gt;&gt; Brian Holt: Good

100
00:06:11.022 --> 00:06:15.214
question.
&gt;&gt; Brian Holt: And

101
00:06:15.214 --> 00:06:16.760
then what I'll do here for action.

102
00:06:16.760 --> 00:06:21.492
Right now the only action that I have in
this application is this SET_SEARCH_TERM

103
00:06:21.492 --> 00:06:25.548
action, but as we come and
add more actions, what we're gonna say is,

104
00:06:25.548 --> 00:06:29.560
this can be this kind of action or
it can be this kind of action, right.

105
00:06:29.560 --> 00:06:32.502
And we'll create each different
kind of action that we can have,

106
00:06:32.502 --> 00:06:35.928
which will be great because flow will
actually be able to warn us, like hey,

107
00:06:35.928 --> 00:06:39.390
you're dispatching this action and
that's not a valid action, right.

108
00:06:39.390 --> 00:06:43.196
And it's going to save you a ton of bugs
that way, that you are not going to be

109
00:06:43.196 --> 00:06:47.937
dispatching wrong sorts of actions.
&gt;&gt; Brian Holt: So

110
00:06:47.937 --> 00:06:51.233
this will get us started and
as we go do the next actions when

111
00:06:51.233 --> 00:06:55.495
we get to the asynchronous actions,
we will go write another action type.

112
00:06:55.495 --> 00:06:58.250
So you can see what it's like when
there are multiple types of actions.

113
00:06:59.947 --> 00:07:00.658
&gt;&gt; Brian Holt: Okay,

114
00:07:00.658 --> 00:07:05.524
so now we have to go opt in
all of our files to flow.

115
00:07:05.524 --> 00:07:10.806
So open reducers,
&gt;&gt; Brian Holt: And

116
00:07:10.806 --> 00:07:15.282
say At flow.
&gt;&gt; Brian Holt: Open store,

117
00:07:17.328 --> 00:07:20.691
&gt;&gt; Brian Holt: Add At flow.

118
00:07:20.691 --> 00:07:28.500
Open action creators.

119
00:07:28.500 --> 00:07:30.720
By the way,
you will still be getting this lint error.

120
00:07:30.720 --> 00:07:32.570
We'll be fixing that here
in just a little bit, but

121
00:07:32.570 --> 00:07:34.820
if you're still seeing ES lint errors,
that's expected.

122
00:07:38.650 --> 00:07:42.230
Save action creators and then lastly,

123
00:07:42.230 --> 00:07:48.204
we have actions that will need to
go off that one into flow as well.

