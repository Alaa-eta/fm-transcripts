WEBVTT

1
00:00:00.380 --> 00:00:01.456
&gt;&gt; Brian: If you're writing React,

2
00:00:01.456 --> 00:00:04.280
there are some code smells that you
definitely wanna pay attention to.

3
00:00:04.280 --> 00:00:08.417
One particular thing that you might notice
that's a little bit smelly is we have

4
00:00:08.417 --> 00:00:11.020
this header that lives on several pages,
right?

5
00:00:11.020 --> 00:00:13.390
So we have this header here and

6
00:00:13.390 --> 00:00:18.780
then if you go back to search you have
a really similar header here, right?

7
00:00:18.780 --> 00:00:23.630
It's not exactly the same cuz
the inputs here similar enough though.

8
00:00:23.630 --> 00:00:25.950
So this is where your
brain should be thinking,

9
00:00:25.950 --> 00:00:27.751
hey I have two concerns on this page.

10
00:00:27.751 --> 00:00:31.911
I have a header concern and
then I have a details route concern, so

11
00:00:31.911 --> 00:00:36.677
what I should be doing here I should be
abstracting this out so that I can have

12
00:00:36.677 --> 00:00:41.159
a reusable header component that I
can just drop in to multiple pages.

13
00:00:42.350 --> 00:00:48.035
So, let's go give that a shot.
&gt;&gt; Brian: So

14
00:00:48.035 --> 00:00:52.960
make a file called header.jsx.

15
00:00:52.960 --> 00:00:58.328
We're gonna import React from 'react'.

16
00:00:58.328 --> 00:01:03.070
import, well,
we'll do that one in just a sec.

17
00:01:03.070 --> 00:01:12.166
And we're gonna say const Header =
&gt;&gt; Brian: And

18
00:01:12.166 --> 00:01:20.905
this is gonna be a header.
&gt;&gt; Brian: And

19
00:01:20.905 --> 00:01:24.872
with an h1,
which is going to be the s video.

20
00:01:24.872 --> 00:01:29.271
And then we're gonna export

21
00:01:29.271 --> 00:01:33.818
default header.
&gt;&gt; Speaker 2: Wouldn't you also want to

22
00:01:33.818 --> 00:01:36.490
put it in Flow?
&gt;&gt; Brian: Good call.

23
00:01:41.650 --> 00:01:42.820
Something I often forget to do.

24
00:01:44.530 --> 00:01:48.790
In fact, when I was writing this course I
forgot to opt part of the course into Flow

25
00:01:48.790 --> 00:01:50.270
and I ended up having to
rewrite a good I don't

26
00:01:51.710 --> 00:01:55.500
know 10% of the course because I
just forgot to opt it into Flow.

27
00:01:55.500 --> 00:02:02.016
So it is something that I often forget.
&gt;&gt; Brian: Okay,

28
00:02:02.016 --> 00:02:04.799
so go back to details real quick.

29
00:02:06.350 --> 00:02:12.449
And now we have this nice header
component so we can import Header

30
00:02:12.449 --> 00:02:17.490
from ./Header.

31
00:02:17.490 --> 00:02:21.020
And then we can just replace
this with a Header like that.

32
00:02:23.660 --> 00:02:25.654
Something I haven't mentioned yet,

33
00:02:25.654 --> 00:02:29.841
notice that I'm always calling my personal
components with a capital letter.

34
00:02:29.841 --> 00:02:35.960
Not only is that convention, it's actually
required and enforced by React now.

35
00:02:35.960 --> 00:02:39.513
If you put it as div like this or
x something,

36
00:02:39.513 --> 00:02:44.523
it's going to literally output
an x something tag to the DOM.

37
00:02:44.523 --> 00:02:49.095
So it's assuming if it's lowercase, you
want that literally to be the tag name and

38
00:02:49.095 --> 00:02:51.972
if it's uppercase that's
a composite component or

39
00:02:51.972 --> 00:02:54.340
something that you've created, right?

40
00:02:55.650 --> 00:03:00.413
The one exception is sales passing
an anonymous component from the parent.

41
00:03:00.413 --> 00:03:08.730
It was this.props.passedInComponent
like that, right?

42
00:03:08.730 --> 00:03:11.010
Obviously, you can't
have dots in HTML tags.

43
00:03:11.010 --> 00:03:15.290
So it knows, okay it's actually
gonna be an anonymous component.

44
00:03:15.290 --> 00:03:16.850
That's the one exception to that rule.

45
00:03:19.440 --> 00:03:20.530
Anyway, make that a Header.

46
00:03:22.840 --> 00:03:27.060
So now if we come back in here,
refresh, our header is still there.

47
00:03:28.840 --> 00:03:33.390
But what's nice about having this
being a shared component is so,

48
00:03:33.390 --> 00:03:34.590
we wanted to make an improvement.

49
00:03:34.590 --> 00:03:38.010
Right now,
if you click the header nothing happens.

50
00:03:38.010 --> 00:03:40.760
Typically when you click the logo, people
expect you to go back to the home page.

51
00:03:40.760 --> 00:03:43.980
That's a generally accepted UI pattern.

52
00:03:43.980 --> 00:03:45.730
So, let's make that work.

53
00:03:45.730 --> 00:03:53.016
So here, we're going to import
a link from a react-router-dom

54
00:03:57.416 --> 00:04:01.621
&gt;&gt; Brian: And then what we're going to do

55
00:04:01.621 --> 00:04:05.178
here is inside of the h1,

56
00:04:05.178 --> 00:04:09.706
we're going to make this a link,

57
00:04:09.706 --> 00:04:14.530
which is going to go to slash.

58
00:04:14.530 --> 00:04:15.680
I guess you don't even have to do that.

59
00:04:15.680 --> 00:04:20.356
It just needs to be slash like that and
then close that.

60
00:04:29.754 --> 00:04:31.255
&gt;&gt; Brian: What did I do here?

61
00:04:31.255 --> 00:04:32.840
I'm out of order.

62
00:04:32.840 --> 00:04:33.921
Link goes inside.

63
00:04:33.921 --> 00:04:40.994
There we go.
&gt;&gt; Brian: So

64
00:04:40.994 --> 00:04:45.896
now if I save that and refresh over here,
now I click on the header and

65
00:04:45.896 --> 00:04:50.829
it'll take me back to landing.
&gt;&gt; Brian: So

66
00:04:50.829 --> 00:04:54.131
again that's one of the big advantages
of extracting components out and

67
00:04:54.131 --> 00:04:57.450
reusing them is you can upgrade one
thing and upgrade it across the site.

