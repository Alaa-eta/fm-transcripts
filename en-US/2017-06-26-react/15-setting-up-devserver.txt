[00:00:00]
>> Brian Holt: So far we've just been running this from file, right? If you look at my path up here.
>> Brian Holt: Let's get rid of all of that stuff.
>> Brian Holt: I was running it that way. So, in any case.
>> Brian Holt: Let's see so command open and I was just running this from,

[00:00:34]

>> Brian Holt: File, right? [COUGH] When you're using the file protocol I'm gonna talk from a Unix based perspective. I don't know how it works in Windows, but I imagine there are similar problems. There's just a lot of limitations, right? So you don't wanna be doing this very long for any sort of decent dev process.

[00:00:53]
It's useful for writing CSS and stuff like that, but much more than that, it falls apart pretty quickly. In other words, we need a static file server, right? Now we can bring in something like HTTP server. We could bring in like SimplePython, SimpleHTPServer from Python or PHP-S, there's a bunch of ways to do it.

[00:01:14]
However, there's a particular tool called webpack dev server that makes this a lot easier and it's gonna buy us a lot more too. So we're gonna go ahead and introduce that real quick. So I want you to go to your web pack config and there's really only one thing that we're gonna need to do.

[00:01:27]
We're gonna add one more object you can put it really anywhere just call it dev-server
>> Brian Holt: And we're gonna put in here a public path.
>> Brian Holt: So this is letting Webpack know where you anticipate your bundle being served from, so that whenever you go to serve files from that, it knows where to go grab those files and where they're being output to.

[00:02:06]
Now, for us, we have a public directory, and we're serving from public, right? That's just coincidence that they're the same thing, right? I can be serving from the public directory, but it could be called static assets on my server, right? So, this is the name of the path on the server, if that makes any sense, okay?

[00:02:29]

>> Brian Holt: So, now what I can do here, is I can come to my command line. And I'm gonna, if you're running Watch, stop your Watch. And then do ./node_modules .bin/webpack-dev-server.
>> Brian Holt: So now it's gonna run a server for me at localhost 8080, it's gonna sere all your output from /public.

[00:03:02]
But it's also gonna be doing the watch for you as well. So every time you save something it's going to be constantly recompiling your code. So, it's like watch and your static file rolled up into one thing. So, now if I go to local host ADAD, now [LAUGH] things are actually serving up the way they should, right?

[00:03:21]
That's where the image came from. So what I want you to do real quick it's important that we're gonna take a second and kind of emphasize, cuz people always miss this when I do this workshop. Go to your index.html.
>> Brian Holt: I'm gonna wait, make sure everyone's there.
>> Brian Holt: And then in front of public, in both places, both in the script and the link.

[00:03:46]
Please put a leading slash.
>> Brian Holt: It works now because we're on the homepage but as we start having different paths, that relative path is going to be incorrect. So we always want it to serve from /public.
>> Brian Holt: Did everyone put two slashes? [LAUGH] Okay, cool I believe you.

[00:04:13]
And if you ask me the question, I'm gonna throw something at you I swear. [LAUGH] Just kidding. I mean maybe, but don't test me. [COUGH] Cool.
>> Brian Holt: So this is awesome, right? The dev server, that's one of the really nice parts about Webpack, is that it ships with this dev server.

[00:04:35]
And we're only scratching the surface. In fact, I wanted to show you something else, too. So let's go back and reintroduce some sort of linting error. So constx=5 right, lintair, open your consul here, and you're gonna see right away some sort of error.
>> Brian Holt: But now if I get rid of it, save it, it's gone.

[00:05:03]
So again, another part of Webpack Dev Server, is every time the bundle refreshes, it's just gonna hard refresh your browser for you. Which is also pretty nice, right. Cuz you can just save it and then go over to your browser and it's gonna be reloaded. Now inevitably someone wants to ask me about module reload.

[00:05:22]
We're gonna do it in a little bit, not yet, hold your horses, we're not there yet.
>> Brian Holt: Okay, so, go ahead
>> Speaker 2: Someone asked about setting up all this tooling by yourself versus using something like Create React app?
>> Brian Holt: So, yes Create React app is a really, really cool piece of technology.

[00:05:48]
So again a lot of people's common complaint is that the tooling is so complicated and difficult to set up and difficult to understand. Like, I'm giving a three day workshop just so you can understand the tooling, right? That's about half the workshop. So something like Create React app totally obscures all this from you, right.

[00:06:04]
It just works,right. It just works straight out of the box. The trade off there is that you have no control over your tools, right. So Create React app is really a great way to scaffold up a project, get rolling with it. And then what Create React app does for you, is it allows you to eject all of the, the term is eject, it removes itself from the project and it gives you all of the configs, right.

[00:06:32]
So you're not locked in to using Create React app all the time, so it ejects the webpack config, the babel config, the eslyn config So it's kind of an all or nothing thing, right? You either use Create React App or you don't. [LAUGH] So the trade off here is if you're willing to give up that control, it's amazing and totally worth it because the product they set up for you is really, really great.

[00:06:55]
You can build large scale application on Create React App, no problem. They give you a great depth config, they give you a great production config. However, if you even need to change one thing, you have to eject it, right? So we're not using it today because I want you to touch the tools.

[00:07:13]
I want you to feel the tools I want you to feel why you have them. I want you to understand what each one of them does and how to set them up. So when you go to your individual companies and projects and clients, that you know yourself how to manipulate the tools and get the best performance and address all the needs for what you're doing.

[00:07:31]
So if you're interested in Create React app, I have another repo on my GitHub, that's a similar type project that we're doing right now. But it uses Create React app and it's much more focused on react and redux rather than on the tooling. A lot of this workshop focus is on the tooling.

[00:07:49]
You're welcome to go in and compare and contrast. That will be Open Source forever, so you're welcome to check it out.
>> Speaker 3: Yeah, I appreciate this cuz in the past it's been like npn start and it works and I don't even know how.
>> Brian Holt: Right, it's total black magic.

[00:08:08]
It's a total black box, right?
>> Speaker 3: Yeah.
>> Speaker 2: What is the repo for the example that you've got on here?
>> Brian Holt: It's nho.lt/redux
>> Brian Holt: I think I have some updating to do for it, but it should be 99% good.
>> Brian Holt: You build a pet adoption app, which is pretty fun.

