[00:00:00]
>> Brian: Now what I wanna show you is some of the debugging tools, right? So far we've been doing things like console.log, and kind of that sort of stuff, to do debugging. There's actually React's Dev Tools, which are super helpful. So I'm gonna go and open my console here.

[00:00:20]
And, yeah, do I need to install it for this? So they're available for Firefox, and they're available for Chrome. They're not available for Safari or Edge. If you really wanted to get creative you can probably make it work, cuz Chrome Dev Tools can target other browsers. I'll leave that to your discretion.

[00:00:41]
But we're gonna go pull up the React Dev Tools. And you can see here, the React Dev Tools, here in the Chrome Web Store.
>> Brian: I'm going to ahead and add that to Chrome.
>> Brian: Okay, and now I'm gonna go back to my app here and refresh the page.

[00:01:06]
I might have to restart my application.
>> Brian: Inspect.
>> Brian: Am I just missing it? It's the one right after Redux there. Last one, there it is. Okay, sorry. I'm blind. So now we have a tab here in our browser. It should appear relatively similar in Firefox, it will just be a tab on there.

[00:01:47]
We're going to open it. And now if you check this out, you can actually see the component hierarchy that our React components look like. The one thing you might notice here, is that there's some stuff that you may not expect to be there. For example, we have App, right?

[00:02:05]
That's the top level one, we know what that one is. BrowserRouter, we also put that one there. But BrowserRouter itself is rendering its own router components, so we see that here. That's rendering out a div, which is rendering out the switch, which we did. And then we have this lowercase component, right?

[00:02:22]
What is that? Well remember, in order to render search, we had that anonymous component that renders search. So let me show you what that looks like. Notice how this is a function here, right? That's the anonymous component. That's this component, right there, right? Okay, so that's the function that renders search, which is this.

[00:02:47]
And then you can go down, you can see all the various show cards, right? And you can actually dive into them. And you can see here, you can see all the props. You can see the key that it used. If I go up here to search, and I click on that, I can actually see the state that's interior to that.

[00:03:06]
What's kinda fun is, if it's state, I can actually just change it directly here in the dev tools. It's not super interesting, cuz I can just do it up here as well. But sometimes you have state that's a little bit more difficult to get at, so that's kind of useful.

[00:03:23]
You can't rewrite props, right? That makes sense, because this component wouldn't have access to that.
>> Brian: You can do things like Highlight Updates. So if you're kind of confused about how things are changing. Notice that my dev tools are flashing yellow when I delete and update things?
>> Brian: So that's pretty cool.

[00:03:51]

>> Brian: You can also even see that it's updating. You can see it flashing a little bit as I'm typing. So that's a neat little tool there.
>> Brian: Yeah, it works just like the browser. That if I highlight one of these, it's going to highlight it on the DOM as well.

[00:04:11]
And that's something that's even nice as well, right? So, [COUGH] let's say I'm really interested in this Stranger Things title right here. If I right-click on that and say Inspect Element, it's still gonna bring me here, right? But if I click React immediately after that, it's gonna also deep link me into there, in the React Dev Tools, as well.

[00:04:31]
So you can also do the right-click > Inspect Element workflow to get what you're looking for.
>> Brian: Cool. Something else that I wanted to show you. So let's say I'm really interested in this House of Cards component right here, but I wanna be able to interact with it directly.

[00:04:50]
I can click on it, so now it's highlighted in my React Dev Tools. I can go into the console and I can say $r, and that's going to refer to the component that I have highlighted, right? So this is a stateless component, and I can open it, and say props and things like that.

[00:05:13]

>> Brian: So let's deal with search, because that's a little bit more interesting as well. So if i go back to React, and I click here on search. So now I have $r again, it's gonna be set to search. So I can say, $r.setState,
>> Brian: And I wanna set it so searchTerm is, let's say, valley.

[00:05:43]

>> Brian: And then it's gonna call setState for me on that component. And in this particular case, that means that it's gonna search for Silicon Valley.
>> Speaker 2: How did you assign search to r? Sorry about that.
>> Brian: So if you go under React Dev Tools, and if I click on ShowCard here, right?

[00:05:59]
Or I click on Search. Whatever I have highlighted in my React Dev Tools is going to be available on console as $r.
>> Speaker 2: I see.
>> Brian: Just as a side, if you go into the Elements and I click on this, that's gonna be available as $0. That's always worked for Chrome Dev Tools.

[00:06:19]
So there's kinda mimicking them, that behavior.
>> Brian: So this is just a really, really useful way of debugging React.
>> Brian: Let's say I have a huge application, and I need to find all the ShowCards. You can actually use the search up here to search for various components. That's also useful to have.

[00:06:50]

>> Brian: That's new. I had never seen that before. So you can click this little target right there, and then you can kind of find the thing that you're looking for. So I'm looking for this, right? And it's gonna take me to that. That's pretty cool.
>> Brian: So, definitely don't leave home without it.

[00:07:08]

>> [LAUGH]

