WEBVTT

1
00:00:00.240 --> 00:00:03.360
&gt;&gt; Brian Holt: First thing we're going
to do here is we are going to define our

2
00:00:03.360 --> 00:00:08.628
DEFAULT_STATE.
&gt;&gt; Brian Holt: So that's going to be

3
00:00:08.628 --> 00:00:16.084
= searchTerm.
&gt;&gt; Brian Holt: So what we are going

4
00:00:16.084 --> 00:00:20.120
to migrate first to Redux is we are going
to take the searchTerm searching.

5
00:00:20.120 --> 00:00:22.412
And we're gonna migrate that into Redux.

6
00:00:22.412 --> 00:00:28.126
And then we're gonna make both landing and
search read from our Redux store for it.

7
00:00:28.126 --> 00:00:32.210
So const rootReducer =

8
00:00:32.210 --> 00:00:37.316
(state = DEFAULT_STATE,

9
00:00:37.316 --> 00:00:44.444
action).
&gt;&gt; Brian Holt: Okay,

10
00:00:44.444 --> 00:00:47.339
and I guess the other
thing is worth mentioning,

11
00:00:47.339 --> 00:00:50.547
I'm gonna show you how to
do this without flow first.

12
00:00:50.547 --> 00:00:55.990
Because flow makes redux
better in my opinion,

13
00:00:55.990 --> 00:00:59.130
but again, it's more levels
of complexity on top of it.

14
00:00:59.130 --> 00:01:00.774
So I wanna show you how
to do it without first.

15
00:01:03.663 --> 00:01:09.521
&gt;&gt; Brian Holt: So switch action.type and

16
00:01:09.521 --> 00:01:15.378
default, return state and

17
00:01:15.378 --> 00:01:22.005
export default rootReducer.

18
00:01:22.005 --> 00:01:25.080
So let's talk about
what we did here first.

19
00:01:25.080 --> 00:01:28.720
At the top level of every
store is one reducer, right?

20
00:01:28.720 --> 00:01:32.360
In that case it's the rootReducer,
and again

21
00:01:32.360 --> 00:01:37.720
when I say reducer it takes in state,
it takes in action and a return state.

22
00:01:37.720 --> 00:01:39.020
That is what a rootReducer does,

23
00:01:39.020 --> 00:01:44.600
it has no side effects to borrow from our
functional friends in their terminologies

24
00:01:44.600 --> 00:01:48.650
that means that I can call this 10
billion times with the same state and

25
00:01:48.650 --> 00:01:52.200
the same action, and I'm always gonna
get the same state out of it, right?

26
00:01:52.200 --> 00:01:55.346
So you don't wanna anything
happening around it,

27
00:01:55.346 --> 00:02:00.407
like you don't wanna have a counter here,
right, and say counter++, right?

28
00:02:00.407 --> 00:02:04.503
Cuz that would be a side effect, right,
that means, if I call it 10 billion times

29
00:02:04.503 --> 00:02:07.559
I'm gonna get different answers
every single time, right?

30
00:02:07.559 --> 00:02:09.110
I wanna to be the same thing.

31
00:02:09.110 --> 00:02:13.830
I want given the same input in I want
the same output out every single time.

32
00:02:15.490 --> 00:02:23.512
That is absolutely essential with Redux.
&gt;&gt; Brian Holt: Okay,

33
00:02:23.512 --> 00:02:25.930
so you're gonna have one rootReducer, and

34
00:02:25.930 --> 00:02:30.820
then inevitably that rootReducer is
going to dispatch to other reducers.

35
00:02:30.820 --> 00:02:34.740
So to borrow in flux terminology for
those of you that are familiar with flux,

36
00:02:34.740 --> 00:02:37.696
the rootReducer is pretty much
the dispatch function, right.

37
00:02:37.696 --> 00:02:40.260
It's gonna taken, and
then it's going to give that off

38
00:02:40.260 --> 00:02:43.770
to another reducer which is actually
gonna take care of the transformation.

39
00:02:43.770 --> 00:02:46.240
In this particular case we
have no other reducers yet.

40
00:02:47.290 --> 00:02:50.920
We're just instantiating our routeReducer,
okay?

41
00:02:51.970 --> 00:02:54.520
Two other things about the rootReducer
that you have to know.

42
00:02:54.520 --> 00:02:58.670
It needs to take care of the default state
which is what we've done here, right?

43
00:03:00.320 --> 00:03:06.360
This is ES6 to say, if state is undefined,
if this is called without state,

44
00:03:06.360 --> 00:03:10.390
then the default state is
going to be made state, right?

45
00:03:10.390 --> 00:03:13.220
So, if state is undefined,
then it's going to be this right here.

46
00:03:13.220 --> 00:03:15.500
The searchTerm would be an empty string,
okay?

47
00:03:17.120 --> 00:03:20.930
So it needs to take care
of the default state.

48
00:03:20.930 --> 00:03:24.719
Cuz the first thing that
redux is gonna do is call

49
00:03:24.719 --> 00:03:29.763
the rootReducer with no state
to get the initial state, okay?

50
00:03:29.763 --> 00:03:34.115
Okay, the second thing is is it needs to
handle actions that it doesn't know what

51
00:03:34.115 --> 00:03:36.090
they are, right?

52
00:03:36.090 --> 00:03:42.320
So in this particular case, if it doesn't
know what the action type is then,

53
00:03:42.320 --> 00:03:44.680
it's just going to return state, right?.

54
00:03:44.680 --> 00:03:48.610
So if I call this with some random action,
and it's just gonna say cool,

55
00:03:48.610 --> 00:03:49.470
I don't know what this is.

56
00:03:49.470 --> 00:03:51.910
Here have this state back, right?

57
00:03:51.910 --> 00:03:53.500
That's the second thing that it has to,

58
00:03:53.500 --> 00:03:57.784
has to do.
&gt;&gt; Brian Holt: Let's talk about what

59
00:03:57.784 --> 00:03:59.200
actions are for a second?

60
00:03:59.200 --> 00:04:03.465
Actions are objects, that's really at
the at the most base level what they are.

61
00:04:03.465 --> 00:04:10.215
They're gonna have a type which
is going to be a string, right?

62
00:04:10.215 --> 00:04:16.323
And they're gonna have a payload
which is going to be a thing, right?

63
00:04:16.323 --> 00:04:20.029
It's gonna be a string, it can be
a number, it could be a boolean and

64
00:04:20.029 --> 00:04:22.160
it could be another object.

65
00:04:22.160 --> 00:04:25.448
It can be any number of things,

66
00:04:25.448 --> 00:04:30.006
right?
&gt;&gt; Brian Holt: And

67
00:04:30.006 --> 00:04:32.260
furthermore, they don't
actually have to be anything.

68
00:04:32.260 --> 00:04:36.160
Nothing is enforcing it to look
like this it's just a really good

69
00:04:36.160 --> 00:04:37.170
idea to make it like this.

70
00:04:37.170 --> 00:04:41.300
This is called a Flux Standard Action,

71
00:04:41.300 --> 00:04:44.380
which is a defined way
of dispatching actions.

72
00:04:44.380 --> 00:04:50.120
So if you follow the Flux Standard Action
way of creating actions, then things

73
00:04:50.120 --> 00:04:53.860
that are created for flux and things that
are created for MobX and all these other

74
00:04:53.860 --> 00:04:58.060
kind of state management systems are also
going to work with your system, right?

75
00:04:58.060 --> 00:05:00.770
That's what the idea of using
Flux Standard Actions is for.

76
00:05:00.770 --> 00:05:03.560
That's why it's always called payload,
it's always called type.

77
00:05:03.560 --> 00:05:06.430
There's two others we're
not gonna worry about

78
00:05:06.430 --> 00:05:09.720
which is error which is
gonna be something else.

79
00:05:09.720 --> 00:05:13.947
And then, the last one is going to be
metadata which is gonna be an object

80
00:05:13.947 --> 00:05:17.475
of other metadata that you
wanna include with your action.

81
00:05:17.475 --> 00:05:20.632
Again, we're not gonna use these today,
we're just gonna use type and

82
00:05:20.632 --> 00:05:26.711
payload.
&gt;&gt; Brian Holt: Okay,

83
00:05:26.711 --> 00:05:33.747
so here we have basically the most
basic reducer that we can have, okay?

84
00:05:33.747 --> 00:05:40.940
Now I want you to go create
another file called store.js.

85
00:05:40.940 --> 00:05:42.206
Also my notes are wrong here.

86
00:05:47.794 --> 00:05:53.278
&gt;&gt; Brian Holt: Which is unfortunate,

87
00:05:53.278 --> 00:05:59.311
so you're going to import

88
00:05:59.311 --> 00:06:05.344
create store from Redux,

89
00:06:05.344 --> 00:06:11.103
and we are going to import

90
00:06:11.103 --> 00:06:17.697
reducer from ./reducer.

91
00:06:19.184 --> 00:06:24.075
&gt;&gt; Brian Holt: Reducers.
&gt;&gt; Brian Holt: Gonna say const store =

92
00:06:24.075 --> 00:06:30.284
createStore(reducer).
&gt;&gt; Brian Holt: And

93
00:06:30.284 --> 00:06:38.378
then we're going to export defaultStore.
&gt;&gt; Brian Holt: So

94
00:06:38.378 --> 00:06:43.080
there's not usually gonna be too
much to the store part of your app.

95
00:06:43.080 --> 00:06:46.080
If you're gonna do any
other configuration like

96
00:06:46.080 --> 00:06:49.330
introducing middlewares which
we'll talk about momentarily.

97
00:06:49.330 --> 00:06:50.400
That stuff is gonna live here.

98
00:06:50.400 --> 00:06:50.901
But usually,

99
00:06:50.901 --> 00:06:57.981
there's not a whole lot to store.
&gt;&gt; Brian Holt: Okay.

100
00:06:59.806 --> 00:07:02.281
&gt;&gt; Brian Holt: I want to create another

101
00:07:02.281 --> 00:07:09.594
file called actions.js.
&gt;&gt; Brian Holt: And

102
00:07:09.594 --> 00:07:16.010
what we're gonna do here
in actions is we're just

103
00:07:16.010 --> 00:07:21.512
gonna say export const SET_SEARCH_TERM

104
00:07:21.512 --> 00:07:26.369
= SE_SEARCH_TERM.
&gt;&gt; Brian Holt: So

105
00:07:26.369 --> 00:07:30.691
this is something that I do, and
I would say something that is common but

106
00:07:30.691 --> 00:07:33.585
not something that you
necessarily have to do.

107
00:07:33.585 --> 00:07:38.160
Rather than, this is gonna yell at you for
not making it.

108
00:07:40.180 --> 00:07:44.230
I'm just gonna do blah = blah.

109
00:07:44.230 --> 00:07:45.200
I don't know.

110
00:07:45.200 --> 00:07:49.420
Anyway, [COUGH] ESLint is gonna yell
at you for now because when you have

111
00:07:49.420 --> 00:07:53.280
one export, it wants it to be default,
right, and this is a named export.

112
00:07:54.750 --> 00:07:57.690
So I would say for now just ignore it.

113
00:07:57.690 --> 00:08:00.280
We'll fix it, because eventually
we'll have more than one action type.

114
00:08:02.320 --> 00:08:05.130
Okay, so, the reason why I do
this this way where I have

115
00:08:07.040 --> 00:08:10.425
these constants in this file is
we're going to be referencing

116
00:08:10.425 --> 00:08:13.920
SET_SEARCH_TERM in
multiple different places.

117
00:08:13.920 --> 00:08:17.380
So it's good to have that reading
from one particular source.

118
00:08:17.380 --> 00:08:18.590
You don't have to do it this way and

119
00:08:18.590 --> 00:08:23.100
in particular, when we start doing it with
flow, it will become mostly irrelevant.

120
00:08:23.100 --> 00:08:24.990
But I will still tell you that
I think this is a good idea.

121
00:08:26.700 --> 00:08:31.421
It is sometimes useful to have this
be a variable instead of it having,

122
00:08:31.421 --> 00:08:35.593
like, just referencing the string
literal setSearchTerm.

123
00:08:35.593 --> 00:08:39.159
So, I will say that this is a common
pattern so I encourage you to follow along

124
00:08:39.159 --> 00:08:42.360
and then later make a decision of
whether or not you wanna follow it.

125
00:08:44.150 --> 00:08:47.408
So this file is just gonna be a bunch
of constants being exported and

126
00:08:47.408 --> 00:08:51.554
that's it.
&gt;&gt; Brian Holt: And often in the same

127
00:08:51.554 --> 00:08:54.870
thing, they don't have to be,
I'm just really bad at naming things.

128
00:08:54.870 --> 00:08:59.162
And I'm even worse at naming things twice,
so,

129
00:08:59.162 --> 00:09:03.359
okay, make a new file
called actionCreators.

130
00:09:08.652 --> 00:09:10.465
&gt;&gt; Brian Holt: Okay, and

131
00:09:10.465 --> 00:09:15.102
import SET_SEARCH_TERM

132
00:09:18.867 --> 00:09:22.230
&gt;&gt; Brian Holt: From ./actions and

133
00:09:22.230 --> 00:09:28.581
then here we're gonna export a function

134
00:09:28.581 --> 00:09:33.252
setSearchTerm which takes in

135
00:09:33.252 --> 00:09:39.612
a searchTerm
&gt;&gt; Brian Holt: And

136
00:09:39.612 --> 00:09:44.699
it returns.
&gt;&gt; Brian Holt: Type

137
00:09:44.699 --> 00:09:51.336
is going to be setSearchTerm,
and the payload is going to be

138
00:09:51.336 --> 00:10:01.024
searchTerm.
&gt;&gt; Brian Holt: So again,

139
00:10:01.024 --> 00:10:04.170
it's gonna yell at you because it's gonna
wanna say hey you only have one export.

140
00:10:04.170 --> 00:10:06.280
There should be a default export.

141
00:10:06.280 --> 00:10:08.350
Just ignore it for
now cuz eventually we'll come back and

142
00:10:08.350 --> 00:10:12.176
have multiple exports.
&gt;&gt; Brian Holt: So again,

143
00:10:12.176 --> 00:10:14.850
the action creators is kind of optional.

144
00:10:14.850 --> 00:10:17.410
But I'm gonna say it's
not really optional.

145
00:10:17.410 --> 00:10:21.364
What an action creator does is it takes
in in this case it's a searchTerm.

146
00:10:21.364 --> 00:10:25.989
And then it's going to return
to you a well formatted action

147
00:10:25.989 --> 00:10:29.190
that can go straight into redux right.

148
00:10:29.190 --> 00:10:34.912
So given this action or given this input,
this is a valid action for it, right?

149
00:10:34.912 --> 00:10:37.683
And then this is what's
going to go into Redux,

150
00:10:37.683 --> 00:10:40.054
which is gonna hit the reducer, right?

151
00:10:40.054 --> 00:10:43.316
It's gonna switch on the action type,
right?

152
00:10:43.316 --> 00:10:47.775
And then based on that input, it's going
to update your store in some particular

153
00:10:47.775 --> 00:10:52.698
way.
&gt;&gt; Brian Holt: In fact

154
00:10:52.698 --> 00:10:56.654
lets go back here to reduces.js,
and lets actually make the reducer

155
00:10:56.654 --> 00:11:01.477
that's going to do the update here.
&gt;&gt; Brian Holt: So

156
00:11:01.477 --> 00:11:04.609
we're gonna have const setSearchTerm,

157
00:11:04.609 --> 00:11:10.610
which is going to be at reducer function
It's going to take in state and action.

158
00:11:12.920 --> 00:11:19.458
And given that
&gt;&gt; Brian Holt: It's

159
00:11:19.458 --> 00:11:23.851
going to return Object.assign,

160
00:11:23.851 --> 00:11:28.697
empty object state and another object

161
00:11:28.697 --> 00:11:33.550
was searchTerm : action.payload.

162
00:11:43.254 --> 00:11:44.489
&gt;&gt; Brian Holt: Okay?

163
00:11:44.489 --> 00:11:46.380
So Object.assign,
if you're not familiar with it.

164
00:11:47.790 --> 00:11:51.330
It's gonna basically do
a left merge of this object.

165
00:11:51.330 --> 00:11:53.610
So this is an empty object,
so it's a brand new object so

166
00:11:53.610 --> 00:11:55.180
we're not modifying state.

167
00:11:55.180 --> 00:11:59.920
This is key,
do not modify the original state, right?

168
00:11:59.920 --> 00:12:03.960
You need to return a new state,
not modify the old one.

169
00:12:03.960 --> 00:12:10.340
Even if you say like state.searchTerm and
then return that, don't do that either.

170
00:12:10.340 --> 00:12:13.386
That is like,
that doesn't count, don't do it.

171
00:12:13.386 --> 00:12:15.740
You're gonna run to a ton of problems.

172
00:12:15.740 --> 00:12:18.780
Mostly that your stuff won't update
because it's just gonna do a shallow check

173
00:12:18.780 --> 00:12:20.950
to see if the state has changed or not.

174
00:12:20.950 --> 00:12:24.300
And if it's the same object that's been
returned because it's a shallow check,

175
00:12:24.300 --> 00:12:26.330
it's gonna assume nothing changed.

176
00:12:26.330 --> 00:12:28.990
So, you must return new state.

177
00:12:28.990 --> 00:12:31.280
Like, let's emphasize that again.

178
00:12:31.280 --> 00:12:35.380
You must return a new object,
don't return the old one, okay?

179
00:12:36.600 --> 00:12:40.970
So, a new object, we're going to merge all
the state that was in there previously.

180
00:12:40.970 --> 00:12:43.661
We don't wanna override anything
that's already in state, right?

181
00:12:43.661 --> 00:12:44.914
And then the last thing,

182
00:12:44.914 --> 00:12:47.870
the only thing that we want to
override is the searchTerm.

183
00:12:47.870 --> 00:12:49.330
So this one's going to
be the most salient.

184
00:12:49.330 --> 00:12:51.840
So this is the one that's going to
actually end up being in there.

185
00:12:51.840 --> 00:12:55.230
So this is going to overwrite
whatever searchTerm that state had

186
00:12:55.230 --> 00:12:57.170
in this new object, right?

187
00:12:58.280 --> 00:13:03.100
Object that assigned, this came with ES 6,
so that's all that that does.

188
00:13:04.280 --> 00:13:08.680
So now, we've created this function here,
setSearchTerm, so

189
00:13:08.680 --> 00:13:11.510
now we need to go up right
into our rootReducer.

190
00:13:11.510 --> 00:13:15.602
Into it inside of the switch statement,
so here we're gonna say.

191
00:13:15.602 --> 00:13:22.554
Case SetSearchTerm.

192
00:13:22.554 --> 00:13:25.780
SET_SEARCH_TERM I just need
to import that as well.

193
00:13:25.780 --> 00:13:28.987
So up here at the top

194
00:13:28.987 --> 00:13:37.010
Import SET_SEARCH_TERM from ./ actions.

195
00:13:39.240 --> 00:13:42.460
This is what I was saying that you need
to use setSearchTerm in multiple places,

196
00:13:42.460 --> 00:13:45.010
that's why I like having one
constant to represent all of them.

197
00:13:46.580 --> 00:13:49.525
So you don't have a fat finger problem,
I have fat fingers, so

198
00:13:49.525 --> 00:13:55.509
that's why.
&gt;&gt; Brian Holt: And

199
00:13:55.509 --> 00:14:03.161
then here, we want to return
setSearchTerm with state and action.

200
00:14:12.658 --> 00:14:13.192
&gt;&gt; Brian Holt: Yep, yep,

201
00:14:13.192 --> 00:14:18.833
I think that's right.
&gt;&gt; Brian Holt: Okay,

202
00:14:18.833 --> 00:14:21.880
we're getting a Lint error here.

203
00:14:21.880 --> 00:14:24.130
And that's because this is a one-liner,
right?

204
00:14:24.130 --> 00:14:25.730
All we're doing is returning.

205
00:14:25.730 --> 00:14:29.647
So if you remember you can do implicit
returns, and with Airbnb's config rules

206
00:14:29.647 --> 00:14:37.851
you have to.
&gt;&gt; Brian Holt: And get

207
00:14:37.851 --> 00:14:43.203
rid of these ones down here at the end.
&gt;&gt; Brian Holt: So

208
00:14:43.203 --> 00:14:47.443
again all I did was make this a one liner,
this is now an implicit return.

209
00:14:51.907 --> 00:14:54.248
&gt;&gt; Brian Holt: Any questions about

210
00:14:54.248 --> 00:14:59.130
that?
&gt;&gt; Brian Holt: I

211
00:14:59.130 --> 00:15:03.808
feel like this is not working
the way that I think it should,

212
00:15:03.808 --> 00:15:09.142
js prettier user printWidth: 120,
that's what it says,

213
00:15:09.142 --> 00:15:13.909
that's usually what I have it at.
&gt;&gt; Brian Holt: Whatever,

214
00:15:13.909 --> 00:15:16.963
we'll just leave it.
&gt;&gt; Brian Holt: [COUGH] Like I wish this

215
00:15:16.963 --> 00:15:18.064
wrapped a little bit sooner,

216
00:15:18.064 --> 00:15:22.180
that's all I'm thinking.
&gt;&gt; Brian Holt: Nonetheless this

217
00:15:22.180 --> 00:15:28.404
works.
&gt;&gt; Brian Holt: Wonder

218
00:15:28.404 --> 00:15:30.378
if I can wrap this in parentheses and
it will honor that.

219
00:15:38.020 --> 00:15:39.260
&gt;&gt; Brian Holt: Nope, it won't let me.

220
00:15:39.260 --> 00:15:40.849
Okay, so that's the way it is.

221
00:15:43.010 --> 00:15:46.843
So, now we have this setSearchTerm
this is also a reducer right so

222
00:15:46.843 --> 00:15:49.703
the rootReducer delegates
to the setSearchTerm

223
00:15:49.703 --> 00:15:53.624
reducer I just wanted to make you
familiar with that terminology.

224
00:15:53.624 --> 00:15:56.242
A reducer is anything
that takes in state and

225
00:15:56.242 --> 00:15:59.720
action returns new state that's
the whole contract there

