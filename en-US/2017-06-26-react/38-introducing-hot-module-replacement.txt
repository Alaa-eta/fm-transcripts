[00:00:00]
>> Brian Holt: Now we're gonna be talking about Hot Module Replacement, and which is a technology that is really awesome with React due to the nature of how React. Apps are constructed, it lends itself to this technology really well. Whereas, previously other technologies like Angular and Amber, it was just impossible to detangle them enough to be able to do something like this.

[00:00:20]
I was still kind of a evolving and thrashing technology, but I feel finally comfortable now teaching it. Whereas previously for version one and version two, it was still kind of new enough that it wasn't worthy of teaching.
>> Brian Holt: So let's talk about what it actually is. I imagine many of you have done live reload before with CSS.

[00:00:42]
The idea being is that, as soon as you change your CSS, it'll compile your new CSS, and then it will inject it into your running browser, right. This is a really cool technology, because you can be working on a menu that you have to click once, twice, three times, to get into like some particular state of your app.

[00:00:59]
And, when you do live reload it will inject the CSS, you don't have to refresh the page. It will just rewrite all the styles for you, right. This is really nice, because you don't have to click, click, click to get to the back of that same state. It really cuts down on that feedback loop of being able to reiterate quickly on whatever user interfaces you're writing.

[00:01:17]

>> Brian Holt: Hot Module Replacement takes this one step further. Webpack is actually smart enough to see the graph of everything that what depends on what, right. So an example of that would be, if I come into Search.jsx, right, it also depends on ShowCard, right? But if I go into Landing, Landing has no coordination with ShowCard at all.

[00:01:39]
So if I modify for example ShowCard,, search is going to have to be replaced, right, because it also depends on that. But Landing can stay right where it is, right. So it's trying this big dependency graph. In fact, I think I actually have the little graph here in my notes maybe, right there, right.

[00:02:03]
So this is what I'm talking about. So if I replace ShowCard, I can actually just change ShowCard and leave everything else as is. Well, search is gonna have to replace as well. But landing can stay where it is. So, armed with this knowledge, webpack can say, cool, I'm gonna cut off this part of the graph, replace it, and leave the other parts of the graph in place, right.

[00:02:23]
So it's able to do this on the fly without refreshing your browser at all. Hence, Hot Module Replacement.
>> Brian Holt: It's really cool, I'm excited to teach it to you. It's not so difficult to set up. I'm not gonna say it's easy, but it's
>> Brian Holt: Not horrible. Let's go with not horrible, that's what I'm going with right now.

[00:02:44]
Okay,

