WEBVTT

1
00:00:00.760 --> 00:00:05.340
&gt;&gt; Brian Holt: I'm getting really
sick of this hash routing going on.

2
00:00:06.450 --> 00:00:09.290
So let's actually go make that work.

3
00:00:09.290 --> 00:00:16.778
Go back to client app, change HashRouter
in all three places here to, come on.

4
00:00:19.225 --> 00:00:20.363
&gt;&gt; Brian Holt: Change
that to BrowserRouter.

5
00:00:24.469 --> 00:00:25.818
&gt;&gt; Brian Holt: So import BrowserRouter and

6
00:00:25.818 --> 00:00:28.861
then the opening and
closing tag change that to BrowserRouter.

7
00:00:36.355 --> 00:00:38.974
&gt;&gt; Brian Holt: Okay now go to your webpack

8
00:00:38.974 --> 00:00:44.133
config
&gt;&gt; Brian Holt: And

9
00:00:44.133 --> 00:00:49.173
inside of the devServer, just add one more

10
00:00:49.173 --> 00:00:54.637
thing that says
historyApiFallback is true.

11
00:00:54.637 --> 00:01:00.097
This is basically telling your
devServer that if you don't

12
00:01:00.097 --> 00:01:05.021
recognize something just
send it down to the client.

13
00:01:05.021 --> 00:01:08.385
Or in other words, the client will
worry about the routing, I will not.

14
00:01:11.500 --> 00:01:12.683
&gt;&gt; Brian Holt: So
I just added line 13 here.

15
00:01:21.932 --> 00:01:24.500
&gt;&gt; Speaker 2: And
that allows browser router to work?

16
00:01:24.500 --> 00:01:27.290
&gt;&gt; Brian Holt: Yep,
if you don't put that then you're

17
00:01:28.840 --> 00:01:32.790
going to get a 404 as soon
as you go to search, right?

18
00:01:32.790 --> 00:01:35.430
Cuz it doesn't know to send
it down to the index at html.

19
00:01:39.960 --> 00:01:47.101
Now you've gotta restart your
server cuz you modified the.

20
00:01:47.101 --> 00:01:49.673
And there you go.
404s will fallback to index.html.

21
00:01:58.137 --> 00:02:00.448
&gt;&gt; Brian Holt: Question I'm
often asked is, like will,

22
00:02:00.448 --> 00:02:04.951
if 404s fall back to the index.html
what happens when I actually have a 404?

23
00:02:04.951 --> 00:02:07.760
And the answer to that question is that
your browser router will have to take

24
00:02:07.760 --> 00:02:08.486
care of it as well.

25
00:02:12.373 --> 00:02:16.154
&gt;&gt; Brian Holt: So in fact I think
we can just do that super quick.

26
00:02:16.154 --> 00:02:19.149
Not, this is in my notes so.

27
00:02:19.149 --> 00:02:21.718
Programming on the fly.

28
00:02:21.718 --> 00:02:28.331
So you get const
FourOhFOur = H1FourOhFour,

29
00:02:28.331 --> 00:02:35.273
and then you can do down
here the last thing route,

30
00:02:35.273 --> 00:02:41.223
and you just say component without a path,

31
00:02:41.223 --> 00:02:47.007
basically says if nothing else matches,

32
00:02:47.007 --> 00:02:49.672
then render this.

33
00:02:57.584 --> 00:03:00.510
&gt;&gt; Brian Holt: So now I should be able,
I'll go back in just a second, but let me.

34
00:03:00.510 --> 00:03:04.851
When I'm coding on the fly,
it's probably best to,

35
00:03:04.851 --> 00:03:07.751
then you need to do switch, right?

36
00:03:07.751 --> 00:03:10.019
Well, we're getting crazy now.

37
00:03:22.217 --> 00:03:24.918
&gt;&gt; Brian Holt: So we're gonna put
a component in there called Switch and

38
00:03:24.918 --> 00:03:26.331
I think this should work now.

39
00:03:35.894 --> 00:03:41.420
&gt;&gt; Brian Holt: [NOISE] Good,
okay so let's talk

40
00:03:41.420 --> 00:03:46.746
about what or what we did here.

41
00:03:46.746 --> 00:03:49.900
Okay, so couple of things happened.

42
00:03:52.510 --> 00:03:54.330
First thing we do is we switch
the browser router, right?

43
00:03:54.330 --> 00:03:57.350
So, if you look here our
URLs are now much better.

44
00:03:57.350 --> 00:04:00.978
They look like what we were to expect
when you go to /search it takes you to

45
00:04:00.978 --> 00:04:03.545
this page is supposed to
have stupid hash in there.

46
00:04:03.545 --> 00:04:07.859
This is also way more SCO friendly
10 billion times more SEO friendly,

47
00:04:07.859 --> 00:04:10.061
I believe that's an actual number.

48
00:04:12.047 --> 00:04:16.727
&gt;&gt; Brian Holt: The second thing we did
here, is we told webpack that whenever it

49
00:04:16.727 --> 00:04:22.620
does not recognize the URL, right cuz it
doesn't have a /search file to serve,

50
00:04:22.620 --> 00:04:25.841
it doesn't know about anything like that.

51
00:04:25.841 --> 00:04:31.470
So it, if you don't recognize
something just send it index.html.

52
00:04:31.470 --> 00:04:34.410
That's what this HistoryApiFallback is.

53
00:04:34.410 --> 00:04:37.693
This is probably not what you're
going to do in production.

54
00:04:37.693 --> 00:04:40.513
Definitely not what you're
going to do in production.

55
00:04:40.513 --> 00:04:43.230
Actually you're not going to run
dev server in production, so

56
00:04:43.230 --> 00:04:45.137
you're not going to do that in production.

57
00:04:45.137 --> 00:04:47.585
So this is a dev trick, okay?

58
00:04:47.585 --> 00:04:49.658
And then you're going to
go back to client app.

59
00:04:49.658 --> 00:04:52.626
I wanted to show you
what a 404 looks like.

60
00:04:52.626 --> 00:04:57.938
So we made this 404 component.

61
00:04:57.938 --> 00:05:02.930
And we told it to render, basically any

62
00:05:02.930 --> 00:05:08.210
time that nothing else is matched.

63
00:05:08.210 --> 00:05:11.150
However if we did not put
the switch component in,

64
00:05:11.150 --> 00:05:15.060
what the switch component does is
says render exactly one component.

65
00:05:17.690 --> 00:05:18.440
And never render two.

66
00:05:19.840 --> 00:05:21.640
So, then it's gonna go in order and

67
00:05:21.640 --> 00:05:25.250
notice on landing it matches
this one first, right?

68
00:05:25.250 --> 00:05:28.000
So then it doesn't even
look at the other ones.

69
00:05:28.000 --> 00:05:29.790
If I don't have that
switch component in there,

70
00:05:29.790 --> 00:05:31.170
it's gonna render both of them, right?

71
00:05:31.170 --> 00:05:37.590
Cuz they both technically match, this one
right here 404 matches everything, right?

72
00:05:37.590 --> 00:05:38.980
So you need the switch component to say,

73
00:05:40.140 --> 00:05:43.070
only render this when nothing else
matches, and make sure it's the last one.

74
00:05:45.330 --> 00:05:46.123
Any questions about router?

75
00:05:51.905 --> 00:05:53.415
&gt;&gt; Brian Holt: If there's
some more advanced and

76
00:05:53.415 --> 00:05:56.810
weird cases you can use with router but
to be honest with you this is most of it.

77
00:05:56.810 --> 00:05:58.945
I'm gonna show you the other kind of,

78
00:05:58.945 --> 00:06:03.625
other two harder things to do with router
which is making service side router work.

79
00:06:03.625 --> 00:06:10.120
Because If you don't do it correctly, you
end up writing your routes twice, right?

80
00:06:10.120 --> 00:06:12.440
Once in the server and once in the client.

81
00:06:12.440 --> 00:06:14.670
And as everyone knows that
writes any amount of code,

82
00:06:14.670 --> 00:06:18.900
if you try to keep two files in sync,
they inevitably fall out of sync, right?

83
00:06:20.630 --> 00:06:24.770
So it's really nice if we can make the
server side or the router here work both

84
00:06:24.770 --> 00:06:31.120
on the client on the server, which you
can, It is possible, we'll do that later.

85
00:06:31.120 --> 00:06:33.597
And then we'll also do code splitting,
so you can split on routes as well.

86
00:06:33.597 --> 00:06:36.669
So you can asynchronously
load those chunks.

87
00:06:36.669 --> 00:06:37.597
Yeah?

88
00:06:37.597 --> 00:06:42.665
&gt;&gt; Speaker 3: How do you comment
out a section of HTML, in JSX?

89
00:06:42.665 --> 00:06:47.161
&gt;&gt; Brian Holt: Yeah so, he's astutely
pointing out that, that does not work.

90
00:06:47.161 --> 00:06:48.522
So if you remember,

91
00:06:48.522 --> 00:06:53.411
anything between the curly braces
is a JavaScript expression, right?

92
00:06:53.411 --> 00:06:57.315
So if I wanted to comment out
this route right here, I'd do.

93
00:07:03.986 --> 00:07:04.502
&gt;&gt; Brian Holt: Right?

94
00:07:10.611 --> 00:07:15.464
&gt;&gt; Brian Holt: That's how you do block
comments in JavaScript is /star then star/

95
00:07:15.464 --> 00:07:16.224
to end it.

96
00:07:16.224 --> 00:07:18.230
And then we just put that
inside of curly braces, and

97
00:07:18.230 --> 00:07:20.473
anything between those two
things will be commented out.

98
00:07:25.161 --> 00:07:25.661
&gt;&gt; Brian Holt: That make sense?

99
00:07:32.887 --> 00:07:35.389
&gt;&gt; Brian Holt: The another thing you can
do which is pretty easy is you can just

100
00:07:35.389 --> 00:07:36.991
move it out, and then just comment it.

101
00:07:43.730 --> 00:07:48.982
&gt;&gt; Speaker 3: One note on that,
because I used my command/ editor comment.

102
00:07:48.982 --> 00:07:54.440
And it did that, exactly what you said,
but then the linter underlined it.

103
00:07:54.440 --> 00:07:57.409
And now that you said
that that is correct,

104
00:07:57.409 --> 00:08:00.391
I looked at what
the linter was telling me.

105
00:08:00.391 --> 00:08:02.937
The space is required after the asterisk.

106
00:08:02.937 --> 00:08:04.295
&gt;&gt; Brian Holt: Yep, like that?

107
00:08:04.295 --> 00:08:10.563
Yep, that Airbnb config is super strict.

108
00:08:10.563 --> 00:08:13.491
But it will save you bugs, I promise.

109
00:08:17.125 --> 00:08:17.732
&gt;&gt; Brian Holt: Other questions?

110
00:08:23.007 --> 00:08:25.067
&gt;&gt; Brian Holt: How do we feel so
far, is brain melting a little bit?

111
00:08:25.067 --> 00:08:26.827
Is it just a little mushy?

112
00:08:26.827 --> 00:08:31.276
It's a lot of content in
a short amount of time.

113
00:08:31.276 --> 00:08:33.340
&gt;&gt; Speaker 4: I do have one question.

114
00:08:33.340 --> 00:08:38.070
Will we be able to do dynamic routing?

115
00:08:38.070 --> 00:08:39.190
&gt;&gt; Brian Holt: In what sense?

116
00:08:39.190 --> 00:08:43.561
&gt;&gt; Speaker 4: So, let's say that we
were going to do translations or

117
00:08:43.561 --> 00:08:48.976
something like that, and then have
it in the URL have like English or

118
00:08:48.976 --> 00:08:52.981
Spanish like /en or /es or
something like that.

119
00:08:52.981 --> 00:08:54.650
&gt;&gt; Brian Holt: You can do it like that.

120
00:08:54.650 --> 00:08:55.201
&gt;&gt; Speaker 4: You can do it like that?

121
00:08:55.201 --> 00:08:58.354
&gt;&gt; Brian Holt: So if you've prefixed it
with a colon is saying this is a variable.

122
00:08:58.354 --> 00:09:02.409
We'll actually be doing this later when
we add our next route which is details.

123
00:09:02.409 --> 00:09:07.337
And now, so basically,
anything can match on this, right?

124
00:09:07.337 --> 00:09:10.605
You can give it regular expressions I
think to only match on certain things,

125
00:09:10.605 --> 00:09:12.812
like I think there is some
fanciness to go on there.

126
00:09:12.812 --> 00:09:13.339
&gt;&gt; Speaker 4: Okay.

127
00:09:13.339 --> 00:09:17.827
&gt;&gt; Brian Holt: It will then pass it
as a parameter to search, right?

128
00:09:17.827 --> 00:09:20.777
And then inside of search you can
switch on and do whatever you want.

129
00:09:20.777 --> 00:09:25.299
&gt;&gt; Speaker 5: People are just asking
to get your plugin for sublime,

130
00:09:25.299 --> 00:09:29.234
that's adding a little green and red dots.

131
00:09:29.234 --> 00:09:30.657
&gt;&gt; Brian Holt: Right here on the side?

132
00:09:30.657 --> 00:09:32.129
&gt;&gt; Speaker 5: Yeah.
&gt;&gt; Brian Holt: It's called Git Gutter.

133
00:09:32.129 --> 00:09:34.257
&gt;&gt; Speaker 5: Git Gutter.

134
00:09:34.257 --> 00:09:38.660
&gt;&gt; Brian Holt: It's one of my favorites.

135
00:09:38.660 --> 00:09:41.170
So it's probably super hard for
you guys to see.

136
00:09:42.460 --> 00:09:45.570
If you see that little
plus red right there.

137
00:09:46.570 --> 00:09:48.700
My theme is all sorts
of messed up right now.

138
00:09:48.700 --> 00:09:51.410
It's a lot bigger
typically on my computer.

139
00:09:51.410 --> 00:09:55.720
But that's a line that I
have modified I think,

140
00:09:55.720 --> 00:09:59.960
no I've deleted lines between
that since I last committed.

141
00:10:00.970 --> 00:10:01.940
Or if I add like.

142
00:10:03.970 --> 00:10:07.099
So you can see what the white
means I've added new lines.

143
00:10:09.240 --> 00:10:16.030
And then if I do, you'll see, whoa,
that's red, because it's not real.

144
00:10:21.260 --> 00:10:24.110
If you look down here where it says
the yellow square, I've modified it.

145
00:10:24.110 --> 00:10:25.615
So it, that actually might be useful for

146
00:10:25.615 --> 00:10:28.597
you to kinda follow along cuz you can see
what I've seen since I last committed.

147
00:10:28.597 --> 00:10:32.120
&gt;&gt; Speaker 5: And then they're also
saying in the terminal as well,

148
00:10:32.120 --> 00:10:34.194
you've got something for get.

149
00:10:34.194 --> 00:10:38.904
Like my ZSH get plugin or
something like that.

150
00:10:38.904 --> 00:10:42.021
&gt;&gt; Brian Holt: The,
my bash prompt, this thing?

151
00:10:45.254 --> 00:10:48.483
&gt;&gt; Brian Holt: They might be
talking about that brew list.

152
00:10:48.483 --> 00:10:53.954
Bash git prompt that's what it is.

153
00:10:57.565 --> 00:10:59.680
&gt;&gt; Brian Holt: So I'm using bash,
this isn't in ZSH.

154
00:11:01.130 --> 00:11:02.580
I was using fish before this but

155
00:11:02.580 --> 00:11:04.760
if I used fish no one would
understand what the hell I was doing.

156
00:11:06.120 --> 00:11:10.439
So we're sticking to the bash today, yeah.

157
00:11:10.439 --> 00:11:13.875
&gt;&gt; Speaker 4: Is there any known
disadvantages to using the hash router?

158
00:11:13.875 --> 00:11:19.904
&gt;&gt; Brian Holt: It's like really
SEO unfriendly in particular,

159
00:11:19.904 --> 00:11:23.930
so that's, that's part of it.

160
00:11:25.300 --> 00:11:28.270
It's just,
it's easier to set up server side.

161
00:11:28.270 --> 00:11:31.840
But once you set it up on the service side
to work with the client typically it's not

162
00:11:31.840 --> 00:11:33.410
a lot more work to keep it going.

163
00:11:33.410 --> 00:11:35.290
So it's just a little bit more front work.

164
00:11:36.660 --> 00:11:41.510
And it just makes for better looking
URLs which, it's just a better thing.

165
00:11:44.270 --> 00:11:48.380
Yeah, it makes deep linking better,
it's just, it's a better thing.

166
00:11:48.380 --> 00:11:48.890
You should do it.

167
00:11:50.200 --> 00:11:51.410
Because I said so.

168
00:11:51.410 --> 00:11:53.701
Just kidding, I don't know.
&gt;&gt; Speaker 6: I was gonna ask that exact

169
00:11:53.701 --> 00:11:54.969
same question.

170
00:11:54.969 --> 00:12:00.300
&gt;&gt; Brian Holt: Yeah,
better looking URLs, right?

171
00:12:02.750 --> 00:12:06.140
I mean, one of, one of the tests
that I ran at a former company

172
00:12:06.140 --> 00:12:09.020
was be found that if you have better URLs,
people can remember them.

173
00:12:10.100 --> 00:12:12.703
And so they'll share them, they'll
tweet them, all those sorts of things.

174
00:12:15.847 --> 00:12:18.710
&gt;&gt; Brian Holt: And if people see hashes
in there, they don't know what that mean.

