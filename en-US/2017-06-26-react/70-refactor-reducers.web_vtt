WEBVTT

1
00:00:00.270 --> 00:00:02.950
&gt;&gt; Brian Holt: What we're gonna do now
is we're gonna go refactor our reducers

2
00:00:02.950 --> 00:00:04.210
a little bit.

3
00:00:04.210 --> 00:00:06.930
And you're also probably
gonna be getting some

4
00:00:06.930 --> 00:00:10.480
flow typing errors here because it's
gonna say I can't tell what this is.

5
00:00:13.881 --> 00:00:16.970
&gt;&gt; Brian Holt: But
we're gonna do something kinda cool here.

6
00:00:16.970 --> 00:00:20.970
So I wanted to show you how to
write your own rootReducer.

7
00:00:20.970 --> 00:00:24.398
To show you that rootReducer is nothing
more than just taking an action and

8
00:00:24.398 --> 00:00:27.790
routing it to some other reducer,
like it's a pretty simple function.

9
00:00:30.020 --> 00:00:32.200
So it's really easy to write yourself.

10
00:00:32.200 --> 00:00:35.850
However, there's a function from redux
called combined reducers that will

11
00:00:35.850 --> 00:00:38.520
actually write this function for
you, so you don't have to go in and

12
00:00:38.520 --> 00:00:41.030
write that switch case for
every single thing.

13
00:00:41.030 --> 00:00:44.110
Furthermore, it's actually going to
silo each piece of your state into its

14
00:00:44.110 --> 00:00:46.180
own reducer,
which is pretty cool in my opinion.

15
00:00:47.660 --> 00:00:48.480
So let's go ahead and do that.

16
00:00:50.080 --> 00:00:56.594
Up here, we're going to import,
&gt;&gt; Brian Holt: combineReducers,

17
00:00:58.273 --> 00:01:00.093
&gt;&gt; Brian Holt: from redux.

18
00:01:06.817 --> 00:01:11.666
&gt;&gt; Brian Holt: Now what we're gonna do,
&gt;&gt; Brian Holt: We're gonna

19
00:01:11.666 --> 00:01:14.700
refactor setSearchTerm a little bit.

20
00:01:14.700 --> 00:01:18.940
First thing is we're gonna call
the reducer the same thing as the name of

21
00:01:18.940 --> 00:01:19.500
the state.

22
00:01:19.500 --> 00:01:23.670
So instead of being setSearchTerm,
we're just gonna call it searchTerm, and

23
00:01:23.670 --> 00:01:30.074
I'll show you why here in just a second,
&gt;&gt; Brian Holt: Okay.

24
00:01:30.074 --> 00:01:35.220
Then state is going to represent not the
whole state of your entire redux store,

25
00:01:35.220 --> 00:01:39.350
it's going to represent just
that piece of state, right?

26
00:01:39.350 --> 00:01:43.400
So the default state for this is not
going to be this object up here.

27
00:01:43.400 --> 00:01:44.870
In fact, you can just go ahead and
delete that.

28
00:01:46.610 --> 00:01:51.020
The default state of searchTerm is
going to be empty string, right.

29
00:01:52.902 --> 00:01:56.671
&gt;&gt; Brian Holt: Cuz now, this reducer is
only going to worry about searchTerm and

30
00:01:56.671 --> 00:01:57.980
nothing else, okay?

31
00:02:00.100 --> 00:02:03.020
Action, as you may have
guessed is an action,

32
00:02:03.020 --> 00:02:04.630
which is the type that we just created.

33
00:02:07.380 --> 00:02:10.230
&gt;&gt; Brian Holt: And then here,
we have to make this a whole method body.

34
00:02:14.473 --> 00:02:21.230
&gt;&gt; Brian Holt: And what this is gonna
do here, we can just get rid of that.

35
00:02:21.230 --> 00:02:25.580
So now, this reducer is going to get run
on every single action that happens.

36
00:02:25.580 --> 00:02:31.520
So you need to make sure and check that
it's the correct action for this reducer.

37
00:02:31.520 --> 00:02:39.071
So we're gonna say if
action.type === SET_SEARCH_TERM,

38
00:02:39.071 --> 00:02:46.150
then you're gonna return,
action.payload, right?

39
00:02:46.150 --> 00:02:50.308
Otherwise, you're just
going to return state.

40
00:02:57.930 --> 00:03:00.450
&gt;&gt; Brian Holt: Okay?

41
00:03:02.810 --> 00:03:05.404
So this is the new way that we're
going to be reducers from now on.

42
00:03:05.404 --> 00:03:09.820
We're gonna write these single
responsibility reducers.

43
00:03:09.820 --> 00:03:13.798
And we're not gonna have this like big
reducers that worry about multiple pieces

44
00:03:13.798 --> 00:03:14.860
of state all at once.

45
00:03:14.860 --> 00:03:19.902
This one's only going to worry about
searchTerm, and that's it, okay?

46
00:03:19.902 --> 00:03:22.220
You can actually just
delete all of reducer here.

47
00:03:23.580 --> 00:03:30.291
I'm gonna say const
rootReducer = combineReducers,

48
00:03:30.291 --> 00:03:37.893
what we wanna have here is
({searchTerm: searchTerm}).

49
00:03:37.893 --> 00:03:45.453
So, what this is saying here is we have
this piece of state called searchTerm.

50
00:03:45.453 --> 00:03:51.510
And the one reducer that worries about
searchTerm is called searchTerm, right?

51
00:03:51.510 --> 00:03:54.897
Now, the reason why I call this
searchTerm is so I can take

52
00:03:54.897 --> 00:03:59.556
advantage of a little ES6 nicety which
is if I have searchTerm: searchTerm,

53
00:03:59.556 --> 00:04:04.340
I can actually just say searchTerm,
and just cut it down to one thing.

54
00:04:04.340 --> 00:04:08.590
It's a new thing with the ES6.
It's just me being super lazy.

55
00:04:08.590 --> 00:04:10.470
That's the sum of the story here.

56
00:04:12.100 --> 00:04:16.384
That searchTerm right there is the exact
same thing as [searchTerm]:[searchTerm].

57
00:04:16.384 --> 00:04:20.190
So that's what combined reducers does for
you.

58
00:04:21.690 --> 00:04:27.074
I still see I have an error here,

59
00:04:27.074 --> 00:04:36.440
could not resolve a name,
&gt;&gt; Brian Holt: Could not resolve name.

60
00:04:46.519 --> 00:04:49.185
&gt;&gt; Brian Holt: Right, I got this wrong.

61
00:05:04.494 --> 00:05:06.414
&gt;&gt; Speaker 2: I think you
need an equal sign there.

62
00:05:06.414 --> 00:05:07.761
&gt;&gt; Brian Holt: Yeah,
I think you're right there too.

63
00:05:11.854 --> 00:05:12.930
&gt;&gt; Brian Holt: Okay, sorry.

64
00:05:12.930 --> 00:05:14.290
So go back to your types file.

65
00:05:17.690 --> 00:05:21.781
And you need to see ActionT =,
which is something I forget there.

66
00:05:21.781 --> 00:05:24.217
And then you also need the bar here and
the bar here.

67
00:05:24.217 --> 00:05:27.979
And that's just the notation for
declaring the types like this.

68
00:05:31.660 --> 00:05:33.883
Okay, and that should fix our problems.

69
00:05:33.883 --> 00:05:36.110
So that's what I just fixed right
there what I have highlighted.

70
00:05:42.540 --> 00:05:45.080
Cool, and now, go back to reducers

71
00:05:45.080 --> 00:05:45.600
&gt;&gt; Speaker 2: Sorry,
what are the bars for?

72
00:05:45.600 --> 00:05:48.100
Is that needed in generic types?

73
00:05:54.820 --> 00:05:57.570
&gt;&gt; Brian Holt: So go back to reducers.

74
00:05:57.570 --> 00:06:02.010
And now, hopefully, action will
be pleased with what you've done.

75
00:06:02.010 --> 00:06:02.868
Let's make sure.

76
00:06:13.173 --> 00:06:16.420
&gt;&gt; Brian Holt: Cool, so now, we have to
go fix something else but that's okay.

77
00:06:16.420 --> 00:06:17.930
We'll fix that here just momentarily.

78
00:06:17.930 --> 00:06:21.030
So, that is correct,
that is working as expected.

79
00:06:25.015 --> 00:06:26.650
&gt;&gt; Brian Holt: Yep, cool.

80
00:06:26.650 --> 00:06:28.320
So combineReducers is really great.

81
00:06:29.880 --> 00:06:34.241
What I like about it is now searchTerm
is very much siloed just to this

82
00:06:34.241 --> 00:06:35.703
particular reducer.

83
00:06:35.703 --> 00:06:39.140
And other reducers that don't care
about it, will not see it, right?

84
00:06:39.140 --> 00:06:42.860
So all of that object merging and
stuff that we were doing previously.

85
00:06:42.860 --> 00:06:45.540
combineReducers is just gonna do it for
you behind the scenes.

86
00:06:48.750 --> 00:06:51.999
&gt;&gt; Brian Holt: And you can actually use
combineReducers kind of in tandem with

87
00:06:51.999 --> 00:06:53.250
other things as well.

88
00:06:53.250 --> 00:06:58.170
Like say you do have a reducer
that needs to worry about multiple

89
00:06:58.170 --> 00:06:59.300
pieces of state all at once.

90
00:06:59.300 --> 00:07:04.650
You can write your own rootReducer
that takes care of those cases.

91
00:07:05.680 --> 00:07:06.970
And then at the bottom,

92
00:07:06.970 --> 00:07:13.380
use combineReducers to deal with all
the other single responsibility ones.

93
00:07:13.380 --> 00:07:16.080
So you can use combine reducers and
write your own reducers all at once,

94
00:07:16.080 --> 00:07:18.260
like that's an acceptable
way to go as well.

95
00:07:20.130 --> 00:07:24.260
So I typically use combineReducers, but

96
00:07:24.260 --> 00:07:27.740
I wanted you to see that it's not
very complicated what it does.

97
00:07:27.740 --> 00:07:29.040
So, cool.

98
00:07:32.540 --> 00:07:39.409
So, I think the last thing we have to
do is go set a type on Action Creators.

99
00:07:40.840 --> 00:07:44.870
So we have searchTerm here, and we just
need to tell it that, that is a string.

100
00:07:48.546 --> 00:07:53.082
&gt;&gt; Brian Holt: I'm still pissed off
about eslint, but we were getting there,

101
00:07:53.082 --> 00:07:54.350
in just a second.

102
00:07:55.350 --> 00:07:59.479
What I want to do is say
export default here, right?

103
00:08:00.750 --> 00:08:01.850
But that's not what we wanna do.

104
00:08:09.137 --> 00:08:13.140
&gt;&gt; Brian Holt: Okay, any questions about
combineReducers or how we typed redux?

105
00:08:17.517 --> 00:08:21.740
&gt;&gt; Brian Holt: That's really it for
redux itself, right?

106
00:08:21.740 --> 00:08:25.503
That's pretty much all
the surface area for Redux.

107
00:08:25.503 --> 00:08:26.846
We're gonna get in and

108
00:08:26.846 --> 00:08:31.521
augment some of the abilities of redux
when we get into asynchronous actions.

109
00:08:31.521 --> 00:08:33.220
But for now, that's it.

