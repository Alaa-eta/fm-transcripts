WEBVTT

1
00:00:00.570 --> 00:00:06.020
&gt;&gt; Brian Holt: So what I'm gonna do now
is I'm going to enable Sublime Linter for

2
00:00:06.020 --> 00:00:09.210
Sublime, which I already have enabled.

3
00:00:11.180 --> 00:00:15.318
But this is basically a tool that's
going to continuously run ESLint

4
00:00:15.318 --> 00:00:20.115
against my code, and it's gong to
highlight it if something's wrong with it.

5
00:00:20.115 --> 00:00:25.999
So if I say like const, or let x = 5.

6
00:00:31.462 --> 00:00:35.592
&gt;&gt; Brian Holt: So now if you look in here,
it might be kinda hard to see but

7
00:00:35.592 --> 00:00:38.100
I promise that it's there.

8
00:00:38.100 --> 00:00:42.420
There's a faint red
outline around the x and

9
00:00:42.420 --> 00:00:46.637
you can see the red dot
there in the gutter.

10
00:00:46.637 --> 00:00:51.329
So if I click on it, and this is almost
too small for me to read, but at the very,

11
00:00:51.329 --> 00:00:56.500
very bottom that infinitesimally small
text it tells me what my error is.

12
00:00:56.500 --> 00:00:59.420
So it says, x is assigned a value but
never used.

13
00:00:59.420 --> 00:01:03.610
So this should be a const instead.

14
00:01:03.610 --> 00:01:07.428
So one of things that ES lint is gonna
enforce on me is if you never reassign

15
00:01:07.428 --> 00:01:10.135
something it's gonna force
you to make it a const.

16
00:01:10.135 --> 00:01:14.505
So now if I change this
to const x equals five,

17
00:01:14.505 --> 00:01:18.415
it's still going to be an error because I

18
00:01:18.415 --> 00:01:23.040
never use it unless I
use console dot log(x).

19
00:01:23.040 --> 00:01:26.690
And then now, it's gone away,
cuz now I'm actually using it.

20
00:01:28.810 --> 00:01:35.810
You have the red here that's outlined
React, because this is undefined, right.

21
00:01:35.810 --> 00:01:37.772
It doesn't see anywhere
where React is defined.

22
00:01:39.823 --> 00:01:43.530
&gt;&gt; Brian Holt: And
then this console.log is outlined because,

23
00:01:43.530 --> 00:01:46.740
that's a warning said use console.log.

24
00:01:46.740 --> 00:01:49.020
Typically you don't wanna ship that to
production, that's why its a warning.

25
00:01:50.370 --> 00:01:58.267
And then this function here is a warning
because it wants a name, right.

26
00:01:58.267 --> 00:02:03.093
The reason why it forces you to put
a name is it makes stack traces

27
00:02:03.093 --> 00:02:06.018
much more useful if it has a name on it.

28
00:02:09.506 --> 00:02:11.087
&gt;&gt; Speaker 2: What was the sublime then?

29
00:02:11.087 --> 00:02:12.468
&gt;&gt; Brian Holt: It's called Sublime Linter.

30
00:02:14.233 --> 00:02:18.090
&gt;&gt; Brian Holt: So you have to install
two things for sublime specifically.

31
00:02:18.090 --> 00:02:23.079
You have to install a package
called Sublime Linter.

32
00:02:23.079 --> 00:02:29.376
And then you have to install another one
called sublime linter-contrib-eslint.

33
00:02:29.376 --> 00:02:35.048
So I guess I can do this to packages.

34
00:02:35.048 --> 00:02:37.201
So the first one is Sublime Linter, and

35
00:02:37.201 --> 00:02:40.082
the second one is sublime
linter contrib-eslint.

36
00:02:42.709 --> 00:02:46.158
&gt;&gt; Speaker 2: Got it, I'm using Adam so.

37
00:02:47.519 --> 00:02:48.827
&gt;&gt; Speaker 2: I'll skip that part.

38
00:02:48.827 --> 00:02:52.555
&gt;&gt; Brian Holt: There's Adam lint,
I think it was its called, right?

39
00:02:52.555 --> 00:02:53.501
Adam-lint.

40
00:02:53.501 --> 00:02:54.954
&gt;&gt; Speaker 2: Adam Linter?

41
00:02:54.954 --> 00:02:56.842
&gt;&gt; Brian Holt: I think it just adam-lint.

