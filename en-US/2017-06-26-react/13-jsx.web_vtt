WEBVTT

1
00:00:00.451 --> 00:00:04.715
&gt;&gt; Brian Holt: So let's keep going,
the last thing we did was eslint ignore to

2
00:00:04.715 --> 00:00:09.630
make sure that we don't get all these
crazy errors when we run yarn lint.

3
00:00:09.630 --> 00:00:10.750
Everything should be good now.

4
00:00:10.750 --> 00:00:15.370
I pushed up v3-2, I believed.

5
00:00:15.370 --> 00:00:17.110
Yeah, I did.

6
00:00:17.110 --> 00:00:19.180
So that should be good as well.

7
00:00:24.210 --> 00:00:25.460
Yeah, yeah, that's fine.

8
00:00:27.800 --> 00:00:32.907
So up to this point we've been
writing just plain vanilla JavaScript

9
00:00:32.907 --> 00:00:37.982
in our ClientApp.jsx.
&gt;&gt; Brian Holt: And

10
00:00:37.982 --> 00:00:42.486
we are gonna take this a step further now.

11
00:00:42.486 --> 00:00:46.252
So let's see,
let's get this back to where it was,

12
00:00:46.252 --> 00:00:53.440
function.
&gt;&gt; Brian Holt: So now we're gonna

13
00:00:53.440 --> 00:00:59.029
start writing this in terms of jsx
instead of using Vanilla React.

14
00:00:59.029 --> 00:01:03.451
So let's go ahead and refactor my title

15
00:01:03.451 --> 00:01:08.310
first.
&gt;&gt; Brian Holt: Yeah, let's do that.

16
00:01:11.230 --> 00:01:17.458
So what we're gonna do here, is instead
of having all of these ce stuff,

17
00:01:17.458 --> 00:01:21.965
actually you can just comment that out for
a second.

18
00:01:21.965 --> 00:01:26.125
And we're gonna say return div,

19
00:01:33.765 --> 00:01:34.745
&gt;&gt; Brian Holt: And,

20
00:01:39.385 --> 00:01:43.302
&gt;&gt; Brian Holt: Then inside that we'll put

21
00:01:43.302 --> 00:01:48.925
an h1 with props.title inside of it.

22
00:01:56.585 --> 00:01:57.233
&gt;&gt; Brian Holt: Okay,

23
00:01:57.233 --> 00:02:01.880
and then we'll get to
the style here momentarily.

24
00:02:03.030 --> 00:02:04.670
But you can see here this
looks a little peculiar.

25
00:02:04.670 --> 00:02:07.220
This isn't a string or anything.

26
00:02:07.220 --> 00:02:10.930
This is actually like writing HTML
directly into our JavaScript.

27
00:02:12.720 --> 00:02:15.230
This is JSX,
this is what I keep referring to as JSX.

28
00:02:16.990 --> 00:02:20.340
So basically, all JSX is gonna do for you.

29
00:02:20.340 --> 00:02:21.850
It doesn't extend JavaScript at all,

30
00:02:21.850 --> 00:02:27.230
other than adding this XML
like syntax into JavaScript.

31
00:02:28.810 --> 00:02:33.570
So we get to write basically,
the HTML that we want to show up,

32
00:02:33.570 --> 00:02:35.250
we just get to write that directly.

33
00:02:35.250 --> 00:02:37.790
The reason why there's rows is,

34
00:02:37.790 --> 00:02:40.830
if you look at this,
when we're doing this CE syntax,

35
00:02:40.830 --> 00:02:44.944
this create element syntax, we're writing
code that mimics our markup, right?

36
00:02:46.290 --> 00:02:48.010
So if you're writing code
that mimics you're markup,

37
00:02:48.010 --> 00:02:53.030
wouldn't it be nice if you could just
write the markup and not have to mimic it?

38
00:02:53.030 --> 00:02:57.744
It's kind of the general gist here is
we're writing the actual markup instead of

39
00:02:57.744 --> 00:03:00.810
writing the code that's
going to mimic the markup.

40
00:03:03.490 --> 00:03:05.766
So we put it in a div, right?

41
00:03:05.766 --> 00:03:09.115
This is just putting out
literally a div text, and

42
00:03:09.115 --> 00:03:12.325
this is getting compiled to the ce div,
right?

43
00:03:12.325 --> 00:03:15.000
So there's no real magic happening here.

44
00:03:15.000 --> 00:03:20.205
All this is going to end up being is,
pretty much this, right?

45
00:03:20.205 --> 00:03:26.015
That's all it's getting compiled out here.
&gt;&gt; Brian Holt: Now you might ask,

46
00:03:26.015 --> 00:03:28.800
look, okay, what about these curly braces?

47
00:03:28.800 --> 00:03:30.510
Well if I don't put these curly braces in,

48
00:03:31.760 --> 00:03:35.880
it's going to literally output
the string prop.title, right?

49
00:03:35.880 --> 00:03:38.600
Like literally, the string props.title.

50
00:03:38.600 --> 00:03:39.106
We don't want that.

51
00:03:39.106 --> 00:03:44.186
We wanted to put in, like what is inside
a prop.title, what does it represent.

52
00:03:44.186 --> 00:03:47.900
So the way you do that with JSX
is you just put curly braces.

53
00:03:49.350 --> 00:03:53.640
That's just saying, inside of here
is a JavaScript expression and

54
00:03:53.640 --> 00:03:54.660
I want you to output that.

55
00:03:57.610 --> 00:04:02.076
So I can put two uppercase here,
right, and that would work.

56
00:04:02.076 --> 00:04:06.816
So anything that can be basically on the
right side of an equal sign works here.

57
00:04:12.116 --> 00:04:14.817
&gt;&gt; Brian Holt: Okay, makes sense?

58
00:04:14.817 --> 00:04:20.197
So let's go ahead and
bring in this style as well.

59
00:04:20.197 --> 00:04:27.556
So what we do there is we say style.
&gt;&gt; Brian Holt: Okay,

60
00:04:27.556 --> 00:04:29.477
so this works the same way.

61
00:04:29.477 --> 00:04:32.497
We're gonna put curly braces here, right?

62
00:04:32.497 --> 00:04:35.841
And that's gonna represent some sort
of expression that's gonna be going on

63
00:04:35.841 --> 00:04:36.618
inside of there.

64
00:04:36.618 --> 00:04:41.484
Now let's say const style =

65
00:04:41.484 --> 00:04:47.978
{color: props.color}, right?

66
00:04:47.978 --> 00:04:51.298
It's gonna look something like that.

67
00:04:51.298 --> 00:04:54.600
And then we can put style right there.

68
00:04:54.600 --> 00:04:57.460
So this corresponds to that, right?

69
00:05:00.890 --> 00:05:05.526
Good so far?
&gt;&gt; Brian Holt: Now the question you might

70
00:05:05.526 --> 00:05:07.861
ask me is, why can't we just
put this straight in there?

71
00:05:07.861 --> 00:05:09.180
Well, you can.

72
00:05:09.180 --> 00:05:14.139
The reason why I show you this first is,
cuz people get really weirded out by

73
00:05:14.139 --> 00:05:17.380
seeing curly braces next to each other,
right?

74
00:05:17.380 --> 00:05:20.400
They think that the double curly brace
means something and it doesn't, right?

75
00:05:22.020 --> 00:05:25.284
The outer curly braced means
that it's an expression,

76
00:05:25.284 --> 00:05:28.140
the inner curly braces
mean JavaScript object.

77
00:05:28.140 --> 00:05:31.806
So that's why I wanted
to show you first that,

78
00:05:31.806 --> 00:05:35.481
that's why you can just
put styles like that.

79
00:05:35.481 --> 00:05:37.697
But I'm gonna leave it
as the object there and

80
00:05:37.697 --> 00:05:44.503
get rid of this.
&gt;&gt; Brian Holt: So

81
00:05:44.503 --> 00:05:51.892
now this return right here, and
this return right here are equivalent.

82
00:05:51.892 --> 00:05:56.245
To the point that, actually this is
getting transpiled to pretty much

83
00:05:56.245 --> 00:06:02.492
literally be this.
&gt;&gt; Brian Holt: Any questions about JSX so

84
00:06:02.492 --> 00:06:06.533
far?
&gt;&gt; Brian Holt: Makes

85
00:06:06.533 --> 00:06:10.532
sense?
&gt;&gt; Brian Holt: Okay?

86
00:06:13.912 --> 00:06:15.216
&gt;&gt; Brian Holt: So this will work,

87
00:06:15.216 --> 00:06:18.460
you can type a clean mix,
JSX with not JSX.

88
00:06:18.460 --> 00:06:22.781
I can't see why you would,
but it works, I promise.

89
00:06:22.781 --> 00:06:27.982
We're getting some linting errors
which we will address later.

90
00:06:27.982 --> 00:06:29.010
Don't worry about them for now.

91
00:06:32.430 --> 00:06:36.040
Okay, and what we're gonna do
here is change this to be.

92
00:06:39.810 --> 00:06:44.859
So let's do this.
&gt;&gt; Brian Holt: We're

93
00:06:44.859 --> 00:06:50.565
gonna do div id='"my-first-component".

94
00:06:58.192 --> 00:06:59.700
&gt;&gt; Brian Holt: Something
else that bears mentioning.

95
00:07:01.030 --> 00:07:05.070
So you see how this begins and
ends with a parenthesis?

96
00:07:05.070 --> 00:07:08.490
The reason why we do that is it just
makes it appear a little bit nicer,

97
00:07:08.490 --> 00:07:09.910
it makes the spacing more pleasant.

98
00:07:11.460 --> 00:07:14.450
If you don't put the parenthesis there,

99
00:07:16.440 --> 00:07:20.830
this return thinks it's ended,
cuz there's the hard return there.

100
00:07:20.830 --> 00:07:24.824
And so, it doesn't actually carry onto
the next line to finish the expression.

101
00:07:24.824 --> 00:07:27.560
So you put the parenthesis there
to let JavaScript know that,

102
00:07:27.560 --> 00:07:30.306
hey I'm not done yet,
you need to go to the next line, right?

103
00:07:30.306 --> 00:07:31.544
Does that make sense?

104
00:07:31.544 --> 00:07:34.944
But just so
you know this is just as valid.

105
00:07:41.344 --> 00:07:43.390
&gt;&gt; Brian Holt: Just looks really weird,

106
00:07:43.390 --> 00:07:44.044
right?

107
00:07:44.044 --> 00:07:49.366
In fact, I think if you,
nope, prettier let is stand.

108
00:07:49.366 --> 00:07:50.813
Sometimes prettier will just fix that for

109
00:07:50.813 --> 00:07:54.624
you.
&gt;&gt; Brian Holt: Prettier is

110
00:07:54.624 --> 00:08:00.104
a,
&gt;&gt; Brian Holt: JSX aware.

111
00:08:06.905 --> 00:08:08.461
&gt;&gt; Brian Holt: Yeah, so yeah,

112
00:08:08.461 --> 00:08:11.920
we have to finish working with this.

113
00:08:11.920 --> 00:08:16.965
Okay, so we finished div and so now we're
going to do these MyTitle components.

114
00:08:23.788 --> 00:08:28.926
&gt;&gt; Brian Holt: Let's see, Game of Thrones

115
00:08:28.926 --> 00:08:34.068
color equals YellowGreen.

116
00:08:48.028 --> 00:08:49.188
&gt;&gt; Brian Holt: Okay, and so

117
00:08:49.188 --> 00:08:55.197
this one was Stranger Things
&gt;&gt; Brian Holt: This

118
00:08:55.197 --> 00:09:00.879
one was House of Cards.
&gt;&gt; Brian Holt: And

119
00:09:00.879 --> 00:09:02.930
this one was, I don't know,
The Americans, or

120
00:09:02.930 --> 00:09:07.186
something like that.
&gt;&gt; Brian Holt: GreenYellow.

121
00:09:10.546 --> 00:09:11.888
&gt;&gt; Brian Holt: Peru, and

122
00:09:11.888 --> 00:09:14.726
how about burlywood?

123
00:09:14.726 --> 00:09:18.895
That's another good one,

124
00:09:18.895 --> 00:09:22.829
okay?
&gt;&gt; Brian Holt: So

125
00:09:22.829 --> 00:09:27.687
something else you're gonna
note here is MyTitle.

126
00:09:27.687 --> 00:09:31.982
We can treat it as if it was like
a it's a real HTML element, right?

127
00:09:31.982 --> 00:09:34.970
Despite the fact that it's
one that we've created.

128
00:09:34.970 --> 00:09:38.760
In React terms it's called
a composite component, right?

129
00:09:38.760 --> 00:09:39.540
It's a component made up

130
00:09:39.540 --> 00:09:43.374
of other components.
&gt;&gt; Brian Holt: And

131
00:09:43.374 --> 00:09:46.869
we get to treat it as if it
was a real HTML thing, right?

132
00:09:46.869 --> 00:09:49.989
And we can give it attributes
the same way, right?

133
00:09:49.989 --> 00:09:53.010
This one,
we're giving it an ID up here, right?

134
00:09:53.010 --> 00:09:54.379
This one, we're giving it a title here.

135
00:09:56.770 --> 00:10:00.212
Something else you might be tempted to
do is leave off the trailing slash,

136
00:10:00.212 --> 00:10:02.219
because that's technically valid html.

137
00:10:02.219 --> 00:10:04.239
It's not valid JSX.

138
00:10:04.239 --> 00:10:07.950
So you have to have that closing
slash if it's a self closing tag.

139
00:10:10.770 --> 00:10:18.229
The same things for like input, right?
&gt;&gt; Brian Holt: This

140
00:10:18.229 --> 00:10:21.190
is technically valid HTML, right?

141
00:10:21.190 --> 00:10:24.987
You don't actually have to
have that self-closing slash.

142
00:10:26.110 --> 00:10:27.622
For JSX you must have it, just so

143
00:10:27.622 --> 00:10:31.381
you know.
&gt;&gt; Brian Holt: But

144
00:10:31.381 --> 00:10:34.280
what else is kind of fun about it
is anything can be self-closing.

145
00:10:34.280 --> 00:10:39.912
So if you need a self-closing div,
feel free to do that.

146
00:10:39.912 --> 00:10:46.892
Any questions?
&gt;&gt; Brian Holt: Yeah?

147
00:10:46.892 --> 00:10:48.556
&gt;&gt; Speaker 2: Doug was just asking me,

148
00:10:48.556 --> 00:10:51.734
if JSX was used anywhere
else other than React.

149
00:10:51.734 --> 00:10:56.383
And someone else chimed in that you can

150
00:10:56.383 --> 00:10:58.930
use JSX with view.
&gt;&gt; Brian Holt: So

151
00:10:58.930 --> 00:11:02.500
it definitely was invented for React.

152
00:11:02.500 --> 00:11:06.760
It was invented by a team of
Facebook to mimic their XHP,

153
00:11:06.760 --> 00:11:08.200
I think is what it's called.

154
00:11:08.200 --> 00:11:10.620
Their internal PHP thing
that they were using.

155
00:11:11.730 --> 00:11:13.300
And they invented it to mimic that,

156
00:11:13.300 --> 00:11:16.450
and then it just kinda stuck,
because people found it very useful.

157
00:11:17.710 --> 00:11:20.790
JSX has then since been
separated from React, so JSX and

158
00:11:20.790 --> 00:11:23.830
React are not necessarily together.

159
00:11:23.830 --> 00:11:27.660
JSX has its own separate
standard that React then uses.

160
00:11:29.200 --> 00:11:33.120
And so, as it's been pointed out, view is
one of the places that it's being used.

161
00:11:34.770 --> 00:11:39.477
There's other things like Deco,
Deco, I don't know how to say it,

162
00:11:39.477 --> 00:11:41.890
that one uses it as well.

163
00:11:41.890 --> 00:11:44.930
Preact uses, like there's
a bunch of different languages.

164
00:11:44.930 --> 00:11:48.757
It's available for any language to use.
&gt;&gt; Speaker 3: Why don't you need

165
00:11:48.757 --> 00:11:52.663
the create element on this one?
&gt;&gt; Brian Holt: So

166
00:11:52.663 --> 00:11:55.372
why don't you need react.create elements?
&gt;&gt; Speaker 3: Yeah

167
00:11:55.372 --> 00:11:55.993
&gt;&gt; Brian Holt: That's what it's

168
00:11:55.993 --> 00:11:57.680
getting transpiled to.

169
00:11:57.680 --> 00:12:05.736
So this h1 is actually gets
through being run through bubble,

170
00:12:05.736 --> 00:12:12.577
it actually end up being
React.createElement h1,

171
00:12:12.577 --> 00:12:15.623
null, props.title.

172
00:12:15.623 --> 00:12:20.083
So, This is pre-Babel this is post-Babel.

173
00:12:20.083 --> 00:12:22.081
That make sense?
&gt;&gt; Speaker 2: Well I guess that's

174
00:12:22.081 --> 00:12:26.191
an attribute in that case.
&gt;&gt; Brian Holt: Yeah, yeah, it would be

175
00:12:26.191 --> 00:12:34.540
this.
&gt;&gt; Brian Holt: Well style right, whatever.

176
00:12:34.540 --> 00:12:35.858
So yes,
there would be a style object in there.

177
00:12:39.880 --> 00:12:41.236
&gt;&gt; Brian Holt: Cool, other questions,

178
00:12:41.236 --> 00:12:44.615
make sense?
&gt;&gt; Brian Holt: So

179
00:12:44.615 --> 00:12:47.870
we are getting some linting errors.

180
00:12:47.870 --> 00:12:52.174
It's asking for prop types and to that,

181
00:12:52.174 --> 00:12:56.868
I say let's tackle that
a little bit later.

182
00:12:56.868 --> 00:13:01.564
For now I'd like to move on, and then
we'll come back to tackle the prop types

183
00:13:01.564 --> 00:13:07.230
conundrum.
&gt;&gt; Speaker 2: Are you

184
00:13:07.230 --> 00:13:13.890
gonna finish making the bottom JSX?
&gt;&gt; Brian Holt: Yeah, good call.

185
00:13:13.890 --> 00:13:16.860
So I say create element down
here with my first component.

186
00:13:18.130 --> 00:13:23.736
You can say my first component like that.
&gt;&gt; Speaker 2: And

187
00:13:23.736 --> 00:13:28.579
remove the CE definition at the top?
&gt;&gt; Brian Holt: Yeah, cuz now it's gonna be

188
00:13:28.579 --> 00:13:34.206
erroring up, up there.
&gt;&gt; Speaker 4: We

189
00:13:34.206 --> 00:13:39.140
remove the reacting port as well?
&gt;&gt; Brian Holt: So that's a good question.

190
00:13:39.140 --> 00:13:42.330
The answer to that question
is anywhere you're using JSX,

191
00:13:42.330 --> 00:13:44.790
you have to import the React library.

192
00:13:44.790 --> 00:13:46.370
Because what is this
getting transpiled to?

193
00:13:47.710 --> 00:13:51.000
It's getting transpiled to
React.createElement, right?

194
00:13:51.000 --> 00:13:55.120
So it is being used, expect the fact
that you are not directly using it.

195
00:13:55.120 --> 00:13:56.940
Luckily you're a linter.

196
00:13:56.940 --> 00:14:01.936
So if I remove this,
it's gonna error out right here,

197
00:14:01.936 --> 00:14:07.042
and it says right here,
React must be in scope when using

198
00:14:07.042 --> 00:14:14.025
JSX.
&gt;&gt; Brian Holt: Good

199
00:14:14.025 --> 00:14:18.040
question.
&gt;&gt; Brian Holt: So

200
00:14:18.040 --> 00:14:21.180
a thing worth pointing out.

201
00:14:23.020 --> 00:14:27.883
This is only going to be true for
a little bit longer, but

202
00:14:27.883 --> 00:14:30.379
it is true now nonetheless.

203
00:14:30.379 --> 00:14:39.740
We'll just do like h2 doesn't work.
&gt;&gt; Brian Holt: So this doesn't work.

204
00:14:39.740 --> 00:14:42.599
We can't have two top level returns,
right?

205
00:14:44.200 --> 00:14:47.670
There needs to be one top level element
for every single React component.

206
00:14:47.670 --> 00:14:49.372
Now why is that?

207
00:14:49.372 --> 00:14:57.026
Well if you think about what
this is being transpiled to,

208
00:14:57.026 --> 00:15:03.890
it would be MyTitle equals ce div,
ce h2, right?

209
00:15:03.890 --> 00:15:06.670
That is making sense in JavaScript, right,

210
00:15:06.670 --> 00:15:09.973
you can have that being
assigned to two thing at once.

211
00:15:09.973 --> 00:15:12.111
So this doesn't work.

212
00:15:12.111 --> 00:15:15.108
However with React 16,

213
00:15:15.108 --> 00:15:21.430
which we are on 15.5 right now,
this will work.

214
00:15:21.430 --> 00:15:26.260
We will be able to return an array of
top level components, and that will

215
00:15:26.260 --> 00:15:31.930
work with what's called React Fiber which
is the new architecture React coming.

216
00:15:31.930 --> 00:15:34.200
It's kind of outside the scope of
what we wanna talk about today,

217
00:15:34.200 --> 00:15:37.118
but suffice to say, it is coming.

218
00:15:37.118 --> 00:15:40.961
And I really don't see it affecting
too much how I write code anyway, but

219
00:15:40.961 --> 00:15:48.786
eventually it will be possible.
&gt;&gt; Brian Holt: Cool,

220
00:15:48.786 --> 00:15:52.448
so what will happen typically
if you have something like this,

221
00:15:52.448 --> 00:15:55.764
where you have two things you
want to return as top level,

222
00:15:55.764 --> 00:15:58.412
you'll just wrap them both in a div,
right?

223
00:15:58.412 --> 00:16:01.490
So you'll see a lot of wrapping divs for
that reason.

224
00:16:01.490 --> 00:16:03.430
Does that make sense?

225
00:16:03.430 --> 00:16:07.500
Do div,

226
00:16:07.500 --> 00:16:11.573
right?

227
00:16:11.573 --> 00:16:12.911
That's typically the way
you would handle that.

228
00:16:19.293 --> 00:16:21.272
&gt;&gt; Brian Holt: So that kind of concludes

229
00:16:21.272 --> 00:16:26.453
what we wanted to talk about today
with kind of our intro to React,

230
00:16:26.453 --> 00:16:32.220
like bare bones, like actually just
messing around with React itself.

231
00:16:32.220 --> 00:16:34.700
And now were actually going to start
building an app together which

232
00:16:34.700 --> 00:16:38.760
we will build through
the rest of the two and

233
00:16:38.760 --> 00:16:40.490
a half days that we have left together,
right?

