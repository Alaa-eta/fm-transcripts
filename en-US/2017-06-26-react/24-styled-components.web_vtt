WEBVTT

1
00:00:00.420 --> 00:00:03.342
&gt;&gt; Brian Holt: We're going to be
talking about styled-components,

2
00:00:03.342 --> 00:00:05.830
which is kind of a fun thing.

3
00:00:05.830 --> 00:00:10.750
So, let's kind of go off on a little
bit of a tangent, tell a story.

4
00:00:10.750 --> 00:00:15.810
So, writing CSS

5
00:00:15.810 --> 00:00:21.320
can be all the way from
really great to really unfun,

6
00:00:21.320 --> 00:00:27.350
depending on what kind of CSS you're
writing and what you need to do with it.

7
00:00:27.350 --> 00:00:31.240
We've kind of come up with all these
different tools like Sas and Less and

8
00:00:31.240 --> 00:00:38.330
Post CSS that have kind of been helpers
to us to get this rather undecorated

9
00:00:38.330 --> 00:00:43.500
rule decoration language to be
a little bit more programmatic.

10
00:00:44.520 --> 00:00:51.630
You know, allows us to do all these
different kind of cool features with them.

11
00:00:52.760 --> 00:00:58.330
Plus some smart people came along and said
well it would be really nice if we could

12
00:00:58.330 --> 00:01:02.350
you know use JavaScript like a fully
torrent complete language not that

13
00:01:02.350 --> 00:01:04.980
actually CSS technically
is torrent complete.

14
00:01:04.980 --> 00:01:09.150
Let's not go there, but
we can use JavaScript and

15
00:01:09.150 --> 00:01:11.840
then we can manipulate all these
styles programmatically, right,

16
00:01:11.840 --> 00:01:14.710
and then rather than having to
do things like add a classes and

17
00:01:14.710 --> 00:01:18.560
subtract classes we can actually just
be directly manipulating the style.

18
00:01:18.560 --> 00:01:21.800
All these different things, right,
it's kind of opening the door for

19
00:01:21.800 --> 00:01:24.310
a lot of new and interesting paradigms.

20
00:01:24.310 --> 00:01:26.450
And things that were just
kind of barely exploring.

21
00:01:27.850 --> 00:01:34.590
So we ended up with things like Radium,
was one of the first big ones that came

22
00:01:34.590 --> 00:01:41.010
out, then Aphrodite was another big
CSS and JS library that came out.

23
00:01:41.010 --> 00:01:46.270
And some time afterwards, we landed
on this one called style components.

24
00:01:46.270 --> 00:01:50.580
Which I think is really fun to use,
for sure.

25
00:01:50.580 --> 00:01:53.870
And then there's two more that have
kind of come out that have also kind of

26
00:01:53.870 --> 00:01:55.380
captured the consciousness,

27
00:01:55.380 --> 00:01:59.610
which are Glamor and Glamorous,
which are both amazing.

28
00:02:00.780 --> 00:02:02.750
In fact, I know the authors
of all three of those, right?

29
00:02:02.750 --> 00:02:05.109
One of them has given in front of masters,
Kent C Dodds.

30
00:02:06.130 --> 00:02:08.240
He was instrumental in Glamorous.

31
00:02:09.290 --> 00:02:11.500
In fact, I think he literally
wrote the first version of it.

32
00:02:11.500 --> 00:02:17.890
So all really, really cool,
awesome ideas, and I'm a fan.

33
00:02:17.890 --> 00:02:20.670
However, it's become quite controversial.

34
00:02:20.670 --> 00:02:23.320
The reason being is that we're kind
of deviating from the way that

35
00:02:23.320 --> 00:02:25.250
the browser has previously worked, right?

36
00:02:25.250 --> 00:02:28.820
Previously, you put your link tag that had
a separate style sheet that was downloaded

37
00:02:28.820 --> 00:02:32.520
and then all things could be kind of
eventually run in parallel, right?

38
00:02:32.520 --> 00:02:38.900
We're very optimized for that path because
the web has been doing that for 20 years?

39
00:02:38.900 --> 00:02:40.660
I don't know how long has CSS been around?

40
00:02:40.660 --> 00:02:43.680
Probably longer than that.

41
00:02:43.680 --> 00:02:48.470
So yeah, we ended up with the CSS and

42
00:02:48.470 --> 00:02:52.200
JS thing, which definitely
has it's drawbacks, right?

43
00:02:52.200 --> 00:02:57.040
It's drawbacks, for example, stopped
components that you have these long CSS

44
00:02:57.040 --> 00:03:01.260
strings, which I'll show you here
momentarily, that get parsed twice, right?

45
00:03:01.260 --> 00:03:02.830
They get parsed in Java script.

46
00:03:02.830 --> 00:03:07.610
They output a style tag, which then
gets parsed by the CSS parser, right?

47
00:03:07.610 --> 00:03:09.430
You're paying double the parse cost.

48
00:03:09.430 --> 00:03:11.950
Which is not trivial, right?

49
00:03:11.950 --> 00:03:14.320
For sure it's definitely not trivial.

50
00:03:14.320 --> 00:03:17.360
We have deviated from the optimized path.

51
00:03:18.660 --> 00:03:22.550
So these are all things to keep in mind
when you're kind of selecting how you want

52
00:03:22.550 --> 00:03:25.390
to do CSS.

53
00:03:25.390 --> 00:03:29.460
However, what I'm really bullish on why
I think these are paths that are worth

54
00:03:29.460 --> 00:03:36.160
exploring, is the idea
of tying your styling

55
00:03:36.160 --> 00:03:40.810
to your components is very,
very promising to me.

56
00:03:40.810 --> 00:03:43.750
My favorite thing in the entire
world is deleting code, literally,

57
00:03:43.750 --> 00:03:46.140
like I just adore deleting code.

58
00:03:46.140 --> 00:03:49.120
Because when you're deleting code
that means things are moving forward.

59
00:03:49.120 --> 00:03:52.080
Now you went from having this
many things to think about,

60
00:03:52.080 --> 00:03:56.480
to having this many things to think about,
and that's just a huge win in my book.

61
00:03:56.480 --> 00:04:00.980
We're getting pretty good at deleting Java
script and we're being able to detect,

62
00:04:00.980 --> 00:04:04.440
this file's never included,
you might consider deleting this, right?

63
00:04:04.440 --> 00:04:07.970
There are ways to statically analyze
your Java script that's possible.

64
00:04:07.970 --> 00:04:10.290
However, how often do delete CSS?

65
00:04:11.630 --> 00:04:13.650
And most of you can be like, yeah.

66
00:04:13.650 --> 00:04:14.550
Pretty much never, right?

67
00:04:14.550 --> 00:04:18.750
Because it's really difficult to untangle
about like, this is use somewhere but

68
00:04:18.750 --> 00:04:20.090
this is not use somewhere, right?

69
00:04:20.090 --> 00:04:22.770
And you have this like these crazy
style sheets that just grow out to be

70
00:04:22.770 --> 00:04:23.340
huge, right?

71
00:04:24.690 --> 00:04:30.600
I remember recently LinkedIn, cCC I think,
was pushing like megabytes, right?

72
00:04:30.600 --> 00:04:31.770
Which is crazy.

73
00:04:31.770 --> 00:04:34.610
But it's totally understandable
how you get there, right?

74
00:04:34.610 --> 00:04:36.750
Because once you write a rule,

75
00:04:36.750 --> 00:04:39.180
it's really difficult to know
when you can pull that out again.

76
00:04:40.830 --> 00:04:43.650
We're getting some new tools from
Chrome dev tools, which are kind of

77
00:04:43.650 --> 00:04:48.080
letting us see like hey, you have this
CSS rule and I never saw it called.

78
00:04:48.080 --> 00:04:50.710
What's still difficult about that is
that might be called on another part of

79
00:04:50.710 --> 00:04:51.880
the website, right.

80
00:04:51.880 --> 00:04:54.086
Super difficult to tell where
things are coming from.

81
00:04:54.086 --> 00:05:01.970
All this tirade to say is that if you are
doing something like styled components,

82
00:05:01.970 --> 00:05:05.080
what styled components is, it's going to
bring that styling inside the component.

83
00:05:05.080 --> 00:05:09.740
So if you never include the component,
you never include the CSS, right?

84
00:05:09.740 --> 00:05:12.380
So if you delete the component,
you delete the CSS.

85
00:05:13.750 --> 00:05:14.380
Amazing.

86
00:05:14.380 --> 00:05:17.510
I'm so excited about this for that reason.

87
00:05:17.510 --> 00:05:20.810
And this is not the only way to
achieve this for sure, right?

88
00:05:20.810 --> 00:05:22.990
There's things like CSS modules.

89
00:05:22.990 --> 00:05:29.170
So, I talked about a little bit about
them in V2 if you're interested in that.

90
00:05:29.170 --> 00:05:34.229
But you can do something like,
import show,

91
00:05:34.229 --> 00:05:39.689
or public show card,
let's just do assume it's

92
00:05:39.689 --> 00:05:46.320
in the same directory,
./showcard.css, right?

93
00:05:46.320 --> 00:05:47.190
We don't have this set up,

94
00:05:47.190 --> 00:05:50.480
right now you'd have to do some more
stuff with web pack to get this to work.

95
00:05:50.480 --> 00:05:53.750
But what would be really cool about
this is that anywhere that you included

96
00:05:53.750 --> 00:05:54.600
this file.

97
00:05:54.600 --> 00:05:56.870
You would also pull in the CSS with it.

98
00:05:56.870 --> 00:05:59.740
And it's also cool because I know
as soon as I delete Showcard.jsx,

99
00:05:59.740 --> 00:06:03.860
I know I know I can also
delete Showcard.css.

100
00:06:03.860 --> 00:06:06.790
So CSS modules definitely
one path forward.

101
00:06:06.790 --> 00:06:08.710
And I would say maybe for

102
00:06:08.710 --> 00:06:12.420
production use right now at this
very moment, a better way to go.

103
00:06:12.420 --> 00:06:19.610
That's a Brian Holt opinion, so
take that with all the grains of salt.

104
00:06:19.610 --> 00:06:22.778
But I want to show you how
to do styled components.

105
00:06:22.778 --> 00:06:25.730
We're not going to do it all day, because
we'd spent a lot of time writing CSS,

106
00:06:25.730 --> 00:06:28.940
but we are going to do this much of it.

107
00:06:28.940 --> 00:06:36.625
Okay, so I want you to go up here and

108
00:06:36.625 --> 00:06:41.660
say import styled from

109
00:06:41.660 --> 00:06:47.500
styled dash components.

110
00:06:47.500 --> 00:06:50.390
And we are going to create
a couple kind of elements here.

111
00:06:50.390 --> 00:06:56.380
The first we are going to do is
called wrapper equals styled.

112
00:07:00.500 --> 00:07:03.720
&gt;&gt; Brian Holt: So
this syntax is new for a lot of people.

113
00:07:06.250 --> 00:07:09.130
So what this is right here,
I have styled and then I have a back tick,

114
00:07:09.130 --> 00:07:12.500
right, and
then I have another back tick back here.

115
00:07:12.500 --> 00:07:16.320
This is called a tagged template literal.

116
00:07:16.320 --> 00:07:19.970
It is valid JavaScript, this is not jsx,
this is not anything but

117
00:07:19.970 --> 00:07:21.120
pure JavaScript right here.

118
00:07:23.150 --> 00:07:29.023
In here, I can start writing some CSS,
just like you normally would.

119
00:07:32.740 --> 00:07:35.426
&gt;&gt; Brian Holt: Border two pixels solid,

120
00:07:39.820 --> 00:07:43.088
&gt;&gt; Brian Holt: and we'll do border-radius,

121
00:07:46.301 --> 00:07:50.350
&gt;&gt; Brian Holt: four pixels, margin bottom.

122
00:07:50.350 --> 00:07:55.240
25 pixels.

123
00:07:56.620 --> 00:07:57.370
Padding right.

124
00:07:57.370 --> 00:08:01.120
10 pixels.

125
00:08:01.120 --> 00:08:01.930
Overflow hidden.

126
00:08:05.920 --> 00:08:08.810
So you might be asking like
what what is this, right?

127
00:08:08.810 --> 00:08:11.290
Tagged template literals are still
not something widely in use.

128
00:08:11.290 --> 00:08:15.060
They came with ES6, right, so
this is already valid standard JavaScript.

129
00:08:15.060 --> 00:08:16.590
A bunch of browsers even still support it.

130
00:08:17.940 --> 00:08:20.460
What is happening here is we have
this template literal, right?

131
00:08:20.460 --> 00:08:25.294
We've seen these before, these are,
&gt;&gt; Brian Holt: what we were

132
00:08:25.294 --> 00:08:26.030
just using before.

133
00:08:26.030 --> 00:08:29.820
So if I said like const color equals,

134
00:08:31.820 --> 00:08:37.820
I could totally replace this with color,
right,

135
00:08:37.820 --> 00:08:41.580
so that would totally work here, because
it's just a normal template literal.

136
00:08:44.160 --> 00:08:46.279
I can do that right now, so
that's what that would like like.

137
00:08:48.040 --> 00:08:51.720
But this styled right here is a tag on
this template literal, which means it's

138
00:08:51.720 --> 00:08:56.870
going to be run through a function
that's getting called here, right?

139
00:08:56.870 --> 00:08:58.642
Or from styled components.

140
00:08:58.642 --> 00:09:01.040
So it's going to be fed
into styled components, and

141
00:09:01.040 --> 00:09:03.688
what this returns is a react component,
right?

142
00:09:03.688 --> 00:09:08.443
Sorry, it's styled.div.

143
00:09:08.443 --> 00:09:10.493
That's important.

144
00:09:13.051 --> 00:09:17.042
&gt;&gt; Brian Holt: So what this styled.div is
going to return to you a div that has been

145
00:09:17.042 --> 00:09:18.194
styled like this.

146
00:09:22.122 --> 00:09:23.090
&gt;&gt; Brian Holt: Which is pretty cool.

147
00:09:24.100 --> 00:09:26.320
So now, I have this wrapper component.

148
00:09:27.600 --> 00:09:33.690
So I'm going to replace this right here
with wrapper, and down here at the bottom.

149
00:09:37.920 --> 00:09:40.365
So instead of having
that encapsulating div,

150
00:09:40.365 --> 00:09:44.513
now I have this styled component that
I've pulled in from styled components.

151
00:09:56.396 --> 00:09:57.728
&gt;&gt; Brian Holt: Questions?

152
00:10:00.655 --> 00:10:03.192
&gt;&gt; Brian Holt: I guess it probably bears
mentioning if like what's actually

153
00:10:03.192 --> 00:10:05.990
happening, like where
the style's coming from.

154
00:10:05.990 --> 00:10:08.480
A lot of people just
assume it's in line style.

155
00:10:08.480 --> 00:10:11.770
It is not, because that's less efficient.

156
00:10:11.770 --> 00:10:14.480
What it's actually going to
do is it's going to create

157
00:10:14.480 --> 00:10:16.210
a style tag somewhere on the page.

158
00:10:16.210 --> 00:10:22.860
And then it's going to output
this stuff into that style tag.

159
00:10:22.860 --> 00:10:26.450
And then it's going to give this div
right here a class that matches that.

160
00:10:28.670 --> 00:10:29.180
Make sense?

161
00:10:31.250 --> 00:10:33.120
And we can look at how that works.

162
00:10:33.120 --> 00:10:35.968
So we're going to do one more, because we
need some style around our image too, so

163
00:10:35.968 --> 00:10:37.250
we're going to say.

164
00:10:37.250 --> 00:10:38.000
&gt;&gt; Audience 1: Quick question.

165
00:10:38.000 --> 00:10:40.100
&gt;&gt; Brian Holt: Yeah?
[COUGH]

166
00:10:40.100 --> 00:10:41.840
&gt;&gt; Audience 1: So we replaced

167
00:10:41.840 --> 00:10:44.400
the Dave ShowCard.

168
00:10:46.410 --> 00:10:50.390
What if I wanted to keep that
class name within the wrapper tag?

169
00:10:53.710 --> 00:10:54.310
Okay.

170
00:10:54.310 --> 00:10:56.748
&gt;&gt; Brian Holt: Then I would just add it.

171
00:10:56.748 --> 00:10:59.170
Yep.

172
00:10:59.170 --> 00:11:01.230
I think later we actually have to do that.

173
00:11:01.230 --> 00:11:02.400
I don't remember why.

174
00:11:02.400 --> 00:11:04.250
But, yeah.

175
00:11:04.250 --> 00:11:05.670
For now we'll leave it
off because I forgot why.

176
00:11:07.370 --> 00:11:11.360
&gt;&gt; Audience 2: So
is it Babble that's interpreting that and

177
00:11:11.360 --> 00:11:14.043
putting it into the CSS style tag?

178
00:11:14.043 --> 00:11:16.152
&gt;&gt; Brian Holt: It's magic.

179
00:11:16.152 --> 00:11:20.510
[LAUGH] No,
it's the style's components library.

180
00:11:20.510 --> 00:11:22.650
It has nothing to do with Babble.

181
00:11:24.000 --> 00:11:27.830
I don't know what actual mechanism
it's outputting into the DOM.

182
00:11:27.830 --> 00:11:29.099
I haven't looked that closely at it.

183
00:11:30.250 --> 00:11:33.900
But it is taking that and now putting it
into a style tag somewhere on your page.

184
00:11:35.690 --> 00:11:38.560
The nice thing slash gross thing
about CSS is it is universal.

185
00:11:38.560 --> 00:11:42.910
If you put a style tag anywhere
on the page it is all global.

186
00:11:42.910 --> 00:11:47.250
As long as it is on there somewhere,
it will work.

187
00:11:47.250 --> 00:11:49.980
&gt;&gt; Audience 2: Could you forsee almost
like a webpack tool in the future

188
00:11:49.980 --> 00:11:54.040
that would go through and
find all of the embedded styles and?

189
00:11:54.040 --> 00:11:54.900
&gt;&gt; Brian Holt: It's already happening.

190
00:11:56.000 --> 00:11:59.810
So, styles components doesn't
have one it's on their road map.

191
00:11:59.810 --> 00:12:05.360
I actually met with the creator,
like a week and a half ago in Austria.

192
00:12:05.360 --> 00:12:09.760
And, yeah, they're already, they just
released styles components two last week.

193
00:12:09.760 --> 00:12:10.600
Which is what we're using today.

194
00:12:12.650 --> 00:12:16.290
And I think for the three year,
something like that.

195
00:12:16.290 --> 00:12:19.938
They actually going to do something where
they separate it out into a separate style

196
00:12:19.938 --> 00:12:23.290
sheet which you can include and kind of
get into the more optimized cow path.

197
00:12:25.040 --> 00:12:28.710
I believe glamorous already does it.

198
00:12:28.710 --> 00:12:29.760
Glamorous or glamour and or

199
00:12:29.760 --> 00:12:35.890
both will allow you to extract that CSS
make a separate file and include it.

200
00:12:35.890 --> 00:12:37.500
Which is pretty cool.

201
00:12:37.500 --> 00:12:41.260
&gt;&gt; Audience 2: So then that replaces
sass or less then at that point?

202
00:12:41.260 --> 00:12:42.030
&gt;&gt; Brian Holt: Yep.
Totally.

203
00:12:42.030 --> 00:12:42.950
What's cool about this too,

204
00:12:42.950 --> 00:12:46.290
it automatically gets run through
pre fixer, auto pre fixer.

205
00:12:49.170 --> 00:12:51.767
Which is really nice, so
you can just do like display flex, and

206
00:12:51.767 --> 00:12:52.703
then forget about it.

207
00:12:55.263 --> 00:13:02.450
&gt;&gt; Brian Holt: So I do one more for our
image tag which is going to be styles.img.

208
00:13:02.450 --> 00:13:06.904
As you may have guessed, style.tag is how

209
00:13:06.904 --> 00:13:11.190
you create that particular type of tag and
they have everything that's valid CSS.

210
00:13:12.490 --> 00:13:13.743
Sorry valid html.

211
00:13:13.743 --> 00:13:20.202
Width: 46%; float: left; and
margin-right: 10 pixels.

212
00:13:20.202 --> 00:13:27.396
If there are things that you
like in SaaS like lighten and

213
00:13:27.396 --> 00:13:31.683
darken and some of those things,

214
00:13:31.683 --> 00:13:36.290
there's a library called Polish.

215
00:13:37.900 --> 00:13:42.320
Which is a partner that goes
with styled components.

216
00:13:42.320 --> 00:13:44.070
That will do things like lighten and
darken and

217
00:13:44.070 --> 00:13:46.790
some of those other
SASS specific features.

218
00:13:48.860 --> 00:13:50.100
Okay, so now we have image here.

219
00:13:50.100 --> 00:13:55.460
I'm just going to change this image
right here from img to image.

220
00:13:56.550 --> 00:13:58.170
Everything else can stay exactly the same.

221
00:13:59.280 --> 00:14:03.140
So now if we save that, we come back here.

222
00:14:05.430 --> 00:14:06.630
This looks like it's mostly working.

223
00:14:06.630 --> 00:14:10.780
This doesn't look as nice
as it was supposed to.

224
00:14:13.800 --> 00:14:16.530
That's nice.
That's what I was going for.

225
00:14:18.070 --> 00:14:24.270
Well, after that at the next break I'll
figure out why those CSS went wrong.

226
00:14:24.270 --> 00:14:27.880
But this should look a little bit nicer.

227
00:14:30.330 --> 00:14:34.623
&gt;&gt; Audience 3: Is there supposed to be an
actual data directly under the search one.

228
00:14:34.623 --> 00:14:35.221
&gt;&gt; Brian Holt: Damnit,

229
00:14:35.221 --> 00:14:39.040
you know I think I messed that up
last time I used this as well.

230
00:14:39.040 --> 00:14:45.924
Yeah, then you will see it div here.

231
00:14:45.924 --> 00:14:49.910
[BLANK AUDIO] Yep,

232
00:14:49.910 --> 00:14:54.580
hey it looks all nice now.

233
00:14:54.580 --> 00:14:58.130
[LAUGH] So
you just need an extra div down here.

234
00:15:01.170 --> 00:15:01.700
Thanks friend.

