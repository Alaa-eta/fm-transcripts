[00:00:00]
>> Brian: We're going to fix our tests cuz we broke them yet again. So I want you to go ahead and open search.jsx.
>> Brian: We have a big problem here, in fact, I'm gonna show you just to prove that if I run yarn test here,
>> Brian: It's gonna, I think all of them fail.

[00:00:19]
Yep, total failure.
>> Brian: For various reasons you can see all, it's gonna give you the stack trace up there, but I'll explain to you why. The first thing that kind of sucks with Redux and integrating with Connect, is what are we actually exporting here? We're not actually exporting search, right?

[00:00:41]
Down here at the bottom. We're exporting a connected search. So let me demonstrate to you what I'm talking about using the DevTools. If I inspect here, I go into React. Notice, let's see, here I have search, right? But what's the component above it? It's a connected search, right?

[00:01:08]
It's a component that wraps search. And that's what connect returns. It returns a connected search, right? So we're not at, this component inside of search.spec.jsx that we're importing right here is connected search. Which means this search depends on Redux, which is kind of a problem for us to test.

[00:01:31]
Because I don't wanna bring in Redux every time I wanna test this component. I wanna test search, I don't wanna test Redux. So there's a couple ways of mitigating this. I'm gonna show you kind of one of the easier ways. So come back to search.jsx, really quick. Down here we're gonna have export default connect and that's totally fine.

[00:01:54]
But what we're gonna do here is we're going to say, export const Unwrapped = Search. The only place that we're ever going to use this is for testing purposes. But we're just going to export an unwrapped version of it and that's going to be called search. So now if we go back to search.spec.jsx, we can come in here and say import Unwrapped.

[00:02:30]

>> Brian: And if you wanna make it a little bit more succinct in the name you can say as UnwrappedSearch.
>> Brian: That's how you do it, like if I just say unwrapped right here it would be called unwrapped. But I wanna make it a little bit more accurate so I'm gonna call as UnwrappedSearch.

[00:02:49]
That's how you do that.
>> Brian: Okay.
>> Brian: Now with unwrapped search, I can just call this unwrapped search. And we're also are going to have to give it a search term because it depends on that now.
>> Brian: So let's comment these tests out first. So I'm gonna say xtest here, not comment them out but, stop running them.

[00:03:25]
And I think,
>> Brian: This should work now, if you say yarn test. I'm gonna stop my API server and close it.
>> Brian: So our snapshot kinda got updated here, right? Before we used to have header actually embedded into search, we changed that, so now it's a different component that's a connect header, right?

[00:03:54]
That's fine, that's what we expect. So we're gonna run this again as yarn test:update.
>> Brian: And now, we have a passing test, right? We fixed one of them. So, let's go fix another one. Same kind of story here, we're gonna say UnwrappedSearch.
>> Brian: And this is going to be,

[00:04:24]

>> Brian: Search term equals blank.
>> Brian: Our searchTerm rather.
>> Brian: And make that test again so it will run. Let's go make sure that that one works. So we're gonna say yarn test again.
>> Brian: Two passed, halfway there.
>> Brian: So now we wanna test this one, and this one's a little bit tougher to test.

[00:05:07]
There's a couple things that we could do here. We could test this. And rather than doing, kind of going through the process and simulating the event and all that kind of stuff. We could try that. You could totally just do UnwrappedSearch here and say searchTerm{searchWord}, then we wouldn't have to do this simulate business.

[00:05:46]

>> Brian: I think that should for the most part work.
>> Brian: So let's see if that works. I did not, I did, okay? And so this works, right? If you're happy with that test, and you don't actually wanna test these interactions, you just want to test if you give it a search, whether it renders the right amount of cards.

[00:06:10]
Cool, this totally works.

