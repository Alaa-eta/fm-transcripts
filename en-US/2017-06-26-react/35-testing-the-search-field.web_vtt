WEBVTT

1
00:00:00.390 --> 00:00:03.560
&gt;&gt; Brian: So now we have two passing
tests, right, and let's go ahead and

2
00:00:03.560 --> 00:00:06.170
make our third test which is gonna
a little bit more involved but

3
00:00:06.170 --> 00:00:09.010
it's gonna show you some of the cool
stuff you can do with Jasmine.

4
00:00:09.010 --> 00:00:11.380
Well and jest actually if that matter.

5
00:00:14.220 --> 00:00:16.160
So we're gonna have a search word here,

6
00:00:16.160 --> 00:00:20.020
this is testing exactly what I was talking
about earlier that if I put Black here,

7
00:00:20.020 --> 00:00:21.810
that I get Black Mirror and
Orange Is the New Black.

8
00:00:21.810 --> 00:00:26.410
So I'm going to say const
search word equals black.

9
00:00:28.860 --> 00:00:33.838
Okay, I'm going to do

10
00:00:33.838 --> 00:00:38.296
component.find.

11
00:00:38.296 --> 00:00:39.450
Did I not update this?

12
00:00:44.539 --> 00:00:46.508
&gt;&gt; Brian: No, this is fine, okay.

13
00:00:46.508 --> 00:00:50.804
Component.find input.simulate, so

14
00:00:50.804 --> 00:00:55.358
I'm gonna simulate an event on the input.

15
00:00:55.358 --> 00:00:59.929
Before I move on, something I did wanna
talk about here, so I did component.find

16
00:00:59.929 --> 00:01:04.436
showcard here so that's one of the cool
things about enzyme is you can find either

17
00:01:04.436 --> 00:01:08.769
with like CSS selectors right which is
what we're going to do here with this.

18
00:01:08.769 --> 00:01:12.339
Or you can actually do it with
reactive components you can say hey,

19
00:01:12.339 --> 00:01:15.464
I expect this reactive component
to be found there which,

20
00:01:15.464 --> 00:01:17.920
I think is pretty cool right so
it works both.

21
00:01:19.960 --> 00:01:23.710
For searching for
shallowly rendered react components,

22
00:01:23.710 --> 00:01:25.200
which is why we import ShowCard up here.

23
00:01:26.440 --> 00:01:31.961
Okay, so now we're gonna stimulate
an event, it's going to be a change event.

24
00:01:31.961 --> 00:01:38.756
And we're gonna give it the event
that we want it to pass,

25
00:01:38.756 --> 00:01:45.850
which is going to be event,
target, value, search word.

26
00:01:50.063 --> 00:01:54.735
&gt;&gt; Brian: Right, this is the event that
we want to happen on the input, right?

27
00:01:54.735 --> 00:01:55.688
Does that makes sense?

28
00:01:58.061 --> 00:02:01.841
&gt;&gt; Brian: So if we go look at our input
here in search.jsx, we have this input,

29
00:02:01.841 --> 00:02:06.180
this is what it's targeting, and
we want to trigger this on change handler.

30
00:02:06.180 --> 00:02:07.540
That's the goal here.

31
00:02:09.230 --> 00:02:14.144
So, this is as if the user had
typed in black into the search box,

32
00:02:14.144 --> 00:02:17.522
that's what line 19 is currently doing.

33
00:02:21.290 --> 00:02:25.591
&gt;&gt; Brian: Okay, next thing we're
gonna do is const showCount

34
00:02:25.591 --> 00:02:30.047
=
&gt;&gt; Brian: And

35
00:02:30.047 --> 00:02:34.920
what we're gonna do, I'm just
gonna kinda shortcut this for you.

36
00:02:36.050 --> 00:02:41.920
We want it to do this, this particular
thing right here, where it's

37
00:02:43.970 --> 00:02:47.020
trying to find that we wanted
to do this filter right here.

38
00:02:48.290 --> 00:02:50.250
So I'm just gonna copy and
paste this right now.

39
00:02:56.898 --> 00:02:59.985
&gt;&gt; Brian: Typically you don't wanna
duplicate logic in your test,

40
00:02:59.985 --> 00:03:01.780
that's a bad idea.

41
00:03:01.780 --> 00:03:05.055
So what I would normally do, is I would
abstract this out to a module and

42
00:03:05.055 --> 00:03:08.250
then test this module to
make sure that it worked.

43
00:03:08.250 --> 00:03:11.415
And then after I was assured
that that test module worked,

44
00:03:11.415 --> 00:03:13.492
then I would bring that into my tests.

45
00:03:13.492 --> 00:03:16.253
That's not really a super useful exercise,
so I'm just gonna copy and

46
00:03:16.253 --> 00:03:19.060
paste this, but I'm telling you that
this particular thing that we're

47
00:03:19.060 --> 00:03:20.505
doing right now is kind of a bad idea.

48
00:03:33.763 --> 00:03:43.308
&gt;&gt; Brian: So,
&gt;&gt; Brian: There we go.

49
00:03:45.127 --> 00:03:49.137
&gt;&gt; Brian: So now what showCount
is going to be is it's going to,

50
00:03:49.137 --> 00:03:54.229
I don't want this this.state.searchTerm,
I want searchWord.

51
00:04:11.593 --> 00:04:15.934
&gt;&gt; Brian: Yeah, you have to bring this
component part right down there too.

52
00:04:27.574 --> 00:04:28.730
&gt;&gt; Brian: Okay.

53
00:04:30.215 --> 00:04:33.140
&gt;&gt; Brian: So some of the story is
we have this show count right here.

54
00:04:33.140 --> 00:04:38.430
This is gonna be however many shows
that it actually finds, right?

55
00:04:38.430 --> 00:04:41.100
So the reason why I'm putting this as
opposed to just putting the number that I

56
00:04:41.100 --> 00:04:43.110
know it's going to be, which is two.

57
00:04:43.110 --> 00:04:46.928
I'm doing this so that if I add stuff or
take stuff away from that data.Jason file,

58
00:04:46.928 --> 00:04:50.058
that this test doesn't have to be
updated every time that I do that.

59
00:04:54.776 --> 00:05:00.056
&gt;&gt; Brian: Okay, so now I can say expect

60
00:05:00.056 --> 00:05:10.056
component.find(ShowCard).length).toEqual(-
showCount)

61
00:05:20.797 --> 00:05:21.986
&gt;&gt; Brian: So in this particular case,

62
00:05:21.986 --> 00:05:24.758
let's step through this line by line
to kinda make sure that you get

63
00:05:24.758 --> 00:05:25.560
what's going in.

64
00:05:26.830 --> 00:05:28.410
I have searchWord, right?

65
00:05:28.410 --> 00:05:30.210
Black, right?

66
00:05:30.210 --> 00:05:31.460
I'm gonna render out the component.

67
00:05:33.710 --> 00:05:37.230
I'm going to take that component,
I'm going to find the input on there.

68
00:05:37.230 --> 00:05:40.510
You might want to put like a class
on there or something like that.

69
00:05:40.510 --> 00:05:43.870
Right now I know there's only gonna
be one input but this is just lazy.

70
00:05:43.870 --> 00:05:46.720
This can be any CSS selector, okay?

71
00:05:47.794 --> 00:05:53.300
.find input, then I'm going to simulate
as if the user was typing on it, right?

72
00:05:53.300 --> 00:05:56.670
I'm gonna simulate a change
event on that input.

73
00:05:56.670 --> 00:06:01.600
And I'm going to pass this event
as the event for it, right?

74
00:06:01.600 --> 00:06:07.340
So this is like simulating a dom event,
right, with a target and value, right?

75
00:06:07.340 --> 00:06:10.309
Cuz if you look at our search.jsx,
what is it reading?

76
00:06:10.309 --> 00:06:17.158
Event.target.value, right.

77
00:06:17.158 --> 00:06:21.120
Event.target.value, that is
what it's actually reading.

78
00:06:22.330 --> 00:06:26.480
We are passing in this search
word black into that, okay.

79
00:06:26.480 --> 00:06:30.790
So now this component is going to take
off that re-render cycle inside of

80
00:06:30.790 --> 00:06:31.930
this particular component.

81
00:06:31.930 --> 00:06:36.250
And it's going to re-render
to that new state, right?

82
00:06:36.250 --> 00:06:42.810
That new state if we look here, that's
going to set this to be black, right?

83
00:06:48.121 --> 00:06:51.562
&gt;&gt; Brian: Coming back to or spec.

84
00:06:51.562 --> 00:06:56.470
Then showCount is,
if we look down here in search.

85
00:06:56.470 --> 00:07:00.520
It's basically simulating what's
happening here, this filter statement.

86
00:07:00.520 --> 00:07:03.910
And then we're saying,

87
00:07:03.910 --> 00:07:07.850
does the amount of showCards match how
many shows I expect it to be there?

88
00:07:09.820 --> 00:07:10.689
Cool, does that make sense?

89
00:07:12.770 --> 00:07:14.170
So now if we do yarn test.

90
00:07:19.054 --> 00:07:20.860
&gt;&gt; Brian: It's not running the test.

91
00:07:20.860 --> 00:07:23.340
You need to say,
please actually test this.

92
00:07:25.000 --> 00:07:26.060
It passes, just kidding.

93
00:07:31.912 --> 00:07:36.379
&gt;&gt; Brian: Okay,
&gt;&gt; Brian: So expected to receive two.

94
00:07:38.943 --> 00:07:41.200
&gt;&gt; Brian: And
it caught a whole bunch of stuff.

95
00:07:41.200 --> 00:07:44.350
Yeah, no.
Right now [LAUGH] we're giving it

96
00:07:44.350 --> 00:07:47.420
the actual shows,
what we actually want is the length.

97
00:07:50.983 --> 00:07:53.250
&gt;&gt; Brian: And
I guess we could of just unlinked up here.

98
00:07:53.250 --> 00:07:55.470
Since that's actually what
that variable represents.

99
00:07:57.010 --> 00:07:58.650
So the key is that I just added here.

100
00:07:58.650 --> 00:08:01.168
We need this .link statement right there.

101
00:08:01.168 --> 00:08:06.694
No, down there, .length.

102
00:08:12.119 --> 00:08:13.313
&gt;&gt; Brian: Okay, let's try that again.

103
00:08:18.962 --> 00:08:21.386
&gt;&gt; Brian: Expected value to equal 14,
and it received two.

104
00:08:25.099 --> 00:08:26.295
&gt;&gt; Brian: That's neat.

105
00:08:32.999 --> 00:08:37.700
&gt;&gt; Speaker 2: Is your show count getting
the index rather than the actual shows?

106
00:08:37.700 --> 00:08:39.010
Do we need to do two uppercase?

107
00:08:42.530 --> 00:08:44.770
&gt;&gt; Brian: So there's two uppercase
here and two uppercase there.

108
00:08:46.160 --> 00:08:48.000
&gt;&gt; Speaker 2: On show title,
or show description.

109
00:08:49.672 --> 00:08:52.460
&gt;&gt; Brian: Show title and show description.

110
00:08:52.460 --> 00:08:54.000
No.
It's doing that collectively here with

111
00:08:54.000 --> 00:08:55.624
this to UpperCase.

112
00:08:55.624 --> 00:08:57.078
&gt;&gt; Speaker 2: I see what you're doing.

113
00:08:59.558 --> 00:09:02.544
&gt;&gt; Brian: So it expected 14.

114
00:09:03.860 --> 00:09:06.070
So it is something wrong with
this statement right here.

115
00:09:06.070 --> 00:09:09.220
Two is the correct answer so
my test is actually correct,

116
00:09:10.220 --> 00:09:14.880
my test case is not doing it correctly.

117
00:09:14.880 --> 00:09:21.307
preload.shows.filter show,
title toUpperCase indexOf searchWord.

118
00:09:21.307 --> 00:09:25.150
&gt;&gt; Speaker 2: Is greater than or
equal to zero?

119
00:09:25.150 --> 00:09:29.950
&gt;&gt; Brian: And this needs to be,
yeah, that's exactly it.

120
00:09:29.950 --> 00:09:30.750
I dropped that.

121
00:09:32.380 --> 00:09:34.923
Greater than or equal to zero.

122
00:09:41.075 --> 00:09:42.106
&gt;&gt; Brian: Yep, okay.

123
00:09:43.885 --> 00:09:45.740
&gt;&gt; Brian: Cuz this is a filter,
it still needs to be true or false.

124
00:09:45.740 --> 00:09:48.480
So it was dropping one show which was
a zero with element which is why we're

125
00:09:48.480 --> 00:09:49.730
getting 14.

126
00:09:49.730 --> 00:09:50.890
Thank you.

127
00:09:57.054 --> 00:09:58.840
&gt;&gt; Brian: So now we get all of D Test.

128
00:09:58.840 --> 00:10:01.380
So this is why I was saying that this is
a good way to phrase it because there's

129
00:10:01.380 --> 00:10:05.120
a check mark that says search renders
correctly, right, that is doing that.

