[00:00:00]
>> Brian Holt: And now we're gonna do AJAX. So remarkably we haven't actually had to use lifecycle methods yet. Which is crazy, because they're actually fairly common when you're writing React, but we actually haven't had to use them yet. So we're going to introduce something now so that you can see what these lifecycle methods are.

[00:00:20]
So going back to our code, let's look at something like ShowCard. It's pretty simple one, no, let's look at Search.
>> Brian Holt: So you have to think of the lifecycle of a component, as it like lives on the DOM, right? The first thing that happens to is it calls its constructor.

[00:00:39]
Inevitably just that's how ESX classes work, right? Then after that, it's gonna get us onto fault props. And then right before it gets mounted to the DOM, it's gonna call a method called componentWillMount. So I actually what I would do here, is I think it goes here. So it's componentWillMount, you don't have to copy this, I'm just gonna show you.

[00:01:05]

>> Brian Holt: So this here is a method that's specific to React. That this is going to get called right before React renders it out to the DOM, right. So it's called render for the first time already. So it actually has the first amount of markup, and then it's about to be mounted to the DOM.

[00:01:21]
It's gonna call this componentWillMount method. And to be honest with you, you're not gonna use componentWillMount very much. But, one of the things that it is useful for and is important is if you have something that needs to happen both on the server side, if you're doing server side rendering, and the client side.

[00:01:40]
So that's the key about componentWillMount is that it does get called on the server. The one that you're gonna end up using more is componentDidMount, right? So this is going to get called after it's been rendered out to the DOM for the very first time. Now, what's peculiar and good about componentDidMount is you can be guaranteed that window is available at this point, right?

[00:02:03]
Because it's already been rendered, and it's not going to get called a node, right? So anything that you wanna do with window or anything you wanna do like doing AJAX request are gonna go in componentDidMount. Thus, you're gonna use componentDidMount quite a bit. A good example, so besides AJAX and besides any thing that references window or document, another good thing that you're gonna do in windows componentDidMount is if you need to integrate with another library.

[00:02:29]
So an example that would be D3, right? Say you have a React component that renders out like a chart with D3. You would do all that stuff here in componentDidMount to do that integration level with it. If you need to add any like event listeners on the window, that's when you would do this as well.

[00:02:48]
So, yes we're gonna be using componentDidMount quite a bit. There's a couple other room, I have them documented out here in my notes if you wanna go and read them and they're also really well documented in the React documentation. There's component well receive props that's gonna called every time that you're gonna get brand new props from a parent.

[00:03:09]
There's should component update, which we actually will use later. It's a performance optimization message, which typically you don't have to worry about. React is plenty performance by itself, but sometimes, you have performance problems and this is kind of the escape hatch for that. And then the last one is componentWillUnmount.

[00:03:32]

>> Brian Holt: Like that, I think.
>> Brian Holt: This is before the component is about to leave the DOM, and typically this is gonna be where you clean up, right. If you added any event listeners, if you need to detach from D3, or anything like that all that kind of clean-up stuff will happen here.

[00:03:51]
Again, not something that you're typically going to need to do, but it's available there for you should you need it.
>> Brian Holt: And that's really it. So it's just a bunch of hooks that you can hook into the lifecycle of these components to kind of different things, depending what you need to do

