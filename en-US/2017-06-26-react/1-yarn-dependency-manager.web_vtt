WEBVTT

1
00:00:00.630 --> 00:00:03.180
&gt;&gt; Brian Holt: Now that
you have the start branch,

2
00:00:03.180 --> 00:00:08.270
hopefully, hopefully you have nodes
six plus seven-ish installed.

3
00:00:10.000 --> 00:00:11.830
I installed mine using MVM.

4
00:00:11.830 --> 00:00:16.520
It's totally up to you how to do that,
but I find MVM to be very convenient.

5
00:00:16.520 --> 00:00:21.170
Next thing we're gonna talk about is Yarn.

6
00:00:22.620 --> 00:00:28.200
So many of you are probably accustomed
to seeing npm lots of places.

7
00:00:28.200 --> 00:00:31.675
Npm doesn't stand for node package
manager but that's what I think of it as.

8
00:00:31.675 --> 00:00:38.620
[LAUGH] It's basically a way to install
dependencies for JavaScript type projects.

9
00:00:38.620 --> 00:00:40.340
And they ship a client called npm.

10
00:00:43.220 --> 00:00:45.124
And it's been really great for
a long time.

11
00:00:45.124 --> 00:00:49.524
However, if you're doing
deployments it's really tough

12
00:00:49.524 --> 00:00:54.920
because npm is non deterministic
as of npm three, four-ish.

13
00:00:54.920 --> 00:00:56.531
This is gonna change with npm five.

14
00:00:56.531 --> 00:01:02.090
Npm five will become deterministic and
it's also going to do locking as well.

15
00:01:02.090 --> 00:01:03.384
But that is still not released.

16
00:01:03.384 --> 00:01:05.510
It's actually coming
out with Note 8 today.

17
00:01:05.510 --> 00:01:09.130
So that's why we're not teaching it
today and we're gonna stick with yarn.

18
00:01:10.520 --> 00:01:14.410
The fine people over at Facebook were
frustrated with their deployments, so

19
00:01:14.410 --> 00:01:18.660
they came up with a npm
client called yarn.

20
00:01:18.660 --> 00:01:22.260
And what yarn does is it creates these
lock files which we were just looking at,

21
00:01:22.260 --> 00:01:23.970
that locks down all of your dependencies.

22
00:01:23.970 --> 00:01:26.280
What's really cool about
that is it's deterministic.

23
00:01:26.280 --> 00:01:30.420
When I say the term, deterministic, it
means I can run it ten billion times and

24
00:01:30.420 --> 00:01:33.520
on the ten billion and first time
it's gonna run the exact same way.

25
00:01:33.520 --> 00:01:37.350
And you do not have that
guarantee with npm three,

26
00:01:37.350 --> 00:01:41.460
which is the one that the previous
versions of node shipped with.

27
00:01:42.790 --> 00:01:46.150
So what's frustrating about that
is when you're doing deployments,

28
00:01:46.150 --> 00:01:50.700
you don't know what state your node
modual's directory is gonna end up in,

29
00:01:50.700 --> 00:01:54.660
which is a problem as you may imagine,
right?

30
00:01:54.660 --> 00:01:59.490
You can do 10,000 deploys and
50 of them failed for unknown reasons and

31
00:01:59.490 --> 00:02:01.080
you can't reproduce why they failed.

32
00:02:01.080 --> 00:02:03.410
Like, it's a serious problem, right?

33
00:02:03.410 --> 00:02:06.100
So they came up with this
yarn dependency manager.

34
00:02:06.100 --> 00:02:09.330
It's faster than npm three and
it's deterministic.

35
00:02:09.330 --> 00:02:11.580
And it also has a flat structure,

36
00:02:11.580 --> 00:02:15.469
which are all very positive things for
deployments.

37
00:02:17.200 --> 00:02:18.720
So today, we're going to be using yarn.

38
00:02:19.840 --> 00:02:21.470
So if you don't already have it installed,

39
00:02:21.470 --> 00:02:22.840
I'll show you how to
install it real quick.

40
00:02:25.000 --> 00:02:29.502
You do npm install -- global yarn,

41
00:02:29.502 --> 00:02:34.442
like that.
&gt;&gt; Brian Holt: I already have it, so

42
00:02:34.442 --> 00:02:36.820
I'm not gonna run that, but
that's how you would do it.

43
00:02:38.170 --> 00:02:39.270
And then at that point,

44
00:02:39.270 --> 00:02:43.441
you should be able to say yarn -v.
&gt;&gt; Brian Holt: I guess it's

45
00:02:43.441 --> 00:02:44.820
gonna do the installations.

46
00:02:44.820 --> 00:02:46.350
I guess -v does not do version.

47
00:02:46.350 --> 00:02:51.687
In any case, let's stop that for a second.
&gt;&gt; Brian Holt: So

48
00:02:51.687 --> 00:02:54.333
I have yarn already installed and

49
00:02:54.333 --> 00:02:59.740
now I am inside the start branch,
and I'm going to run yarn.

50
00:02:59.740 --> 00:03:01.910
What this is gonna do,
this is like the npm install.

51
00:03:01.910 --> 00:03:04.905
It's gonna go through and install all
my dependencies based on what I have in

52
00:03:04.905 --> 00:03:06.800
package.json and the yarn lock file.

53
00:03:06.800 --> 00:03:11.780
So I'm gonna say yarn, and then it's

54
00:03:11.780 --> 00:03:16.150
just gonna do this magic, and it's going
to install all of my dependencies for

55
00:03:16.150 --> 00:03:19.411
me.
&gt;&gt; Brian Holt: Now to be fair,

56
00:03:19.411 --> 00:03:25.540
you can totally run npm install and not
use yarn and I'm 99% sure it's gonna work.

57
00:03:25.540 --> 00:03:28.470
But it's nondeterministic so
you can't truly be sure.

58
00:03:28.470 --> 00:03:29.930
No I'm just kidding,
you can be pretty sure, but.

59
00:03:31.220 --> 00:03:34.490
So now if we look in our node_modules.

60
00:03:34.490 --> 00:03:35.530
Mine was pretty fast.

61
00:03:35.530 --> 00:03:40.540
Mine only took 13 seconds because most
of that was already cached for me.

62
00:03:40.540 --> 00:03:41.570
If you're doing this cold for

63
00:03:41.570 --> 00:03:47.190
the first time and are not on gigabit,
it might take a little bit longer.

64
00:03:47.190 --> 00:03:51.670
So if I go into node modules, and look, I
have a shit-ton of dependencies installed

65
00:03:51.670 --> 00:03:56.576
now.
&gt;&gt; Brian Holt: So this is something

66
00:03:56.576 --> 00:04:00.380
that people that like to complain
about Node like to complain about.

67
00:04:00.380 --> 00:04:03.750
Is that there are just a crazy
amount of dependencies.

68
00:04:03.750 --> 00:04:07.120
I'm not gonna deny that,
there's a crazy amount of dependencies.

69
00:04:07.120 --> 00:04:11.720
However, you have to keep in mind that
yarn installs all these node modules

70
00:04:11.720 --> 00:04:12.340
totally flat.

71
00:04:12.340 --> 00:04:15.210
So everything that gets included that
includes something else that includes

72
00:04:15.210 --> 00:04:20.320
something else is all installed flat,
which is not how npm installs them.

73
00:04:22.640 --> 00:04:26.930
Yarn actually goes through and links them
all into the respective node modules

74
00:04:26.930 --> 00:04:34.566
directories, which is pretty cool.
&gt;&gt; Brian Holt: Cool.

75
00:04:38.710 --> 00:04:40.485
&gt;&gt; Brian Holt: So now that we've done yarn

76
00:04:40.485 --> 00:04:45.276
installs,
&gt;&gt; Brian Holt: We're gonna go ahead and

77
00:04:45.276 --> 00:04:46.650
skip the global installs for now.

78
00:04:48.850 --> 00:04:52.430
But just so you know,
you can also do global yarn installs.

79
00:04:52.430 --> 00:04:55.530
You can do yarn global add blank.

80
00:04:56.560 --> 00:04:59.840
So if I was gonna do nodemon or something
like that, that's how you'd do that and

81
00:04:59.840 --> 00:05:05.188
that would be a global install for yarn.
&gt;&gt; Brian Holt: And if you wanna

82
00:05:05.188 --> 00:05:11.210
add new dependencies to a repo,
you say yarn add and then react, right?

83
00:05:11.210 --> 00:05:15.195
Something like that.
&gt;&gt; Brian Holt: Instead of vr install,

84
00:05:15.195 --> 00:05:16.116
right, it's yarn add.

85
00:05:16.116 --> 00:05:19.990
And then by the same token, yarn remove.

86
00:05:19.990 --> 00:05:25.180
The nice thing about yarn
is it saves by default.

87
00:05:25.180 --> 00:05:28.440
You don't have to do npm install--save,
right?

88
00:05:28.440 --> 00:05:31.350
Also the true of npm five,
they're dropping the --save,

89
00:05:31.350 --> 00:05:35.240
it's gonna just save by default
which is gonna be great.

90
00:05:35.240 --> 00:05:37.140
And if you wanted to save it to dev,

91
00:05:37.140 --> 00:05:42.710
you're gonna say yarn --dev eslint or
something like that, right?

92
00:05:42.710 --> 00:05:44.720
And that is the full tour.

93
00:05:44.720 --> 00:05:47.370
That is how you use yarn.

94
00:05:47.370 --> 00:05:50.491
Question from online?
&gt;&gt; Speaker 2: He's asking if yarn adds

95
00:05:50.491 --> 00:05:54.320
updates that package.json.
&gt;&gt; Brian Holt: It does.

96
00:05:54.320 --> 00:05:57.460
Yeah, it'll update the package.json and
it'll update the lock file for

97
00:05:57.460 --> 00:06:04.640
you automatically.
&gt;&gt; Brian Holt: Same thing with npm five.

98
00:06:04.640 --> 00:06:07.114
It's gonna ship with a new file called
package-lock.json and when you install,

99
00:06:07.114 --> 00:06:08.112
it will also update that as well.

100
00:06:08.112 --> 00:06:13.526
So npm three has something
called ShrinkWrap,

101
00:06:13.526 --> 00:06:16.366
which will be, I think,

102
00:06:16.366 --> 00:06:21.660
slowly be phased out in
favor of Package Lock.

103
00:06:21.660 --> 00:06:26.260
And if you don't know what it is,
it's okay.

104
00:06:26.260 --> 00:06:29.649
Like, let's just go forward with yarn

105
00:06:29.649 --> 00:06:32.439
and Package Lock.
&gt;&gt; Speaker 2: Are these npm updates

106
00:06:32.439 --> 00:06:35.300
supposed to just kind of displace yarn?

107
00:06:35.300 --> 00:06:40.620
Like, is that what they're trying to do?
&gt;&gt; Brian Holt: It's a good question.

108
00:06:40.620 --> 00:06:41.884
&gt;&gt; Speaker 2: They said they were

109
00:06:41.884 --> 00:06:44.888
just working on it actually beforehand,
and

110
00:06:44.888 --> 00:06:48.290
then yarn kind of like came out.
&gt;&gt; Brian Holt: Yeah.

111
00:06:48.290 --> 00:06:49.005
&gt;&gt; Speaker 2: And it looked

112
00:06:49.005 --> 00:06:52.220
like they were kind of back peddling and
filling in gaps.

113
00:06:52.220 --> 00:06:55.970
But I don't know, it's hard to say.
&gt;&gt; Brian Holt: It's

114
00:06:55.970 --> 00:06:56.830
kind of a weird situation.

115
00:06:58.550 --> 00:07:02.170
Not to plug myself too much here, but the
last episode of the podcast we launched

116
00:07:02.170 --> 00:07:06.460
actually had Laurie Voss from npm on, and
he talks a lot about that whole situation.

117
00:07:06.460 --> 00:07:09.250
So there's good history
there if you wanna talk.

118
00:07:09.250 --> 00:07:12.640
They're super chill with each other
is the sum of the story, right?

119
00:07:12.640 --> 00:07:16.136
They're both gonna coexist and
push each other forward, I think,

120
00:07:16.136 --> 00:07:18.747
is the sum of the story for now.
&gt;&gt; Speaker 2: Npm five is definitely a big

121
00:07:18.747 --> 00:07:20.282
step up.
&gt;&gt; Brian Holt: Yeah, for sure,

122
00:07:20.282 --> 00:07:21.490
npm five is gonna be awesome.

