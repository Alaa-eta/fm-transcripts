[00:00:00]
>> Speaker 1: How would you use Redux with something like local storage? Have you done that before?
>> Brian: So you can definitely dump your state to local storage, and then load it back. So you can hydrate and re-hydrate from any number of sources. There are plugins specifically, I think it's called Redux Offline if I remember correctly, that'll do a bunch of that stuff for you.

[00:00:22]
I'm not gonna show you here because I haven't done it, and I'm not gonna improvise on the fly. But there's a bunch of tooling and libraries around Redux that will do that for you, for sure.
>> Speaker 1: And then with Redux, so essentially instead of setState, you're using Dispatch?

[00:00:42]

>> Brian: Yep, that's astute.
>> Brian: The interesting thing with React, which I have not shown you, is you can actually do reducers, and actions, and things like that with React directly. So you can kinda treat React state as if it was a mini Redux store. That's possible cuz instead of giving React objects to update the state with, you can actually hand it functions.

[00:01:12]
And those functions can be like reducers, right? So that's possible as well.
>> Speaker 1: I've got a couple questions regarding flow. So are we going to end up creating a type definition for our state? Cuz right now you kind of just evaporated what our state is. There's nothing that tells us the shape of our state tree, right?

[00:01:43]

>> Brian: Yeah, yeah. Sort of, [LAUGH] I think is the answer to your question. So it's smart enough to say that this is a string here. And by setting the default state to string, it's going to be a string. And so if we ever modify it from being a string, it knows.

[00:01:59]
It's like hey, you messed this up.
>> Speaker 1: Okay, so our entire state hierarchy right now is just a string, right?
>> Brian: Yep.
>> Speaker 3: We're all good.
>> Speaker 1: But what happens when we add more stuff?
>> Brian: I will show you.
>> Speaker 1: Maybe, okay.
>> Brian: Yeah [LAUGH]
>> Speaker 1: And then the other Flow question is, why prefer declare type over interface?

[00:02:21]

>> Brian: With Flow?
>> Brian: I don't know if I know the answer to that question.
>> Speaker 1: Okay, don't worry.
>> Brian: The answer to that question is, this is the way I've done it. So there might be a good reason to do that, and I'm not super sure.
>> Brian: Cool, but I would be interested in the answer to the question for sure.

[00:02:48]

>> Speaker 1: And then someone's asking about, just if you could pull up the changes you made to createStore? And, I mean, if you pushed a branch then he could just see it there too.
>> Brian: Yeah, I can do that too before we move on to async Redux.
>> Brian: But again, this is precisely pulled off of the dev tools as well.

[00:03:13]
So you could just copy and paste off the website, which is exactly what I did. Yeah, but I will push a branch.

