[00:00:00]
>> Brian Holt: So what I'm gonna do now is I'm going to enable Sublime Linter for Sublime, which I already have enabled. But this is basically a tool that's going to continuously run ESLint against my code, and it's gong to highlight it if something's wrong with it. So if I say like const, or let x = 5.

[00:00:31]

>> Brian Holt: So now if you look in here, it might be kinda hard to see but I promise that it's there. There's a faint red outline around the x and you can see the red dot there in the gutter. So if I click on it, and this is almost too small for me to read, but at the very, very bottom that infinitesimally small text it tells me what my error is.

[00:00:56]
So it says, x is assigned a value but never used. So this should be a const instead. So one of things that ES lint is gonna enforce on me is if you never reassign something it's gonna force you to make it a const. So now if I change this to const x equals five, it's still going to be an error because I never use it unless I use console dot log(x).

[00:01:23]
And then now, it's gone away, cuz now I'm actually using it. You have the red here that's outlined React, because this is undefined, right. It doesn't see anywhere where React is defined.
>> Brian Holt: And then this console.log is outlined because, that's a warning said use console.log. Typically you don't wanna ship that to production, that's why its a warning.

[00:01:50]
And then this function here is a warning because it wants a name, right. The reason why it forces you to put a name is it makes stack traces much more useful if it has a name on it.
>> Speaker 2: What was the sublime then?
>> Brian Holt: It's called Sublime Linter.

[00:02:14]

>> Brian Holt: So you have to install two things for sublime specifically. You have to install a package called Sublime Linter. And then you have to install another one called sublime linter-contrib-eslint. So I guess I can do this to packages. So the first one is Sublime Linter, and the second one is sublime linter contrib-eslint.

[00:02:42]

>> Speaker 2: Got it, I'm using Adam so.
>> Speaker 2: I'll skip that part.
>> Brian Holt: There's Adam lint, I think it was its called, right? Adam-lint.
>> Speaker 2: Adam Linter?
>> Brian Holt: I think it just adam-lint.

