WEBVTT

1
00:00:00.640 --> 00:00:01.714
&gt;&gt; Brian Holt: So first thing,

2
00:00:01.714 --> 00:00:05.720
let's just go ahead get this out
of just being in a script tag.

3
00:00:05.720 --> 00:00:07.567
So I'm just gonna cut this.

4
00:00:12.744 --> 00:00:13.980
&gt;&gt; Brian Holt: I'm gonna
create a new file.

5
00:00:16.190 --> 00:00:22.340
And I'm actually gonna create a new
directory as well, New Folder.

6
00:00:22.340 --> 00:00:24.787
I'm just gonna call it js.

7
00:00:27.632 --> 00:00:31.020
&gt;&gt; Brian Holt: And inside of js,
I'm gonna create a new file.

8
00:00:32.790 --> 00:00:39.593
And I am going to call this,
&gt;&gt; Brian Holt: Let's

9
00:00:39.593 --> 00:00:44.563
call it ClientApp.jsx.

10
00:00:52.399 --> 00:00:54.579
&gt;&gt; Brian Holt: And
we're just gonna put all that in there.

11
00:01:00.435 --> 00:01:01.385
&gt;&gt; Brian Holt: Okay.

12
00:01:05.580 --> 00:01:07.840
&gt;&gt; Brian Holt: And
I have turned off my Settings real quick.

13
00:01:07.840 --> 00:01:12.300
So give me one second to modify.

14
00:01:12.300 --> 00:01:14.314
That's not what I wanted to do.

15
00:01:14.314 --> 00:01:17.311
JsPrettier, User, and

16
00:01:17.311 --> 00:01:22.455
don't look at the man behind the curtain.

17
00:01:22.455 --> 00:01:28.465
Okay, so save that, and now, we're gonna
get to start talking about some tools for

18
00:01:28.465 --> 00:01:32.286
just a moment before we go
back to writing more react.

19
00:01:32.286 --> 00:01:37.946
So the first tool that I wanna talk about,
which I am just incredibly excited about,

20
00:01:37.946 --> 00:01:43.303
to the point that I have contributed
a couple times, is a tool called prettier.

21
00:01:43.303 --> 00:01:46.920
I've written a little bit of Go,
just here and there.

22
00:01:46.920 --> 00:01:49.430
And one of my favorite,

23
00:01:49.430 --> 00:01:54.980
favorite parts about writing Go is a tool
called Go Format, which is just amazing.

24
00:01:54.980 --> 00:01:59.830
That it's amazing because the Go
community has standardized on this tool

25
00:01:59.830 --> 00:02:02.030
that just automatically formats or
code for them.

26
00:02:02.030 --> 00:02:03.080
They don't have to do anything.

27
00:02:03.080 --> 00:02:04.670
It is just always looks the same.

28
00:02:04.670 --> 00:02:05.632
And there's just never any question.

29
00:02:05.632 --> 00:02:08.305
Just everyone always uses Go Format and

30
00:02:08.305 --> 00:02:13.327
there is no bikeshedding about how
many stabs or spaces, or semicolons or

31
00:02:13.327 --> 00:02:17.873
no semicolons, or spaces between
function and the parentheses.

32
00:02:17.873 --> 00:02:22.417
All of the stuff just, it's never talked
about because this tool just already takes

33
00:02:22.417 --> 00:02:25.500
care of it for them and
there's no room to argue about it.

34
00:02:26.590 --> 00:02:28.520
Now, if anyone has been
writing JavaScript for

35
00:02:28.520 --> 00:02:31.820
any length of time, there's lots
of room to talk about it, right?

36
00:02:31.820 --> 00:02:35.020
How many of us have had just this
week a conversation like that?

37
00:02:35.020 --> 00:02:37.230
Pretty much, most of us, right?

38
00:02:38.380 --> 00:02:41.030
So Enter Prettier.

39
00:02:41.030 --> 00:02:43.338
Prettier is kind of aiming
to be this Go Format,

40
00:02:43.338 --> 00:02:45.773
that it does all of this
formatting stuff for you.

41
00:02:45.773 --> 00:02:48.810
And this actually scares a lot of people.

42
00:02:48.810 --> 00:02:53.285
Like when I introduced it at Netflix,
there was some fear and

43
00:02:53.285 --> 00:02:55.760
uncertainty and doubt, right?

44
00:02:55.760 --> 00:02:58.660
Because people have their patterns
that they're accustomed to and

45
00:02:58.660 --> 00:02:59.219
that they like, right?

46
00:03:00.420 --> 00:03:03.270
However, the way that I like
to propose it to people is

47
00:03:03.270 --> 00:03:05.970
imagine that when you're writing code,
you always have this

48
00:03:05.970 --> 00:03:09.260
background thread in your brain of how
am I gonna make this more readable?

49
00:03:09.260 --> 00:03:10.960
How am I gonna format this right?

50
00:03:10.960 --> 00:03:12.220
Is all the spacing correct?

51
00:03:12.220 --> 00:03:14.577
And so do I have the right
commas in the right places?

52
00:03:14.577 --> 00:03:16.470
Should I be writing semicolons,
should I not write?

53
00:03:16.470 --> 00:03:19.180
All these decisions are just
constantly going on in the background.

54
00:03:19.180 --> 00:03:22.610
Imagine, if you could just
shut down that thread, right?

55
00:03:22.610 --> 00:03:26.690
And that you just free up more resources
to be thinking about anything else.

56
00:03:26.690 --> 00:03:28.960
This is even a great example right here.

57
00:03:28.960 --> 00:03:33.990
So here, I pasted this code, right,
and the indentation's off, right?

58
00:03:33.990 --> 00:03:35.540
Because the first one is correct,

59
00:03:35.540 --> 00:03:38.410
but there is extra tabs
coming in from the HTML.

60
00:03:40.310 --> 00:03:42.850
And furthermore,
there's now mixed tabs and spaces too,

61
00:03:42.850 --> 00:03:43.730
which is kind of a problem.

62
00:03:45.120 --> 00:03:46.423
So I had to actually go in and fix this.

63
00:03:46.423 --> 00:03:49.425
I pasted it, and the first thing I
instantly did is I went and said, okay,

64
00:03:49.425 --> 00:03:52.030
I'm gonna fix this and
get all of it right.

65
00:03:52.030 --> 00:03:53.350
Prettier can just fix this for

66
00:03:53.350 --> 00:03:56.100
you automatically on
the fly every single time.

67
00:03:57.780 --> 00:04:00.315
So you can paste code and
not have to worry about like, well,

68
00:04:00.315 --> 00:04:01.424
should I break line here?

69
00:04:01.424 --> 00:04:02.817
Should I break at 180?

70
00:04:02.817 --> 00:04:04.061
Should I break at 120?

71
00:04:04.061 --> 00:04:06.807
All these different things,
Prettier is just gonna do for you.

72
00:04:09.210 --> 00:04:12.390
&gt;&gt; Brian Holt: So
I invite you to tool around with it.

73
00:04:12.390 --> 00:04:14.608
They actually did give us quite
a few you can choose, right.

74
00:04:14.608 --> 00:04:16.720
We can tell it to wrap at 80 characters.

75
00:04:16.720 --> 00:04:17.917
We can tell it to wrap at 120.

76
00:04:17.917 --> 00:04:19.350
We can tell it to use semicolons.

77
00:04:19.350 --> 00:04:22.106
We can tell it not to, tab, spaces, etc.

78
00:04:22.106 --> 00:04:23.284
I kinda wish that they hadn't.

79
00:04:23.284 --> 00:04:27.650
I kinda wish they had just said, this
is the way it is and just deal with it.

80
00:04:27.650 --> 00:04:32.490
But I'm just happy it exists,
so [LAUGH] let's go with that.

81
00:04:33.560 --> 00:04:38.771
So what I want you to do now is I want you

82
00:04:38.771 --> 00:04:43.648
to go to you're command line, and

83
00:04:43.648 --> 00:04:49.548
I want you to do yarn global add prettier.

84
00:04:51.277 --> 00:04:53.073
&gt;&gt; Brian Holt: I think mine
should already be up-to-date.

85
00:04:57.243 --> 00:05:02.938
&gt;&gt; Brian Holt: 1.31
&gt;&gt; Brian Holt: Yep.

86
00:05:06.208 --> 00:05:09.746
&gt;&gt; Brian Holt: So this is going
to give us the ability to do it.

87
00:05:09.746 --> 00:05:14.037
So if I go into, I'm in node_modules.

88
00:05:14.037 --> 00:05:18.849
So if I go into js, I saved this, right?

89
00:05:18.849 --> 00:05:23.290
So notice that the, in fact,
let's just really mess it up.

90
00:05:23.290 --> 00:05:26.190
So now,
everything's really unformatted, right?

91
00:05:26.190 --> 00:05:28.550
This is just a mess, but
still valid JavaScript, right?

92
00:05:28.550 --> 00:05:32.050
This would totally would
work in a browser.

93
00:05:33.850 --> 00:05:38.403
Now if I say, prettier
&gt;&gt; Brian Holt: And

94
00:05:38.403 --> 00:05:41.636
what we're gonna do here is
we're gonna say, --single-quote.

95
00:05:41.636 --> 00:05:46.130
So we're gonna give it parameters to
tell how we want it to be formatted.

96
00:05:46.130 --> 00:05:51.543
We're gonna do, --print-width=120.

97
00:05:51.543 --> 00:05:55.320
It's default is still 80,
which is too small from my opinion.

98
00:05:55.320 --> 00:05:57.576
I'm no coding on an old school terminal,
so.

99
00:06:01.243 --> 00:06:08.830
&gt;&gt; Brian Holt: And then, we're just
gonna run it on ClientApp.jsx, okay?

100
00:06:08.830 --> 00:06:11.276
So if I just hit Enter right now,
it's not actually going to write it.

101
00:06:11.276 --> 00:06:13.020
It's just going to show me
what it's gonna look like.

102
00:06:17.080 --> 00:06:18.829
So this is what it actually printed out.

103
00:06:22.227 --> 00:06:22.950
&gt;&gt; Brian Holt: Well, I ran that.

104
00:06:24.190 --> 00:06:26.148
But notice,
nothing's changed here yet, right?

105
00:06:26.148 --> 00:06:27.180
So it's still broken.

106
00:06:29.890 --> 00:06:32.925
So, now, if I come in here and say,

107
00:06:32.925 --> 00:06:39.858
--write,
&gt;&gt; Brian Holt: It's

108
00:06:39.858 --> 00:06:43.635
gonna tell me which one it
wrote in 56 milliseconds.

109
00:06:43.635 --> 00:06:46.990
And notice, I come back here,
everything is well formatted.

110
00:06:49.951 --> 00:06:51.902
&gt;&gt; Brian Holt: And also,
notice, for example,

111
00:06:51.902 --> 00:06:56.290
that I was not writing semicolons before,
and it just did it automatically.

112
00:07:00.158 --> 00:07:04.340
&gt;&gt; Speaker 2: We're asking why
you put jsx instead of js.

113
00:07:04.340 --> 00:07:06.330
That's the file extension name.

114
00:07:06.330 --> 00:07:10.250
&gt;&gt; Brian Holt: So right now, I'm putting
jsx because momentarily, we wanna

115
00:07:10.250 --> 00:07:15.300
be introducing Babble, which is going
to make it possible for us to use jsx.

116
00:07:15.300 --> 00:07:20.840
So you can put .js for now, but you're
gonna have to rename it in ten minutes.

117
00:07:20.840 --> 00:07:23.856
So [LAUGH] yeah,
I would just recommend keeping it as jsx.

118
00:07:25.478 --> 00:07:27.460
&gt;&gt; Brian Holt: And
the reason why I do that is,

119
00:07:27.460 --> 00:07:31.595
the real reason is that our Linting
rows are going to require it.

120
00:07:31.595 --> 00:07:36.228
But the secondary reason that they
chose that is they required that

121
00:07:36.228 --> 00:07:41.274
anything they use jsx and needs to be
transpiled must have a jsx extension

122
00:07:41.274 --> 00:07:45.925
just to kinda of to denote that
this is something to be transpiled.

123
00:07:48.597 --> 00:07:54.540
&gt;&gt; Speaker 3: Sorry, so after you ran
the prettier on jsx, what else did you do?

124
00:07:54.540 --> 00:07:58.618
&gt;&gt; Brian Holt: You'd
have to just put --write.

125
00:07:58.618 --> 00:08:01.150
&gt;&gt; Brian Holt: Otherwise, it just displays
it and it doesn't actually write it.

126
00:08:04.860 --> 00:08:05.890
So again, if I write it again,

127
00:08:05.890 --> 00:08:08.870
it's gonna show it as gray because it
didn't actually change anything, so.

128
00:08:10.540 --> 00:08:12.760
&gt;&gt; Speaker 4: Can that be added
automatically to Sublime, so

129
00:08:12.760 --> 00:08:14.989
it saves it running prettier?

130
00:08:14.989 --> 00:08:17.085
&gt;&gt; Brian Holt: Yep, we're gonna do that.

131
00:08:18.678 --> 00:08:23.029
&gt;&gt; Brian Holt: So exactly,
this is kind of burdensome to do.

132
00:08:23.029 --> 00:08:27.435
So if you go to the class website here,

133
00:08:27.435 --> 00:08:31.852
toward downward, it says prettier.

134
00:08:35.182 --> 00:08:36.445
&gt;&gt; Brian Holt: Prettier.

135
00:08:40.004 --> 00:08:41.353
&gt;&gt; Brian Holt: Nope, not that one.

136
00:08:48.316 --> 00:08:49.830
&gt;&gt; Brian Holt: Editor integration, right?

137
00:08:52.070 --> 00:08:56.951
So right now, Prettier doesn'tt have
a good way of doing project level configs,

138
00:08:56.951 --> 00:08:59.210
which is annoying, right?

139
00:08:59.210 --> 00:09:01.720
They're working on it,
it's something that's gonna get done.

140
00:09:01.720 --> 00:09:04.050
But for now,
you'll have to configure it for

141
00:09:04.050 --> 00:09:07.730
every individual developer that
is writing on your project.

142
00:09:10.440 --> 00:09:12.502
That's one limitation you keep in mind.

143
00:09:12.502 --> 00:09:17.370
So come here too and go here, which is
gonna take you to the Prettier repo.

144
00:09:17.370 --> 00:09:22.247
And it's going to take you down to
the various editor integrations.

145
00:09:22.247 --> 00:09:25.880
So it's possible to do with Atom,
Emacs, Vim.

146
00:09:25.880 --> 00:09:31.510
They have it for Visual Studio code,
Visual Studio, Sublime, and WebStorm.

147
00:09:32.690 --> 00:09:37.167
If you're not using one of those,
good luck.

148
00:09:37.167 --> 00:09:40.849
[LAUGH] No, I'm sure, it's possible.

149
00:09:40.849 --> 00:09:43.370
These are just the ones
that they have notes for.

150
00:09:43.370 --> 00:09:44.809
So I will show you how
to do it with Sublime.

151
00:09:47.077 --> 00:09:50.896
&gt;&gt; Brian Holt: You're gonna come in and
say, install package.

152
00:09:50.896 --> 00:09:55.410
And I already have it installed, so it's
not gonna show up, it's called jsprettier,

153
00:09:55.410 --> 00:09:56.150
all one word.

154
00:09:57.510 --> 00:09:59.207
Install that, and then,

155
00:09:59.207 --> 00:10:03.459
what you're gonna do is you're
gonna go in to come into Sublime.

156
00:10:03.459 --> 00:10:09.525
So I'm bringing up this menu by
hitting Shift + Command + P,

157
00:10:09.525 --> 00:10:14.200
then open up jsprettier user settings,
okay?

158
00:10:16.070 --> 00:10:17.590
So for me, I'm using MVM, so

159
00:10:17.590 --> 00:10:22.710
I had to define where prettier was,
which is easy to do.

160
00:10:22.710 --> 00:10:26.310
You just come in here and say, which
prettier, and it's gonna give you a path.

161
00:10:27.370 --> 00:10:28.580
So just copy and paste that.

162
00:10:31.420 --> 00:10:34.470
node_path, again,
I had to say again, which node.

163
00:10:38.550 --> 00:10:39.430
Copy and paste that.

164
00:10:41.500 --> 00:10:44.431
And then, this is the one
that you might wanna change,

165
00:10:44.431 --> 00:10:46.426
which is auto_format_on_save.

166
00:10:46.426 --> 00:10:48.938
Just stick that to be true.

167
00:10:48.938 --> 00:10:52.650
And then, here are the prettier
options that you want to use.

168
00:10:52.650 --> 00:10:53.800
You welcome to change any of these.

169
00:10:53.800 --> 00:10:59.440
The only one that I asked you that you
use is you need to use parser flow.

170
00:10:59.440 --> 00:11:02.163
Since we'll be using
Flow later in the day,

171
00:11:02.163 --> 00:11:06.956
it will be useful if we'd use the Flow
parser instead of the Babel and parser.

172
00:11:06.956 --> 00:11:10.439
&gt;&gt; Speaker 2: Sorry,
how did you get to that file in Sublime?

173
00:11:10.439 --> 00:11:12.597
I'm also using.
&gt;&gt; Brian Holt: So you Shift + Cmd + P,

174
00:11:12.597 --> 00:11:18.087
then jsprettier, and
then go to the Prettier Settings User.

175
00:11:20.796 --> 00:11:22.044
&gt;&gt; Brian Holt: If you wanna
see all of that ones,

176
00:11:22.044 --> 00:11:23.300
you can look at the default ones.

177
00:11:23.300 --> 00:11:25.405
It'll show you all of
the things that you can change.

178
00:11:31.362 --> 00:11:36.040
&gt;&gt; Brian Holt: But the key is here,
you wanna do auto_format_on_save, right?

179
00:11:36.040 --> 00:11:38.499
This will make things a ton easier.

180
00:11:38.499 --> 00:11:42.760
So for example, if I do this and mess
it up again, all I have to do is click

181
00:11:42.760 --> 00:11:46.112
Save and everything just
fixes itself automatically.

182
00:11:50.946 --> 00:11:56.507
&gt;&gt; Brian Holt: And you can get, again,
really wildly out of touch here.

183
00:11:56.507 --> 00:12:01.804
It makes things that
are technically valid JavaScript,

184
00:12:01.804 --> 00:12:05.235
but it'll just fix all of it for you.

185
00:12:05.235 --> 00:12:09.035
And we'll do some respecting like,
so for example, here,

186
00:12:09.035 --> 00:12:10.980
I put an extra line break here.

187
00:12:10.980 --> 00:12:12.400
It will respects things like that.

188
00:12:14.630 --> 00:12:16.810
It'll respect that I wanna keep
these on two separate lines.

189
00:12:16.810 --> 00:12:19.193
It'll also respect that I wanna try and
keep these on one line.

190
00:12:23.494 --> 00:12:24.990
&gt;&gt; Brian Holt: So
some of those things it'll keep.

191
00:12:27.338 --> 00:12:27.838
Maybe not.

192
00:12:33.683 --> 00:12:34.496
&gt;&gt; Brian Holt: There we go.

193
00:12:37.056 --> 00:12:39.159
&gt;&gt; Brian Holt: The last thing I
wanna do is I wanna make it so

194
00:12:39.159 --> 00:12:42.380
people can actually do the entire
project from the command line.

195
00:12:44.760 --> 00:12:51.982
So going back to this,
we're gonna say, it's at the top.

196
00:12:51.982 --> 00:12:57.257
We're gonna do prettier

197
00:12:57.257 --> 00:13:03.789
--write --single-quote

198
00:13:03.789 --> 00:13:09.818
--print width=120,

199
00:13:09.818 --> 00:13:16.104
and then --parser=flow.

200
00:13:16.104 --> 00:13:18.118
What are the settings
that we have in here?

201
00:13:21.009 --> 00:13:24.680
&gt;&gt; Brian Holt: I think most of these
are just, these are all the default ones.

202
00:13:26.930 --> 00:13:34.330
"tabWidth"= 2, --tab-width=2.

203
00:13:34.330 --> 00:13:37.857
So this is what I'm saying that you
can't actually, there's no config file.

204
00:13:37.857 --> 00:13:40.010
You actually have do it every
single time in the command line.

205
00:13:42.050 --> 00:13:45.220
And then, we wanted to make sure
that it hits every JS file and

206
00:13:45.220 --> 00:13:47.010
every JSX file, right?

207
00:13:47.010 --> 00:13:49.089
Cuz we wanna always format
those two different things.

208
00:13:50.100 --> 00:13:55.341
So we're gonna

209
00:13:55.341 --> 00:13:58.566
do here is

210
00:13:58.566 --> 00:14:07.450
\'js/**/*.js.

211
00:14:07.450 --> 00:14:11.357
Sorry no, we're gonna do js,jsx}''.

212
00:14:18.336 --> 00:14:19.029
&gt;&gt; Brian Holt: Does that look right?

213
00:14:19.029 --> 00:14:19.691
Let's try that.

214
00:14:22.491 --> 00:14:23.697
&gt;&gt; Brian Holt: Yeah, I didn't think so.

215
00:14:34.152 --> 00:14:35.868
&gt;&gt; Brian Holt: So let's see if that works.

216
00:14:41.624 --> 00:14:43.735
&gt;&gt; Brian Holt: This doesn't even
look like it's hitting any files.

217
00:14:56.413 --> 00:14:58.012
&gt;&gt; Brian Holt: Yeah,
I don't need the backslashes.

218
00:14:58.012 --> 00:15:01.957
I can just put the quotes,
that's what it is.

219
00:15:01.957 --> 00:15:07.516
Okay, so,
[COUGH] what this is gonna do is it's

220
00:15:07.516 --> 00:15:12.507
gonna hit everything in your js directory

221
00:15:12.507 --> 00:15:17.800
that has a js or
a jsx kind of file extension.

222
00:15:17.800 --> 00:15:20.830
So this would be useful, for example,
if someone didn't want to install Prettier

223
00:15:20.830 --> 00:15:24.580
and was working on your project or you
could put it as maybe some sort of like

224
00:15:24.580 --> 00:15:28.388
Precommit hook, you could put it
into your continuous integration.

225
00:15:28.388 --> 00:15:31.978
So anything that you're gonna require your
users to do, it's probably good to have

226
00:15:31.978 --> 00:15:35.160
kind of an escape hatch if they don't
want to install all of your tooling for

227
00:15:35.160 --> 00:15:36.390
them inside of your editor.

228
00:15:36.390 --> 00:15:38.810
So what we're gonna do is
we're actually going to.

229
00:15:38.810 --> 00:15:40.210
This is a pain to remember, right?

230
00:15:40.210 --> 00:15:41.595
Slash impossible to remember.

231
00:15:41.595 --> 00:15:44.100
[LAUGH] Like,
I had to look at my notes here to get it.

232
00:15:44.100 --> 00:15:49.152
So we're going to put this
inside of our project directory.

233
00:15:49.152 --> 00:15:51.767
So we're gonna go into package.json.

234
00:15:51.767 --> 00:15:55.625
And here, I have scripts, and you can see
that there's already one here for the API,

235
00:15:55.625 --> 00:15:58.157
which we'll run later,
don't worry about it for now.

236
00:15:58.157 --> 00:16:02.171
We're gonna put another one
here that says, format,

237
00:16:02.171 --> 00:16:06.893
and we're just going to put that
thing that we just already had.

238
00:16:10.337 --> 00:16:12.666
&gt;&gt; Brian Holt: But you're gonna
have to escape those backslashes.

239
00:16:19.574 --> 00:16:22.324
&gt;&gt; Brian Holt: Let's do View &gt; Word Wrap.

240
00:16:26.717 --> 00:16:29.712
&gt;&gt; Brian Holt: So now,
I'll let you finish.

241
00:16:29.712 --> 00:16:32.390
Well, let me show you,
then I'll come back and let you finish it.

242
00:16:32.390 --> 00:16:36.940
And then we'll take
a quick break after that.

243
00:16:36.940 --> 00:16:40.100
I can come to the command line and
I can say, yarn.

244
00:16:42.460 --> 00:16:44.690
We're gonna use yarn for this.

245
00:16:44.690 --> 00:16:46.399
And then,
all I have to say is yarn format.

246
00:16:48.450 --> 00:16:50.210
And it's gonna go through and
run that command, right?

247
00:16:50.210 --> 00:16:54.580
So I can save that Bash command into
the package.json and then run it.

248
00:16:54.580 --> 00:16:57.240
This is the same thing as saying,
mpm run format.

249
00:16:58.650 --> 00:17:05.350
Same diff, but this is nice now because I
have kind of like preemptively saved this.

250
00:17:05.350 --> 00:17:06.889
And so that we can always use it.

251
00:17:08.750 --> 00:17:09.367
That make sense?

252
00:17:12.011 --> 00:17:12.898
&gt;&gt; Brian Holt: Cool.

253
00:17:15.450 --> 00:17:17.900
&gt;&gt; Brian Holt: And what's nice is we don't
have to go and tell it every single file.

254
00:17:17.900 --> 00:17:20.323
It's always just gonna pick up
everything in that js directory.

255
00:17:24.553 --> 00:17:26.551
&gt;&gt; Brian Holt: Now, to be honest,
for the rest of the day,

256
00:17:26.551 --> 00:17:29.961
we're not gonna use this because our
editor is already configured for it.

257
00:17:29.961 --> 00:17:33.710
So that's nice.

