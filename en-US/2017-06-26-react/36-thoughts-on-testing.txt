[00:00:00]
>> Brian Holt: This is a good time to talk about my opinion on testing. [LAUGH] Everything I'm about to tell you is purely like the doctrine of Brian Holt and not necessarily the doctrine of the community, so take that with a whole bag of salt, just be careful with what I tell you here.

[00:00:16]
Cuz I'll even say that it's not necessarily shared by the community at large. I don't do a ton of testing on my React components, right. And the reason being is that every company that I have worked at, the UI was constantly in a state of flux. We were constantly bringing in new components and taking out other components and just kind of like doing stuff like that willy nilly just because our interfaces were always changing.

[00:00:36]
We were always trying new things, we were doing AV testing. We were doing all sorts of these things that made it so, it's really tough to nail down, this is UI and it's gonna stay that way for a long time. Writing good test cases takes a while. It takes a decent amount of effort to get a decent test case out.

[00:00:52]
So with these react components, these presentational parts of react, we kind of chose for the most part to not test them unless they were consistently breaking, or they were extremely important, or something like that. Now, what we would test is we would test the business logic behind it, and we would write tons of tests for that.

[00:01:13]
So, maybe we're not testing the component that shows the payment information, but we would test the module behind it, that had all the business logic. We would test the hell out of that. So, that's kind of up to you. But we found, when we were writing these tests, these presentational tests, that we would write these tests and then they would be used for a month and they would go away.

[00:01:37]
When I write a test, I want it to live for a long time and be useful for a long time. So this is purely according to your particular use case. Like if you're writing bank code and banks don't change their UI a whole lot, makes a ton of sense to test everything.

[00:01:54]
But if you're doing a ton of AB testing, you might want to be careful about what you choose to test, so up to you.
>> Brian Holt: Never run any tests, that's what I'm trying to say.
>> Audience 1: [LAUGH]
>> Brian Holt: I'm just kidding, [LAUGH] just kidding, well, sort of.
>> Audience 1: Maybe it makes sense, I'll throw it out there, that can dots, actually, can't see dots as a course that goes into this stuff in quite a bit more detail if you're interested in the different paths you can take with testing, especially with snapshots.

[00:02:33]

>> Brian Holt: Yeah, I know, it's pretty awesome. I've watched pieces of it. Yeah.
>> Audience 2: Can I ask you a question about what find(ShowCard) returns, it's an array of what?
>> Brian Holt: It's gonna return an array of, well, let's see, I can show you from the snapshot. Its gonna be array these, its like they're like stubs, pretty much.

[00:03:05]

>> Audience 3: So if we wanted to invalidate that it's the correct shows were being returned, we could Dot into those and compare titles or something.
>> Brian Holt: The answer is I believe so. I've never tried, so.
>> Brian Holt: That would make sense.
>> Brian Holt: Yeah, I think it's an enzyme component. And there is some introspection you can do that, say, this is the stub.

[00:03:33]
This is the props being passed in. I think you can validate those props.
>> Brian Holt: Cool, any questions on testing? We will come back and we'll do more testing later and we're gonna break our test several times before the end of the course. So that's fun.

