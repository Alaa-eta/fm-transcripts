WEBVTT

1
00:00:00.170 --> 00:00:02.792
&gt;&gt; Brian Holt: So I just push up v3-7.

2
00:00:02.792 --> 00:00:05.710
So if you are following along,
that's where we are.

3
00:00:05.710 --> 00:00:08.770
And we are now going to fix
all of our linting errors.

4
00:00:08.770 --> 00:00:12.570
And hopefully from here on out, I won't
make you ignore lint errors anymore.

5
00:00:12.570 --> 00:00:18.139
Believe me, it pains my soul to see the
red outline on there, I just can't even.

6
00:00:18.139 --> 00:00:22.073
So I'm gonna help you
also be able to not even.

7
00:00:24.093 --> 00:00:29.203
&gt;&gt; Brian Holt: So what's going on here is,
there is a package that used

8
00:00:29.203 --> 00:00:34.967
to be included with React in and
of itself, called PropTypes,

9
00:00:34.967 --> 00:00:40.000
as of 15.5 they are no
longer packaged with React.

10
00:00:40.000 --> 00:00:44.497
This is an effort to kind of trim down
the internal library of what React

11
00:00:44.497 --> 00:00:46.643
includes and doesn't include.

12
00:00:46.643 --> 00:00:50.376
It's still isn't quite a clean break
because there are certain parts of React

13
00:00:50.376 --> 00:00:53.270
that still rely on PropTypes if
you wanna be able to use them.

14
00:00:55.260 --> 00:00:57.490
So that's an ongoing effort.

15
00:00:57.490 --> 00:00:59.110
But they stripped out PropTypes and

16
00:00:59.110 --> 00:01:02.390
they also stripped out
something called create class.

17
00:01:02.390 --> 00:01:06.650
Which we are not using at all
today because its been deprecated.

18
00:01:06.650 --> 00:01:08.590
And they stripped out
a couple of other things.

19
00:01:08.590 --> 00:01:11.190
So I'm gonna show you first
how to use PropTypes.

20
00:01:11.190 --> 00:01:12.200
Because it is useful for

21
00:01:12.200 --> 00:01:15.830
you to know, eventually we're
going to get into using Flow.

22
00:01:15.830 --> 00:01:19.042
Once we get to using Flow,

23
00:01:19.042 --> 00:01:25.086
that kind of supersedes our need for
PropTypes.

24
00:01:25.086 --> 00:01:29.010
But I would say that using PropTypes
is more popular than using Flow.

25
00:01:29.010 --> 00:01:32.300
So it's useful for you to have that
knowledge and then we can get rid of them.

26
00:01:33.550 --> 00:01:40.558
So I want you to go and
say, import shape and

27
00:01:40.558 --> 00:01:45.456
string from, prop-types.

28
00:01:45.456 --> 00:01:50.540
So, prop-types is the actual library,

29
00:01:50.540 --> 00:01:52.890
that used to be included with React,
in and of itself.

30
00:01:54.120 --> 00:01:59.775
And only, a month or two ago,
was it stripped out.

31
00:01:59.775 --> 00:02:01.930
Okay?

32
00:02:01.930 --> 00:02:06.176
Then what we're gonna do underneath here,
underneath ShowCard,

33
00:02:06.176 --> 00:02:08.784
we're gonna say ShowCard.propTypes.

34
00:02:14.808 --> 00:02:18.220
&gt;&gt; Brian Holt: And I guess I should say
PropTypes are by no means required.

35
00:02:19.550 --> 00:02:21.510
Notice this is a Linting error, right?

36
00:02:22.640 --> 00:02:25.650
And our app still builds,
it still runs just fine.

37
00:02:25.650 --> 00:02:28.400
What PropTypes are gonna do is
kinda two-fold thing for you.

38
00:02:28.400 --> 00:02:33.900
First of all, it's going to be
a runtime check for you to see if

39
00:02:33.900 --> 00:02:37.920
you're including the right
properties into showcard.

40
00:02:37.920 --> 00:02:40.262
So what we're gonna do here
is we're gonna say show,

41
00:02:42.537 --> 00:02:43.206
&gt;&gt; Brian Holt: Shape,

42
00:02:43.206 --> 00:02:47.313
and then we're going to
identify all the different

43
00:02:47.313 --> 00:02:50.570
properties that we expect to be on show.

44
00:02:51.790 --> 00:02:54.170
So we expect there to be a poster.

45
00:02:54.170 --> 00:02:56.424
That's gonna be string.isRequired.

46
00:02:58.800 --> 00:03:05.330
We're gonna do title, which is also
going to be a string.isRequired.

47
00:03:05.330 --> 00:03:08.690
Then we're gonna do year,
which is a string as well,

48
00:03:08.690 --> 00:03:11.240
and that's gonna be required.

49
00:03:12.930 --> 00:03:17.519
And description,
which is going to be a string.isRequired.

50
00:03:18.590 --> 00:03:21.408
As well as the show itself is required.

51
00:03:25.060 --> 00:03:26.740
&gt;&gt; Brian Holt: No more linting errors,
right?

52
00:03:26.740 --> 00:03:27.770
They all went away.

53
00:03:27.770 --> 00:03:29.690
So let's about what's
actually PropTypes are.

54
00:03:31.420 --> 00:03:32.850
So we did shape, right?

55
00:03:32.850 --> 00:03:34.080
Shape just means object.

56
00:03:36.210 --> 00:03:36.710
Right?

57
00:03:38.511 --> 00:03:42.432
&gt;&gt; Brian Holt: And I totally could
just do, I think this works.

58
00:03:45.299 --> 00:03:46.811
&gt;&gt; Brian Holt: So
I could do shape like that.

59
00:03:54.954 --> 00:03:57.739
&gt;&gt; Brian Holt: Yep, yep, yep, yep,
okay so we could do this, right, and

60
00:03:57.739 --> 00:04:01.399
you could just say its gonna be an object,
and you would do this if you had a case of

61
00:04:01.399 --> 00:04:05.805
like it was an object and you didn't know
what it was gonna look like coming in.

62
00:04:05.805 --> 00:04:07.910
However we know what it's
gonna look like and so

63
00:04:07.910 --> 00:04:11.110
we're also going to identify the things
that are inside of shape, right?

64
00:04:11.110 --> 00:04:14.290
So we're gonna identify poster,
title, year and description.

65
00:04:15.870 --> 00:04:21.351
If you do not put an isRequired then as
you might imagine it's optional right,

66
00:04:21.351 --> 00:04:22.846
so it doesn't mean,

67
00:04:22.846 --> 00:04:28.176
it means that it's not going to send you
an error saying hey you forgot this.

68
00:04:30.695 --> 00:04:35.027
&gt;&gt; Brian Holt: I kind of wish that they
had done, isRequired as being the default,

69
00:04:35.027 --> 00:04:36.500
and then isOptional.

70
00:04:36.500 --> 00:04:37.857
Because usually things are required.

71
00:04:40.902 --> 00:04:42.899
&gt;&gt; Brian Holt: Also,
according to the Airbnb config,

72
00:04:42.899 --> 00:04:45.610
if it's optional you have to
give it a default prompt.

73
00:04:47.440 --> 00:04:48.930
And you would do default
process the same way.

74
00:04:48.930 --> 00:04:53.585
You would say like,
showcard.defaultprops equals,

75
00:04:53.585 --> 00:04:56.960
whatever you want them to be by default.

76
00:04:56.960 --> 00:04:57.673
Okay?

77
00:04:57.673 --> 00:05:01.516
Any questions and the other thing
I wanted to say about PropTypes,

78
00:05:01.516 --> 00:05:05.425
these runtime checks are not incredibly
useful, their kind of useful in

79
00:05:05.425 --> 00:05:10.060
depth it'll tell you in the consoles like,
hey you forgot this, right?

80
00:05:10.060 --> 00:05:13.400
The real use for
this is that it's documentation, right?

81
00:05:13.400 --> 00:05:15.930
Anyone that comes and then looks at this
component is gonna look instantly down at

82
00:05:15.930 --> 00:05:18.180
the PropTypes and say, okay,
it's gonna take in the show and

83
00:05:18.180 --> 00:05:20.210
it's gonna have poster,
title, year and description.

84
00:05:20.210 --> 00:05:24.670
It's just like a summary of what the API
for that particular component is.

85
00:05:24.670 --> 00:05:28.170
That is,
I'm gonna say 95% of the used case.

86
00:05:28.170 --> 00:05:32.006
Because again, runtime checks,
by the time it's in run time,

87
00:05:32.006 --> 00:05:34.219
it's either broken or not, right?

88
00:05:34.219 --> 00:05:36.640
Sometimes it'll be useful as like,
I didn't know it was including that.

89
00:05:38.750 --> 00:05:45.600
Like what happens if I say, foo and
it's a string that's required, right?

90
00:05:47.580 --> 00:05:51.426
So now if I go into here
&gt;&gt; Brian Holt: And I refresh.

91
00:05:54.075 --> 00:05:56.080
&gt;&gt; Brian Holt: Yeah,
ignore the show.foo thing.

92
00:05:56.080 --> 00:05:57.470
We'll worry about that later.

93
00:06:01.024 --> 00:06:02.213
&gt;&gt; Brian Holt: Maybe let's do it this way.

94
00:06:11.447 --> 00:06:12.430
&gt;&gt; Brian Holt: Now, refresh again.

95
00:06:14.520 --> 00:06:15.360
Okay, so right here.

96
00:06:15.360 --> 00:06:16.960
This is what I'm talking about.

97
00:06:16.960 --> 00:06:19.950
It's gonna say hey,
you said foo was required.

98
00:06:23.271 --> 00:06:24.810
No, ignore that too.

99
00:06:31.490 --> 00:06:34.071
&gt;&gt; Brian Holt: It should tell you, it
should give you an error saying I wonder

100
00:06:34.071 --> 00:06:36.420
if it's just being covered up by ESLint.

101
00:06:36.420 --> 00:06:37.344
But in any case,

102
00:06:37.344 --> 00:06:42.566
it should send you an error into the,
&gt;&gt; Brian Holt: Console saying,

103
00:06:42.566 --> 00:06:44.360
hey, this is not there and
it should be there.

104
00:06:44.360 --> 00:06:46.500
So that's kinda the point.

105
00:06:47.860 --> 00:06:48.590
Yeah?

106
00:06:48.590 --> 00:06:51.645
&gt;&gt; Speaker 2: Can you give us
an example of default PropTypes?

107
00:06:53.645 --> 00:06:55.180
&gt;&gt; Brian Holt: Yeah, we will see if I
can remember off the top of my head.

108
00:06:55.180 --> 00:06:56.784
I think it just looks like this.

109
00:06:58.703 --> 00:07:04.427
&gt;&gt; Brian Holt: And
we will be using them later for sure.

110
00:07:16.971 --> 00:07:18.452
&gt;&gt; Brian Holt: And
let's just like put it out here for fun.

111
00:07:44.089 --> 00:07:46.710
&gt;&gt; Brian Holt: So default props,
I think that's what it should be.

112
00:07:51.910 --> 00:07:55.920
Yeah, so you can see right there it's
rendering out stuff right there.

113
00:07:55.920 --> 00:07:56.491
Right, so

114
00:07:56.491 --> 00:08:01.000
it's just saying hey if you don't pass in
these props this is the default PropType.

115
00:08:02.500 --> 00:08:05.070
So again these are not
technically required by React but

116
00:08:05.070 --> 00:08:08.720
they are required by the Airbnb ES
centrals that we're using.

117
00:08:08.720 --> 00:08:11.100
The reason being is that it just

118
00:08:11.100 --> 00:08:13.344
eliminates a class of
problems that you can have.

119
00:08:13.344 --> 00:08:14.810
Right?
Like how many times have you gone to

120
00:08:14.810 --> 00:08:19.000
say like props.show.description.two
uppercase and

121
00:08:19.000 --> 00:08:24.830
it was undefined instead of being
a string and you gotta run time error.

122
00:08:25.890 --> 00:08:27.840
So it just eliminates that class of error.

123
00:08:27.840 --> 00:08:31.300
In other words, it's kind of annoying but
ultimately useful

