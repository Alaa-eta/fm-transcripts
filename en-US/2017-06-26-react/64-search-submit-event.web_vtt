WEBVTT

1
00:00:00.560 --> 00:00:03.052
&gt;&gt; Brian Holt: So definitely
something that we would wanna do,

2
00:00:03.052 --> 00:00:05.617
as we wanna make search read from as well,
right?

3
00:00:05.617 --> 00:00:07.752
Cuz now we have search term in Redux and

4
00:00:07.752 --> 00:00:10.440
we also have search as state of search,
right?

5
00:00:11.980 --> 00:00:16.720
So let's go to search.jsx.

6
00:00:16.720 --> 00:00:19.951
And let's go break all of our tests again,
which is exactly what we're gonna do.

7
00:00:21.330 --> 00:00:23.810
So, we're gonna import.

8
00:00:26.700 --> 00:00:29.042
Connect from react-redux.

9
00:00:34.025 --> 00:00:36.470
&gt;&gt; Brian Holt: Okay, so we are actually
going to use a context here.

10
00:00:36.470 --> 00:00:38.280
So we're gonna see how to use context.

11
00:00:40.260 --> 00:00:42.433
Okay.
So we have Search,

12
00:00:42.433 --> 00:00:45.895
which,
&gt;&gt; Brian Holt: Okay,

13
00:00:45.895 --> 00:00:49.710
that's what we're doing wrong here.

14
00:00:51.520 --> 00:00:52.020
Yep.

15
00:00:54.847 --> 00:00:56.706
&gt;&gt; Brian Holt: So,
sideline this for a second.

16
00:00:56.706 --> 00:00:59.950
We actually need to go back to Landing for
just a second and finish doing this.

17
00:00:59.950 --> 00:01:03.660
Cuz the problem is we have
no way of actually getting

18
00:01:03.660 --> 00:01:07.230
to the search page with our search term,
right?

19
00:01:08.780 --> 00:01:13.179
So what we wanna do here is we're gonna
be import React, import that, and

20
00:01:13.179 --> 00:01:16.430
then we're gonna import link which we did.

21
00:01:16.430 --> 00:01:17.950
We're going to import object.

22
00:01:21.966 --> 00:01:26.080
&gt;&gt; Brian Holt: from 'prop-types' which
I'll show you why in just a second.

23
00:01:28.280 --> 00:01:30.354
And we have setSearchTerm,
that's all good.

24
00:01:30.354 --> 00:01:37.560
We're gonna turn Landing into a class now
because we're gonna have to have methods.

25
00:01:37.560 --> 00:01:42.820
So class, let's just do it this way.

26
00:01:42.820 --> 00:01:46.691
class Landing extends Component.

27
00:01:52.133 --> 00:01:53.930
&gt;&gt; Brian Holt: You have to
import that up here as well.

28
00:01:58.094 --> 00:01:59.740
&gt;&gt; Brian Holt: Okay,
it's gonna have a render method,

29
00:02:03.320 --> 00:02:04.800
&gt;&gt; Brian Holt: Which is just going to,

30
00:02:06.327 --> 00:02:08.091
&gt;&gt; Brian Holt: Return that.

31
00:02:09.929 --> 00:02:16.329
&gt;&gt; Brian Holt: Okay, and
then it needs to have these props.

32
00:02:19.552 --> 00:02:21.180
&gt;&gt; Brian Holt: Which we're
going to have up here.

33
00:02:22.840 --> 00:02:25.420
So props are that.

34
00:02:29.849 --> 00:02:32.870
&gt;&gt; Brian Holt: Again, I just love
to sing the praises of prettier.

35
00:02:32.870 --> 00:02:34.729
This is super ugly formatted, right?

36
00:02:37.886 --> 00:02:40.564
&gt;&gt; Brian Holt: But the nice thing
about it is as soon as I save,

37
00:02:40.564 --> 00:02:45.179
prettier just rescues me and fixes all
of my indentations and things like that.

38
00:02:45.179 --> 00:02:46.430
I really like that.

39
00:02:48.884 --> 00:02:55.097
&gt;&gt; Brian Holt: So now, we have to refer to
props as this.props, so this.props there.

40
00:02:58.939 --> 00:03:00.387
&gt;&gt; Brian Holt: And why did you do that?

41
00:03:06.893 --> 00:03:08.084
&gt;&gt; Brian Holt: There we go.

42
00:03:14.233 --> 00:03:15.838
&gt;&gt; Brian Holt: It'd be nice if
those were on multiple lines.

43
00:03:17.961 --> 00:03:19.727
&gt;&gt; Brian Holt: Cool.

44
00:03:24.935 --> 00:03:28.010
&gt;&gt; Brian Holt: So,
now we've refactored to be an ES6 class.

45
00:03:29.500 --> 00:03:33.280
Now what we want to do is,
any time the user hits enter in landing,

46
00:03:33.280 --> 00:03:36.800
we want to route them to the search page,
right?

47
00:03:39.050 --> 00:03:44.365
So, the way we're gonna have to do
that is we're gonna have to listen for

48
00:03:44.365 --> 00:03:45.944
enter keys, right?

49
00:03:45.944 --> 00:03:50.184
And as soon as they hit enter, we're going
to change the location from the landing

50
00:03:50.184 --> 00:03:51.910
page to the search page, right?

51
00:03:53.670 --> 00:03:59.245
So the way you do that is
you have to get access

52
00:03:59.245 --> 00:04:04.372
to what's called the history object and

53
00:04:04.372 --> 00:04:12.532
so you're gonna say static
contextTypes = history: object.

54
00:04:18.703 --> 00:04:22.016
&gt;&gt; Brian Holt: One is just a good idea
to declare that this component has

55
00:04:22.016 --> 00:04:24.970
a dependency on this context item.

56
00:04:24.970 --> 00:04:29.320
But the other thing is,
unless you declare to react as like, hey,

57
00:04:29.320 --> 00:04:31.500
I'm gonna be looking for
this context item.

58
00:04:31.500 --> 00:04:34.350
React actively hides context from you.

59
00:04:34.350 --> 00:04:39.034
The reason why is, it does not want you
to use it, unless you explicitly mean to.

60
00:04:39.034 --> 00:04:43.890
So it's going to force you to say,
no, React, I actually do want history.

61
00:04:43.890 --> 00:04:47.850
Otherwise, if I say this.context.history,
despite the fact that it's actually

62
00:04:47.850 --> 00:04:50.350
technically there,
it's not gonna let me access it.

63
00:04:50.350 --> 00:04:54.470
So you actually have to opt into that.

64
00:05:00.800 --> 00:05:01.510
&gt;&gt; Brian Holt: Okay.

65
00:05:02.840 --> 00:05:05.972
So the way we're going to make this work.

66
00:05:05.972 --> 00:05:10.656
And I find this to be a useful
way of handling events,

67
00:05:10.656 --> 00:05:15.661
in particular with keyboards,
is you can actually just

68
00:05:15.661 --> 00:05:21.427
have a form above it and
then say onSubmit, this.goToSearch.

69
00:05:25.093 --> 00:05:26.560
&gt;&gt; Brian Holt: I will say,
this is not the only way to do it.

70
00:05:26.560 --> 00:05:28.200
This is just one way
I've found nice to do it.

71
00:05:41.324 --> 00:05:42.310
&gt;&gt; Brian Holt: Okay?

72
00:05:42.310 --> 00:05:44.140
And now we just need to write
this goToSearch function.

73
00:05:49.973 --> 00:05:51.960
&gt;&gt; Brian Holt: So goToSearch.

74
00:05:51.960 --> 00:05:53.730
goToSearch.

75
00:05:53.730 --> 00:05:54.970
We're gonna make it an arrow function.

76
00:05:54.970 --> 00:05:56.951
Because it's going to refer
to something on context.

77
00:05:56.951 --> 00:06:03.140
So it's gonna be equal
to event: Synthetic.

78
00:06:04.430 --> 00:06:06.690
SyntheticEvent.

79
00:06:06.690 --> 00:06:07.190
Like that.

80
00:06:11.358 --> 00:06:14.793
&gt;&gt; Brian Holt: And then the first thing
we're gonna say is event.preventDefault.

81
00:06:14.793 --> 00:06:17.575
I'm sure many of you
have done that before.

82
00:06:17.575 --> 00:06:24.703
This is going to prevent
the form from submitting,

83
00:06:24.703 --> 00:06:29.188
and then we're gonna say this.

84
00:06:32.744 --> 00:06:33.537
&gt;&gt; Brian Holt: I didn't even use that.

85
00:06:39.078 --> 00:06:42.278
&gt;&gt; Brian Holt: Well, yeah, okay.

86
00:06:42.278 --> 00:06:47.870
We actually don't even need
the contextTypes here.

87
00:06:47.870 --> 00:06:52.360
I forgot that react router changed
the way that they do context types.

88
00:06:52.360 --> 00:06:54.743
So, go ahead and delete that and
delete the object from prop-types.

89
00:06:59.825 --> 00:07:01.836
&gt;&gt; Brian Holt: And instead you're
gonna say this.props.history.

90
00:07:01.836 --> 00:07:07.195
So the way that used to work with
react router like the three and

91
00:07:07.195 --> 00:07:13.750
before is that you had to opt in and
use context types access history.

92
00:07:13.750 --> 00:07:18.460
Now it's actually injected to every route.

93
00:07:18.460 --> 00:07:20.599
Because Landing is a route.

94
00:07:20.599 --> 00:07:21.990
It has access to history.

95
00:07:23.170 --> 00:07:27.015
So we're gonna say this.props.history.push

96
00:07:30.504 --> 00:07:33.343
&gt;&gt; Brian Holt: /search.

97
00:07:36.580 --> 00:07:38.212
&gt;&gt; Brian Holt: Okay.

98
00:07:38.212 --> 00:07:40.402
This is gonna say hey,
I don't know what history is.

99
00:07:40.402 --> 00:07:42.460
This is what flow is gonna say.

100
00:07:44.340 --> 00:07:46.930
Luckily we can type that pretty well.

101
00:07:47.980 --> 00:07:52.698
So come up here and say import type,

102
00:07:53.902 --> 00:07:57.928
&gt;&gt; Brian Holt: RouterHistory, yep,

103
00:07:57.928 --> 00:08:05.381
RouterHistory from react-router-dom.

104
00:08:05.381 --> 00:08:10.870
And then we can say history
is a RouterHistory type.

105
00:08:13.430 --> 00:08:15.469
&gt;&gt; Brian Holt: That fixes everything.

106
00:08:15.469 --> 00:08:17.690
Yeah.

107
00:08:17.690 --> 00:08:20.540
&gt;&gt; Speaker 2: There's
a few different things.

108
00:08:21.540 --> 00:08:23.560
Could you use a redirect component?

109
00:08:24.600 --> 00:08:25.630
&gt;&gt; Brian Holt: Totally could.

110
00:08:25.630 --> 00:08:31.410
So there's an imperative way and
a declarative way of doing it, so react

111
00:08:31.410 --> 00:08:36.260
router has a redirect component that if

112
00:08:36.260 --> 00:08:40.050
a redirect component ever gets rendered,
then it redirects somewhere else.

113
00:08:41.190 --> 00:08:46.868
I'm a little uneasy with
that paradigm cuz you do

114
00:08:46.868 --> 00:08:54.221
something like if redirect or
then redirect this way.

115
00:08:54.221 --> 00:08:57.985
Yeah, I prefer to just use history
directly but that's up to you.

116
00:09:02.361 --> 00:09:06.432
&gt;&gt; Speaker 2: Is using Redux eliminate the
need to use local react component state

117
00:09:06.432 --> 00:09:11.370
since each component can subscribe to
the particular portion of the Redux state?

118
00:09:12.680 --> 00:09:14.750
&gt;&gt; Brian Holt: That is up to you.

119
00:09:14.750 --> 00:09:18.483
I'm gonna say that the way I choose
to write react when I have Redux,

120
00:09:18.483 --> 00:09:21.740
is I kinda separate two
different kinds of state.

121
00:09:21.740 --> 00:09:26.160
I have application state, and
I have view state, right?

122
00:09:26.160 --> 00:09:30.792
View state is something that's
particular to the presentation.

123
00:09:30.792 --> 00:09:34.310
It's gonna be, is this in focus or
where am I scrolling?

124
00:09:34.310 --> 00:09:37.350
Those sorts of things that have
to do with how I'm presenting

125
00:09:37.350 --> 00:09:39.180
my particular component.

126
00:09:39.180 --> 00:09:40.630
I still have that live in react state.

127
00:09:40.630 --> 00:09:45.942
And then application state is
things that came back from the API,

128
00:09:45.942 --> 00:09:51.585
and those sorts of things that could
be used across the application.

129
00:09:51.585 --> 00:09:53.850
It's kinda up to you
how you divvy that up.

130
00:09:53.850 --> 00:09:57.555
I would say that the dividing
between application and

131
00:09:57.555 --> 00:10:02.034
view state is a pretty common way
to do it, but totally up to you.

132
00:10:02.034 --> 00:10:06.910
&gt;&gt; Speaker 2: Yeah, some people
are saying that a global app state versus

133
00:10:06.910 --> 00:10:11.794
the local component, use set state for
the local component state.

134
00:10:11.794 --> 00:10:12.300
&gt;&gt; Brian Holt: Yep.

135
00:10:12.300 --> 00:10:14.756
&gt;&gt; Speaker 2: Versus,
yeah, the global app state.

136
00:10:14.756 --> 00:10:17.178
&gt;&gt; Brian Holt: Totally.

137
00:10:23.045 --> 00:10:26.230
&gt;&gt; Speaker 2: Can't you use
history directly from the router?

138
00:10:29.613 --> 00:10:31.490
&gt;&gt; Brian Holt: I mean,
this works this way.

139
00:10:32.890 --> 00:10:33.495
I think this is a good way of doing it.

140
00:10:33.495 --> 00:10:40.050
There's other ways of accessing
history but I think this is good.

