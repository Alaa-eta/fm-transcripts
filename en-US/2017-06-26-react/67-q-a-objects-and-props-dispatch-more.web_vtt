WEBVTT

1
00:00:00.470 --> 00:00:02.453
&gt;&gt; Brian Holt: Go ahead.
&gt;&gt; Speaker 2: Quick question,

2
00:00:02.453 --> 00:00:09.640
what are the inputs and outputs of
mapStateToProps in dispatch to props?

3
00:00:09.640 --> 00:00:13.733
What's sort of the overall
purpose of them?

4
00:00:13.733 --> 00:00:17.646
I mean, what are they doing?
&gt;&gt; Brian Holt: They're returning objects,

5
00:00:17.646 --> 00:00:18.248
right?

6
00:00:18.248 --> 00:00:20.117
Right, this is an object.

7
00:00:20.117 --> 00:00:26.370
So if you want to make this a little bit
more verbose, it's gonna look like this.

8
00:00:35.789 --> 00:00:36.533
&gt;&gt; Brian Holt: All right, this is what

9
00:00:36.533 --> 00:00:37.666
it actually looks like.
&gt;&gt; Speaker 2: And

10
00:00:37.666 --> 00:00:43.114
who eventually uses that object?
&gt;&gt; Brian Holt: So this is the object, and

11
00:00:43.114 --> 00:00:50.810
you remember how we did something like,
&gt;&gt; Brian Holt: This right here, ...show.

12
00:00:50.810 --> 00:00:53.940
What's taking this object and
spreading it over the component,

13
00:00:53.940 --> 00:00:56.140
that's precisely what's
happening here at the search.

14
00:00:56.140 --> 00:01:02.390
It's taking this object and
spreading this object over search, right?

15
00:01:02.390 --> 00:01:05.760
So everything that I put in here is
going to be passed as a prop to search.

16
00:01:07.800 --> 00:01:12.795
So search term is now
a prop of search because of

17
00:01:12.795 --> 00:01:14.090
this.
&gt;&gt; Speaker 2: Okay.

18
00:01:14.090 --> 00:01:16.376
&gt;&gt; Brian Holt: So if I put blah: 5, right,

19
00:01:16.376 --> 00:01:21.314
now I'd have inside of props,
I could reference props.blah,

20
00:01:21.314 --> 00:01:23.425
and I would get 5, right?

21
00:01:23.425 --> 00:01:27.104
It's just passing props into search.
&gt;&gt; Speaker 2: Okay, great, and

22
00:01:27.104 --> 00:01:31.918
then the dispatch is?
&gt;&gt; Brian Holt: It's a function that

23
00:01:31.918 --> 00:01:37.200
Redux gives you to pass
actions into the reducers.

24
00:01:37.200 --> 00:01:42.354
That make sense?
&gt;&gt; Speaker 3: Does

25
00:01:42.354 --> 00:01:47.447
that have use beyond
wiring up event handlers

26
00:01:47.447 --> 00:01:52.970
usually?
&gt;&gt; Brian Holt: What is it?

27
00:01:52.970 --> 00:01:55.100
&gt;&gt; Speaker 3: mapDispatchToProps,

28
00:01:55.100 --> 00:01:59.560
does it have use beyond
wiring up event handlers,

29
00:01:59.560 --> 00:02:02.640
no?
&gt;&gt; Brian Holt: Well, mapDispatchToProps,

30
00:02:02.640 --> 00:02:08.985
does it have more uses than that?
&gt;&gt; Brian Holt: I mean,

31
00:02:08.985 --> 00:02:11.856
you can kick off asynchronous actions,
and we'll talk

32
00:02:11.856 --> 00:02:16.433
about that tomorrow with asynch actions.
&gt;&gt; Brian Holt: But

33
00:02:16.433 --> 00:02:18.626
it's gonna be kicking off actions.

34
00:02:18.626 --> 00:02:21.313
That's the point of mapDispatchToProps,

35
00:02:21.313 --> 00:02:25.596
is it's translating events in the UI
to actions into the Redux store,

36
00:02:25.596 --> 00:02:30.350
that's the whole purpose.
&gt;&gt; Speaker 3: Does the redux state

37
00:02:30.350 --> 00:02:35.280
object get too complicated over time?
&gt;&gt; Brian Holt: I'm gonna show you how to

38
00:02:35.280 --> 00:02:37.120
silo it tomorrow.

39
00:02:38.120 --> 00:02:42.520
So that despite the fact that that tree
can become quite large, you're only gonna

40
00:02:42.520 --> 00:02:47.380
be working on very small slices at a time,
so it keeps it pretty manageable.

41
00:02:47.380 --> 00:02:51.590
It can get complicated,
but with discipline and

42
00:02:51.590 --> 00:02:56.250
kind of enforcing some rules on yourself,
it can be fine, even with giant stores.

