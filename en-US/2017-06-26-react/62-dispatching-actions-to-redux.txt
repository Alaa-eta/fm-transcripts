[00:00:00]
>> Brian Holt: Okay, so now we have searchTerm, which is gonna be injected as props into Landing, right? So now Landing has the ability to read from its props, and it's gonna be reading searchTerm, which is a string, right? Cuz now we're back into flow land.
>> Brian Holt: And then what we're gonna do here in the input is, we're gonna say value={props.searchTerm}.

[00:00:36]

>> Brian Holt: So just to prove to you this works, I'm just gonna go into my reducers just super quick, change this to something and Save. Now if I go back to Landing here,
>> Brian Holt: Notice, yeah, whatever, ignore your console for the moment. Notice that something is inputted there into the box, right?

[00:01:00]
So that's being read from Redux. The problem that we have again is, what happens if I try to type in it? Nothing happens because it's continuing to read from Redux and nothing is updating Redux, right? We wrote all that set searchTerm stuff, but nowhere is it being invoked.

[00:01:16]
So let's go close that loop and make it invoke.
>> Brian Holt: Okay, so we're gonna go back to landing.jsx.
>> Brian Holt: And what we're gonna do is we're gonna make another one of these called const mapDispatchToProps. That's gonna be equal to, or it's gonna take in a dispatch,
>> Brian Holt: Which is gonna be a function.

[00:01:50]

>> Brian Holt: That is going to return an object as well.
>> Brian Holt: And this object is going to have a handleSearchTermChange, which is going gonna be a function. It takes in an event.
>> Brian Holt: And then that event is going to dispatch the results of setSearchTerm with event.target.value.
>> Brian Holt: Okay, we need to go import our setSearchTerm function, so we're gonna do that real quick.

[00:02:34]

>> Brian Holt: import { setSearchTerm } from './actionCreators'.
>> Brian Holt: And then last thing we need to do is we need to take this mapDispatchedProps and pass that into the second parameter to connect.
>> Brian Holt: I did a lot there, so let's make sure that we recount what happened, okay? I wrote this mapDispatchToProps, right?

[00:03:07]
This is going to create methods that Landing is going to be able to invoke to dispatch events to Redux, okay? That's the whole point of mapDispatchToProps is dispatching actions into Redux. It's gonna take care of all of that for us. We're going to write methods that take care of that for us, okay?

[00:03:28]
So mapDispatchToProps, it's going to return an object. And everything on this object is going to be injected as props into Landing, okay? So I have this handleSearchTerm event, or handleSearchTermChange, right, which takes in an event
>> Brian Holt: And based on that event, whatever the event.target.value is for that event, it's going to dispatch, or it's going to pass that into setSearchTerm, right?

[00:04:00]
So if we go into, you remember our action creators.
>> Brian Holt: We created this setSearchTerm action creator, right? Where you pass in a search term, and it gives you a well-formatted action, right, cool? So given a search term which is coming from event.target.value, it's going to create a new action of type setSearchTerm and payload searchTerm, right?

[00:04:27]
So this just returns an action, there's nothing magical here. Or, I don't know, depends what you define magical as. So, go back to Landing.
>> Brian Holt: That's what this does, this dispatch function is to say, here Redux, here's an action, right? It's just going to pass it into your, it's going to end up being in your root reducer.

[00:04:45]
That's where that action is going to get routed eventually, okay?
>> Speaker 2: And the event target value is what they typed up?
>> Brian Holt: Right, in fact, yeah, let's just go ahead and do that. So onChange here is gonna be props.handleSeachTermChange. We're also gonna have to declare that on our prop types.

[00:05:07]
handleSearchTermChange is going to be a function.
>> Brian Holt: Right, so maybe that's a little bit more clear now, onChange is gonna call props.handle.SearchTermChange. This got injected from here, right, from this one that we wrote down here.
>> Brian Holt: Okay, and then this got injected into Redux right here via the connect method, right?

[00:05:36]
So all the connect method really is doing is it's taking stuff, these objects, and they're injecting them into your components so they can be used as props inside of your component. That's really all connect is, there's not really a lot more to it. It's just calling, it's like I got this thing from the user.

[00:05:53]
I'm gonna call this function and inject these objects as props into this particular component.
>> Brian Holt: Okay, so that's what happens on the UI.

