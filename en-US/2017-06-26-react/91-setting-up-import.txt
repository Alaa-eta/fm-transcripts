[00:00:00]
>> Brian Holt: So, I'm gonna need you to go back to your Babel RC real quick. We have react-hot-loader/babel, and then underneath that we're going to have to add two more plug-ins right here. One of them is going to be babel-plugin-dynamic-import-webpack.
>> Brian Holt: What this is gonna do is it's just going to allow webpack to understand.

[00:00:35]
No, that's the second one, so this is the second one, the first one is this one. Babel-plugin-syntax-dynamic-import, yep, that's it. So the first one, this one right here, just lets babel understand the import syntax, right? Without this, it just throws in errors, like I'm seeing import somewhere I don't expect it, right?

[00:01:06]
The second thing is actually going to translate it to something that webpack understands, which, if you wanna know, is require.ensure. It's gonna translate our import statements to require.ensure because webpack already understands and knows what to do with require.ensure, but that's the old way of doing it. We're gonna do with the brand new way of doing it, which is import functions.

[00:01:31]

>> Brian Holt: This is a pretty new way of doing imports, but this is actually the standards way of doing it. I think it's stage three, if I remember it correctly, and I know the latest version of Chrome has already implemented dynamic import. I think it might behind a flag, but it's there, so that's cool.

