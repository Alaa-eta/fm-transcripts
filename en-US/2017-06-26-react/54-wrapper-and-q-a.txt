[00:00:00]
>> Brian: We're done with React, and people are like what? What happened? React is not really that big of a library, there's only 30 methods total that React exposes. We're pretty much done with our app in general. We haven't made this thing work yet. But that wouldn't be very hard to do.

[00:00:19]
We would just move all this state into app, right? And then, we'll distribute search term through landing and search term through search, right? We've already shown you how to refactor that so that we can make that work, right? So I'm gonna show you how to do that. You're welcome to do on your own.

[00:00:37]

>> Brian: But right now you are armed with enough knowledge to go build large applications in React, and that's amazing right? For this size of app there is absolutely no reason to introduce something like Redux. It's just wild over-engineering, like irresponsible, over engineering, right. However, it's fun to irresponsibly over-engineer things, right.

[00:01:02]
But, just keep in mind that, you can build large-scale applications, using purely just the techniques, that I just showed you how to do. So, that's why I was pretty cautious to show you, pretty much, building an entire application in React. And now we're gonna go back and refactor in to include Redux, right.

[00:01:20]
But we're done, that's really it, that's all you need to really know about React in general. So if you don't care about Redux, just turn off your live stream. No, I'm just kidding. Don't tune out, there's still really cool stuff to come. In fact, I'm gonna show you some debugging techniques and I'm gonna show you perf tools right now.

[00:01:36]
So I'm going to show you some advanced kind of stuff that you can do about React. Any questions about React in general, before we move on to more of how to debug it and how to profile it?
>> Brian: Like really it's just a process of passing down props, setting state.

[00:01:58]
That's really, and like the lifecycle method, that's the power of React. And again one of my favorite parts about it, it's a notable library. You can know pretty much everything about React. Does anyone here want to assert that they know everything about jQuery? Does anyone even want to say that they've used every method, well maybe Mark, but I would believe that.

[00:02:18]

>> Speaker 2: Absolutely, I have used every single method including internal methods.
>> Brian: Yeah.
>> [LAUGH]
>> Brian: So there's maybe two people, there's Mark and John Resic, and that's it that have used every method in jQuery.
>> Speaker 2: Well a couple of the core team members.
>> Brian: I'm kidding, I'm sure there are literally dozens of you.

[00:02:35]
[LAUGH] Right, I have not, right.
>> Speaker 2: I know.
>> Brian: I have not. There's over 200 approaching 300 methods in jQuery I think, right? React, again has like 30. Angular One had over a hundred for sure, right? So there's very very few people have all of that in their brain all at once, right?

[00:02:58]
Whereas with React, you can really understand all of the corners of React pretty easily.
>> Speaker 2: I think the big difference with React is the fact that you don't need to know anything about the dom at all. Right, and that is the big hairy part of that JavaScript in general is,

[00:03:18]

>> Speaker 2: Dom updating, and dom methods.
>> Brian: Yeah, it's like-
>> Speaker 2: Reversing, and-
>> Brian: The imperative part of that, right? Like building trees, and things like that. All that stuff is kinda done for behind the scenes. All you need to do is you need to write functions that generate the markup that you want and that's really it, right.

[00:03:36]
I mean there's some complications with life cycle methods and things like that but you're basically just building functions that generate markup and that's about it.
>> Speaker 2: Have you ever had to use component should update for performance?
>> Brian: Yes and I'm gonna show you how right now. In fact we have one component in here that's really inefficiently updating.

[00:03:54]
And we're going to use the React Perf tools to profile that. But we're getting there. We have one more thing first, yeah.
>> Speaker 3: I'm just gonna ask what, so the basic stuff we've done so far, what percent of your time when you're writing React does that usually cover.

[00:04:09]
Is it usually like 90% that?
>> Brian: I'm gonna go with 90. Yeah, I think 90 sounds about good to me.
>> Speaker 2: Cool.
>> Brian: Nope I'm gonna go further I'm gonna say it's like 95. That last 5% is important.
>> [LAUGH]

