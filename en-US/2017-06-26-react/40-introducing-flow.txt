[00:00:00]
>> Brian Holt: This next one is a topic near and dear to my heart. I really really enjoy this part, some people really don't. I debated a lot whether or not I was going to add flow to this course. Should I add or should I not add it? Inevitably, I knew for a fact that someone was gonna say, what about typescript?

[00:00:15]
Because always someone says what about typescript? So that was one part of it. Another part of it is it does, it makes development go a little bit slower, makes it a little bit more difficult, right? But let me defend why I added Flow. First of all, I already showed you how to use React, right?

[00:00:30]
Like I showed you every piece of React that you need to know about without Flow. That's why we did the first half of the course with no Flow at all. And that so we added it part way in. What I wanna to show you how migrate a code base to Flow and secondly I wanted you to be able to build React with no Flow whatsoever.

[00:00:49]
Secondly, what I'm showing you how to write here is the best scalable architecture for React that I know how to write
>> Brian Holt: If I was gonna start a project today, no questions asked I would definitely include Flow and it would definitely make it a better code base. Like down the road I would be much happier having written that Flow code base than if I had not included it.

[00:01:12]
So this is definitely going to help you a lot in that respect. If you're gonna start a new project with this it's gonna make your code better. And more maintainable and it's going to last longer for sure. Lastly, even if you choose not to go forward with Flow or Typescript, you're gonna see a lot of stuff like when you're reading documentation and going on Stack Overflow, that just include all these things, right?

[00:01:33]
So now you're gonna know how to read these things whether or not you're actually going to actually use them. Nonetheless, everything that I've shown you how, all you have to go back and do is delete the tithe annotations and it's just gonna work as plain java script, right?

[00:01:46]
So hashtag not sorry [LAUGH]. So that's my defensive Flow. Again, you're totally welcome to not use it, but I think it's Important that you learn how to use it. And lastly, there's version one and version two of this course out there online already that you can watch that do not have Flow in it at all.

[00:02:07]
They're pure just JavaScript. So all those things are up to you. The kind of reactor that we're writing now is fine. You can totally write huge scalable apps. In fact I would say the way that we wrote and React at Netflix is pretty similar to the way that we have been writing it so far.

[00:02:27]
So in another words the tool that I'm about to introduce to you is not necessary to write large apps but React. I prefer it you'll find many people do prefer it but it's not necessary, you don't have to. So we're gonna be doing types now. We're gonna be talking about Flow and TypeScript is an amazing piece of technology.

[00:02:50]
I'm just choosing Flow because it's the one that I know, right? But TypeScript is equally awesome, does equally cool things for you. So yeah, I'm a huge fan of either piece of technology. So what is Flow? Well, JavaScript is a dynamic language, right? So it's really fast because you don't have to be constantly typing everything, typing in the sense of like adding types annotations to whatever you're writing.

[00:03:18]
However, If you do write types, you can be more assured that you're gonna not have runtime errors, right? Because you can have a static type check to go through and say, hey you're passing a string from here, to here, to here, and then you're trying to call something that's not on the string prototype here, that's gonna cause a runtime error, right?

[00:03:36]
So it's gonna force you to think through and change your code in such a way that you're depending on types and by doing that and having that assurance you're going to have less errors. So the thing that I promise you is that you're going to spend more time writing your code cuz you have to think through it.

[00:03:54]
But you're going to end up writing better code that has less errors. And that's something I feel pretty comfortable in asserting and promising. So that's what we're gonna start with today. I do not feel offended at all if you continue following this course and do not write the types part of it, that's totally okay as well.

[00:04:16]

>> Brian Holt: So let's talk about how this is gonna work. So let's talk about what types are first of all, cuz it's not a given that if you're writing JavaScript that you're familiar with types at all. And that's okay, you can write JavaScript and be more or less not caring what the types are underneath.

[00:04:34]
So right here, when I have this is an empty string, right? Or if I put things in here, now it's not an empty string. But that's what we call it. It's called a string in terms of JavaScript, right?
>> Brian Holt: It's just the type of thing that you're dealing with, right?

[00:04:52]
That's why they're called types.
>> Brian Holt: If I come in here and have like version and it's like five, this right here is called a number, right? As this is called-
>> Brian Holt: Is done false, this is a called a Boolean, right? We also have objects. We have arrays. And then we have a bunch of other things that we, as web developers, have made up like events, right?

[00:05:21]
And DOM nodes. Like these are all things that are typed for us.

