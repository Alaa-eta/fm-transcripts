WEBVTT

1
00:00:00.000 --> 00:00:04.192
Let's say it was really important that
I'm here in the root directory and

2
00:00:04.192 --> 00:00:07.579
I really wanted to make that high folder,
how would I do it?

3
00:00:07.579 --> 00:00:10.440
Well the only user that can
do it is the super user.

4
00:00:10.440 --> 00:00:14.044
The super user, is also the other name for
the the root user, so

5
00:00:14.044 --> 00:00:16.836
you'll hear me use those
two interchangeably.

6
00:00:20.023 --> 00:00:25.347
So the way that I could do that,
is I could come in and say

7
00:00:28.567 --> 00:00:36.903
Sudo, which is basically
doing super user do mkdir hi.

8
00:00:36.903 --> 00:00:43.232
So now, because I ran sudo, basically,
which means temporarily, for

9
00:00:43.232 --> 00:00:50.005
one command, switch me into super-user,
do something and then come back.

10
00:00:50.005 --> 00:00:55.228
So now you can see in here
I have this high directory.

11
00:00:55.228 --> 00:01:02.927
And you can see the user that did
it was wherever that went here,

12
00:01:02.927 --> 00:01:09.592
root So just to kind of prove my point,
if I say sudo who am I?

13
00:01:09.592 --> 00:01:11.026
What do you think it's gonna say?

14
00:01:12.941 --> 00:01:15.250
Root, right?
Because for that one command, I'm root,

15
00:01:15.250 --> 00:01:16.959
but now if I run, who am I again?

16
00:01:16.959 --> 00:01:18.666
I'm going to be Ubuntu.

17
00:01:18.666 --> 00:01:23.215
So that's what sudo does is it
switches us quickly into root,

18
00:01:23.215 --> 00:01:26.016
you do one thing and then you're out.

19
00:01:26.016 --> 00:01:29.396
That's because Ubuntu has
super user privileges.

20
00:01:29.396 --> 00:01:32.389
That means that Ubuntu
can run things as root.

21
00:01:32.389 --> 00:01:37.510
But not everything is run as root by
default, which is kind of that safeguard.

22
00:01:37.510 --> 00:01:42.478
When I tried that rm -rf it wouldn't
have let me do that because

23
00:01:42.478 --> 00:01:46.885
Ubuntu is not privileged to
do this despite the fact that

24
00:01:46.885 --> 00:01:51.504
you've been to could if I had
done a sudo so it makes sense?

25
00:01:51.504 --> 00:01:55.702
Cool, so that's why you don't
just always Run as root.

26
00:01:55.702 --> 00:01:59.843
Like don't just hang out as root,
that's a terrible idea,

27
00:01:59.843 --> 00:02:02.524
because you're gonna make mistakes.

28
00:02:02.524 --> 00:02:05.202
And not being the root user will save you

29
00:02:05.202 --> 00:02:09.019
from some of those dumb
mistakes that you're gonna do.

30
00:02:09.019 --> 00:02:13.804
Cuz it is possible, I can say sudo
switch users, and look who I am now.

31
00:02:13.804 --> 00:02:15.380
I am the root user now.

32
00:02:15.380 --> 00:02:16.813
I have all power.

33
00:02:16.813 --> 00:02:18.915
That's a terrible idea.

34
00:02:18.915 --> 00:02:25.317
So don't hang out as a super user so in
order to do that, you can just say exit.

35
00:02:25.317 --> 00:02:28.472
And that will get you out of
your session as the root user.

36
00:02:32.090 --> 00:02:35.611
I would also like to point out
that sudo is a very adorable dog.

37
00:02:35.611 --> 00:02:39.340
That's actually Sarah Drown's dog.

38
00:02:39.340 --> 00:02:44.090
I asked her if I could put
a picture of sudo in here.

39
00:02:44.090 --> 00:02:48.194
Cuz the dog is hilarious, and
it also if you go over to her house,

40
00:02:48.194 --> 00:02:50.559
it's funny to hear her say Sudo sit.

41
00:02:50.559 --> 00:02:55.457
Cuz like telling it's like super user,
tell the dog to sit out makes me laugh.

42
00:02:55.457 --> 00:03:00.245
And that's from, yeah, Sarah Jasmine
who's another teacher in front of

43
00:03:00.245 --> 00:03:04.200
masters she does the view courses and
she's really awesome.

44
00:03:04.200 --> 00:03:08.791
This is another one makes me laugh,
make me a sandwich.

45
00:03:08.791 --> 00:03:09.477
What, make it yourself.

46
00:03:09.477 --> 00:03:10.617
Sudo make me a sandwich.

47
00:03:10.617 --> 00:03:11.538
Okay.

48
00:03:11.538 --> 00:03:15.486
That's another XKCD,
that's another famous one.

49
00:03:17.768 --> 00:03:21.927
Okay, so Let's go ahead and yeah,

50
00:03:21.927 --> 00:03:26.232
it's a bit like Simon says, right?

51
00:03:26.232 --> 00:03:32.394
It won't do until you tell it's Simon
says delete the root directory, right?

52
00:03:38.464 --> 00:03:42.850
&gt;&gt; Yeah On your left part
[INAUDIBLE] other side, yeah.

53
00:03:42.850 --> 00:03:43.726
&gt;&gt; Got it?

54
00:03:46.492 --> 00:03:51.031
Just a second, my stylist,

55
00:03:51.031 --> 00:03:54.820
is gonna come consult.

56
00:03:54.820 --> 00:03:59.964
This is normal, this happens all the time,

57
00:03:59.964 --> 00:04:04.283
I just take John everywhere with me.

58
00:04:04.283 --> 00:04:07.552
Middle of my zoom calls,
he's just fixing my hair.

59
00:04:11.437 --> 00:04:12.246
All right.

60
00:04:18.114 --> 00:04:25.279
Okay, so

61
00:04:25.279 --> 00:04:28.669
let's make a new user,
just to show you kind of how it's done.

62
00:04:28.669 --> 00:04:32.098
Like, the reason why I would
create a new user is like I said,

63
00:04:32.098 --> 00:04:34.463
if I was going to do
like a some sort of job.

64
00:04:34.463 --> 00:04:36.985
Or a task that was going
to run like every day.

65
00:04:36.985 --> 00:04:40.450
And that task was very scoped to
like it works on this one folder and

66
00:04:40.450 --> 00:04:42.656
does this one thing and then it finishes.

67
00:04:42.656 --> 00:04:46.878
I would make a new user just for that task
that could only accomplish that task and

68
00:04:46.878 --> 00:04:48.630
can do literally nothing else.

69
00:04:48.630 --> 00:04:52.676
That would be a good
reason to make a new user.

70
00:04:52.676 --> 00:04:58.840
So Ubuntu can't make any new users.

71
00:04:58.840 --> 00:04:59.598
But root can we have to switch to root.

72
00:04:59.598 --> 00:05:05.859
The other thing I was gonna mention about
Ubuntu is normally, when you do sudo, so

73
00:05:05.859 --> 00:05:11.423
if I say sudo echo hi, which,
there's no reason to sudo there, right?

74
00:05:11.423 --> 00:05:15.945
Normally, it asks you to enter
your password when you enter sudo.

75
00:05:15.945 --> 00:05:21.410
Multipass is a password list root user,
so it actually doesn't make you do it.

76
00:05:21.410 --> 00:05:23.469
But normally you have to enter it.

77
00:05:23.469 --> 00:05:26.522
So we'll I'll show you that
here in just a second.

78
00:05:26.522 --> 00:05:31.208
But if that's why that feels weird,
if that feels weird to you.

79
00:05:31.208 --> 00:05:34.364
All right, so
we're going to do sudo user add Brian or

80
00:05:34.364 --> 00:05:38.308
you can put whatever you want there,
I'm just going to put Brian.

81
00:05:38.308 --> 00:05:43.191
Okay, and that created a brand new user
and I'm going to do sudo Pass WD which is

82
00:05:43.191 --> 00:05:47.718
gonna allow me to set the user for
the, the password for Brian.

83
00:05:47.718 --> 00:05:51.074
And it's gonna make me
enter a new password,

84
00:05:51.074 --> 00:05:56.032
I'm gonna put something very simple and
easy to remember is asdf.

85
00:05:56.032 --> 00:05:59.168
Asdf, which is the only
password that I ever use.

86
00:05:59.168 --> 00:06:04.211
And now I'm going to say switch users,
which is what su

87
00:06:04.211 --> 00:06:09.377
does to Brian,
that's gonna make me into my password.

88
00:06:09.377 --> 00:06:12.186
And now, I am Brian.

89
00:06:12.186 --> 00:06:13.310
Who am I?

90
00:06:13.310 --> 00:06:14.059
Brian.

91
00:06:14.059 --> 00:06:22.190
So, that's about it that all you
need to do to enter is Brian.

92
00:06:22.190 --> 00:06:24.863
Actually, I think I'm in
a different shell right now.

93
00:06:31.994 --> 00:06:33.112
No, I don't know.

94
00:06:33.112 --> 00:06:36.874
But the reason why the prompt there and
something like that is we haven't set up

95
00:06:36.874 --> 00:06:39.907
a bunch of stuff like the login shell and
all that kind of stuff.

96
00:06:39.907 --> 00:06:41.978
But that's how you create a new user.

97
00:06:41.978 --> 00:06:46.057
And then you would go about adding like
them to be in the right permissions to

98
00:06:46.057 --> 00:06:47.157
this kind of stuff.

99
00:06:47.157 --> 00:06:51.756
And actually, if I say sudo echo hi,
If I say STF it's gonna say,

100
00:06:51.756 --> 00:06:56.624
Brian is not authorized to do sudo,
this incident will be reported.

101
00:06:56.624 --> 00:07:00.028
That's the line that always made me laugh.

102
00:07:00.028 --> 00:07:03.553
And then I actually found
an excelity about it.

103
00:07:06.804 --> 00:07:08.810
And it says right there,
Rob is not in the sudo's file,

104
00:07:08.810 --> 00:07:10.018
this incident will be reported.

105
00:07:10.018 --> 00:07:12.681
Hey, who does the sudo
report incidents to?

106
00:07:12.681 --> 00:07:16.889
And she's like, I never looked,
and it's reporting to Santa Claus.

107
00:07:16.889 --> 00:07:19.592
[LAUGH] I don't know, made me laugh.

108
00:07:22.363 --> 00:07:25.294
So I actually looked it up where it goes,
there's actually like a mailbox cuz

109
00:07:25.294 --> 00:07:27.113
there's like a internal
mail system on Linux.

110
00:07:27.113 --> 00:07:30.436
And it gets reported to like
an admin in their mailbox and

111
00:07:30.436 --> 00:07:33.416
someone tried to do a sudo
that they couldn't do.

112
00:07:33.416 --> 00:07:36.999
I've literally in the history
of like all of my schooling and

113
00:07:36.999 --> 00:07:40.970
all of my learning to code and
all my production market companies.

114
00:07:40.970 --> 00:07:44.530
No one has ever mentioned
this file at all, so

115
00:07:44.530 --> 00:07:49.312
don't worry if it says that
this incident will be reported.

116
00:07:49.312 --> 00:07:52.582
That was very intimidating the first time
I saw it in the computer lab, though.

117
00:07:54.827 --> 00:08:02.307
&gt;&gt; Okay, so Brian can't sudo, but what
if we wanna make it so Brian could sudo?

118
00:08:05.706 --> 00:08:08.620
Well, that can be done so I'm gonna
exit out of this session with Brian, so

119
00:08:08.620 --> 00:08:09.792
I'm gonna go back to Ubuntu.

120
00:08:09.792 --> 00:08:12.792
Cuz Ubuntu does have sudo privileges,
it's just that Brian doesn't.

121
00:08:18.541 --> 00:08:25.126
So, we have to, use Groups.

122
00:08:25.126 --> 00:08:30.032
So Groups are another
construct within Linux that

123
00:08:30.032 --> 00:08:35.417
allow you to add privileges
to entire groups of users.

124
00:08:35.417 --> 00:08:39.362
This is useful because like
imagine you run a server and

125
00:08:39.362 --> 00:08:41.934
that server has 100 users on it.

126
00:08:41.934 --> 00:08:45.365
And you have 50 admins and 50 non-admins.

127
00:08:45.365 --> 00:08:48.880
And let's say you wanted
to add a new privilege to

128
00:08:48.880 --> 00:08:53.470
the admins that they are now able
to read to this one directory.

129
00:08:53.470 --> 00:08:54.963
You would either have to go and

130
00:08:54.963 --> 00:08:57.893
add that privilege individually
50 times to each user.

131
00:08:57.893 --> 00:09:01.886
Or if you use groups, you could just add
at once to one set a group or one group.

132
00:09:01.886 --> 00:09:05.239
And then everyone inside of that
group would get all the privileges.

133
00:09:05.239 --> 00:09:09.121
So it just makes it easier to add and
manage all those people.

134
00:09:12.058 --> 00:09:14.726
So there's a bunch of reasons you
could create a readers group and

135
00:09:14.726 --> 00:09:17.990
the readers group has access to read all
the files, but they can't write to it.

136
00:09:17.990 --> 00:09:21.703
And you could have another writers
group and they can write to it,

137
00:09:21.703 --> 00:09:23.930
maybe not read from it, I don't know.

138
00:09:23.930 --> 00:09:28.264
But you can kind of manage all
the privileges individually that way.

139
00:09:32.356 --> 00:09:37.303
So, if you want to add Brian to that
group, what we can do is we can run this

140
00:09:37.303 --> 00:09:42.514
command right here, usermod and
let's actually just put it in right here.

141
00:09:47.696 --> 00:09:55.135
And so you do sudo usermod and
you can do --append --groups or

142
00:09:55.135 --> 00:09:59.695
you can just do -aG for the shorthand.

143
00:09:59.695 --> 00:10:07.829
Sudo Brian, so what this is going to do is
it's going to add a new group to Brian.

144
00:10:07.829 --> 00:10:12.548
And he's going to be added
to the sudo group and

145
00:10:12.548 --> 00:10:16.063
the sudo group is allowed to sudo.

146
00:10:16.063 --> 00:10:21.042
So now if I say sudo or
FSA switch users to Brian,

147
00:10:21.042 --> 00:10:25.288
I enter that password and so now who am I?

148
00:10:25.288 --> 00:10:29.000
Here and I say sudo who am I?

149
00:10:29.000 --> 00:10:32.855
I have to enter my password root.

150
00:10:32.855 --> 00:10:39.491
So by adding Brian to that pseudo group,
Brian is now able to do sudo things.

151
00:10:43.864 --> 00:10:44.569
Does that make sense?

152
00:10:44.569 --> 00:10:48.433
So you can create your own groups,
honestly,

153
00:10:48.433 --> 00:10:52.602
if you ask me,
how often do I create my own groups?

154
00:10:52.602 --> 00:10:53.800
The answer to that
question would be never.

155
00:10:53.800 --> 00:10:55.456
Okay, I almost never do it,

156
00:10:55.456 --> 00:10:59.669
because I don't manage flocks of
Ubuntu servers or anything like that.

157
00:10:59.669 --> 00:11:03.086
But I've had to add people
to the sudo users before, so

158
00:11:03.086 --> 00:11:05.438
that's why I show you how to do that.

