WEBVTT

1
00:00:00.070 --> 00:00:00.985
&gt;&gt; Steve Kinney: All right, so

2
00:00:00.985 --> 00:00:05.575
let's actually go ahead to the Amazon
console and take this for a spin.

3
00:00:17.073 --> 00:00:19.127
&gt;&gt; Steve Kinney: Cool,
go ahead and try it.

4
00:00:26.288 --> 00:00:28.784
&gt;&gt; Steve Kinney: You might see a different
screen if you've ever used this before.

5
00:00:28.784 --> 00:00:32.160
If this is the first time,
it's gonna look something like this.

6
00:00:32.160 --> 00:00:33.960
We're gonna make a custom schema.

7
00:00:33.960 --> 00:00:36.920
But I'm gonna hit the sample one cuz
it actually shows it to you below.

8
00:00:36.920 --> 00:00:40.760
And we'll actually see where like
a GraphQL schema with some relations

9
00:00:40.760 --> 00:00:42.280
actually looks like.

10
00:00:42.280 --> 00:00:46.460
So this is one for events and
comments on events.

11
00:00:46.460 --> 00:00:48.050
So you can see, there is a type comment.

12
00:00:48.050 --> 00:00:54.170
It has an event ID, a comment ID, content,
and a created app that are all strings.

13
00:00:54.170 --> 00:00:58.538
We have an event, which has an ID,
name, where, when,

14
00:00:58.538 --> 00:01:03.375
description, and a number of
comments that by default is ten.

15
00:01:03.375 --> 00:01:06.920
You're gonna limit ten of them because
like when you say get me all of something

16
00:01:06.920 --> 00:01:09.871
you, depending on how big that is,
you could get a lot of data, so

17
00:01:09.871 --> 00:01:12.850
this'll be by default limiting to ten but
you can override that.

18
00:01:14.110 --> 00:01:15.430
We'll talk about
the connections in a second.

19
00:01:15.430 --> 00:01:17.550
I'm not like glossing over them.

20
00:01:17.550 --> 00:01:22.570
A mutation for creating an event,
where you're gonna provide a name, a when,

21
00:01:22.570 --> 00:01:26.120
where, a description, and
you're gonna get back a full-on event.

22
00:01:26.120 --> 00:01:27.470
Deleting, you just give it an ID,

23
00:01:27.470 --> 00:01:29.730
and you get back the entire
event that was deleted.

24
00:01:29.730 --> 00:01:32.750
Now remember, if you don't want everything
back from there, you can define,

25
00:01:32.750 --> 00:01:36.710
okay, you are offering me the entire
event, but all I want is the ID.

26
00:01:36.710 --> 00:01:37.740
Right, you can define that.

27
00:01:37.740 --> 00:01:41.180
It's all really up to
the person consuming the API.

28
00:01:41.180 --> 00:01:45.050
Queries, we can get an individual event,
we can get all of the events.

29
00:01:45.050 --> 00:01:49.990
Subscription, which is subscribe to event
comments, which is you give it the idea

30
00:01:49.990 --> 00:01:55.190
of a single event, and it's going to push
you a notification every single time.

31
00:01:55.190 --> 00:01:56.860
And this is basically
the schema like here,

32
00:01:56.860 --> 00:01:59.640
the query that we had,
which are these two queries.

33
00:01:59.640 --> 00:02:04.370
The mutation, which in this case
is create event, delete event, and

34
00:02:04.370 --> 00:02:06.940
comment on event,
are mutations in this case.

35
00:02:06.940 --> 00:02:08.910
And our single subscription.

36
00:02:08.910 --> 00:02:14.250
So this is an example of a graphical
API with some amount of relations,

37
00:02:14.250 --> 00:02:15.210
and so on and so forth.

38
00:02:15.210 --> 00:02:17.870
We're gonna create a slightly simpler one.

39
00:02:19.410 --> 00:02:25.679
And we'll just kind of go over here,
we'll call it grudges,

40
00:02:25.679 --> 00:02:30.430
we'll say it's custom, click Create.

41
00:02:30.430 --> 00:02:35.522
So it starts you out with an API URL and
an API key.

42
00:02:35.522 --> 00:02:38.641
You could actually also do it with
all sorts of different things,

43
00:02:38.641 --> 00:02:42.470
like you can do it with Cognito Identity
Pools IM user, so on and so forth.

44
00:02:42.470 --> 00:02:43.560
We're gonna keep it simple right now.

45
00:02:43.560 --> 00:02:46.381
I'm gonna delete all of this real quick.

46
00:02:46.381 --> 00:02:49.822
And here is where you can start
defining your schema, right.

47
00:02:49.822 --> 00:02:53.540
So what does the data in
my application look like?

48
00:02:53.540 --> 00:02:58.081
So we're gonna follow the example
we've been using for most of the day,

49
00:02:58.081 --> 00:03:00.847
which is we'll have a grudge,
it has an ID.

50
00:03:00.847 --> 00:03:03.380
It'll have a person,
which'll just be a string.

51
00:03:03.380 --> 00:03:06.110
We have a deed,
we have the avenged which is a Boolean.

52
00:03:09.100 --> 00:03:11.890
We'll make that required as well.

53
00:03:11.890 --> 00:03:13.306
So here's like what our grudge looks like.

54
00:03:13.306 --> 00:03:15.920
This is very similar
to what it did before.

55
00:03:15.920 --> 00:03:22.312
And then we could also have query,
&gt;&gt; Steve Kinney: Where we just say,

56
00:03:22.312 --> 00:03:24.510
we'll just make a default one.

57
00:03:24.510 --> 00:03:26.950
I'll show in a second why
this isn't important.

58
00:03:26.950 --> 00:03:29.180
And you're like,
I don't know a lot of GraphQL.

59
00:03:30.830 --> 00:03:34.114
Also, like I don't know how
to implement this back end.

60
00:03:34.114 --> 00:03:37.200
I will warn you that that should
not stop you from being awesome.

61
00:03:38.310 --> 00:03:42.310
So, you can kind of see like it
helps visualize what a grudge is,

62
00:03:42.310 --> 00:03:45.929
it's kind of gotten a little
smaller at this point.

63
00:03:46.980 --> 00:03:49.750
The query in this case, and
this is a very simple one.

64
00:03:49.750 --> 00:03:53.567
You saw all that stuff we had before, like
the connections and the subscriptions and

65
00:03:53.567 --> 00:03:55.250
the mutations, and all that stuff.

66
00:03:55.250 --> 00:03:57.100
We don't have any of that yet.

67
00:03:57.100 --> 00:03:59.136
I'm just gonna hit Save.

68
00:03:59.136 --> 00:04:02.167
It's gonna update my schema.

69
00:04:02.167 --> 00:04:07.670
And the other thing is, I made a schema,
but I have no back end, officially, right?

70
00:04:07.670 --> 00:04:09.506
I don't really have anything in place,

71
00:04:09.506 --> 00:04:11.886
what happens if I hit this
create resources button?

72
00:04:14.254 --> 00:04:17.004
&gt;&gt; Steve Kinney: We'll say,
a grudge, it's cool,

73
00:04:17.004 --> 00:04:20.220
do you want me to make
you a DynamoDB table?

74
00:04:20.220 --> 00:04:24.330
I'm like, yes, I do,
I absolutely would love you to.

75
00:04:24.330 --> 00:04:30.567
And then, it will go ahead and actually
create a really rich schema for us, right.

76
00:04:30.567 --> 00:04:34.796
So you just go like hey, these are some of
the models that I'm working with, and here

77
00:04:34.796 --> 00:04:39.310
are some of the properties, and you're
like, an AppSync is like, got it, right?

78
00:04:39.310 --> 00:04:41.130
You just tell me the very basics.

79
00:04:41.130 --> 00:04:44.850
I will create the databases that you need.

80
00:04:44.850 --> 00:04:49.380
I will go ahead and
actually give you a pretty legit schema.

81
00:04:49.380 --> 00:04:54.555
So here you can see, it's gonna
call get grudge and listGrudges,

82
00:04:54.555 --> 00:04:59.260
we'll have a mutation of create, update
and delete, I'll create all those for us.

83
00:04:59.260 --> 00:05:01.241
It's also the hidden part
here as the resolvers.

84
00:05:01.241 --> 00:05:04.200
Had you go from the GraphQL
schema to editing the database?

85
00:05:04.200 --> 00:05:07.830
It's also gonna create all of those for
us too, right.

86
00:05:09.330 --> 00:05:13.130
And subscriptions, it's gonna give
you a real time push notifications on

87
00:05:13.130 --> 00:05:16.640
CreateGrudge, on UpdateGrudge,
on DeleteGrudge.

88
00:05:16.640 --> 00:05:18.290
Everything you need, right.

89
00:05:18.290 --> 00:05:22.130
This GrudgeConnection,
I glossed over those before.

90
00:05:22.130 --> 00:05:27.430
What a connection is it's basically,
let's say hypothetically,

91
00:05:27.430 --> 00:05:33.010
you got angry really easily and
your grudge list got very long, right?

92
00:05:33.010 --> 00:05:36.290
And you needed to start
thinking about pagination.

93
00:05:36.290 --> 00:05:38.922
What a GrudgeConnection does,

94
00:05:38.922 --> 00:05:43.204
if you look at the queries,
&gt;&gt; Steve Kinney: Oops,

95
00:05:43.204 --> 00:05:48.280
we're all up, is it takes first,
how many do you want?

96
00:05:48.280 --> 00:05:50.550
And then a token for where to start and

97
00:05:50.550 --> 00:05:55.680
basically, the connection types
are basically free pagination.

98
00:05:55.680 --> 00:05:59.680
Which is, if you say,
let's say that you have 56 grudges.

99
00:05:59.680 --> 00:06:01.720
We'll actually see this
in action in a second.

100
00:06:01.720 --> 00:06:06.400
Let's say you have 56 grudges,
and you say first 20.

101
00:06:06.400 --> 00:06:09.870
It'll give you the first 20 and
then it's gonna give you a next token,

102
00:06:09.870 --> 00:06:12.090
which is a string, right.

103
00:06:12.090 --> 00:06:15.440
So then you could call listGrudges again,
and you could say 20.

104
00:06:15.440 --> 00:06:18.670
After you handed that string,
it's gonna give you 21 through 40, right?

105
00:06:19.890 --> 00:06:23.040
So it's a way to like,
you just get pagination for free,

106
00:06:23.040 --> 00:06:25.100
you're not dealing with any of that.

107
00:06:25.100 --> 00:06:26.850
It's all just kinda built in.

108
00:06:26.850 --> 00:06:30.820
So it creates a schema for you, it's gonna
create a database, I just say create.

109
00:06:32.660 --> 00:06:34.466
I move that Jerry ticket across the board,

110
00:06:34.466 --> 00:06:36.980
everyone thinks I did
a whole bunch of work.

111
00:06:36.980 --> 00:06:39.020
But realize, I hit a button and
went home for the day.

112
00:06:41.940 --> 00:06:44.910
Cool, so it's going to,
it's very serious about this.

113
00:06:44.910 --> 00:06:47.870
I've never actually like,
tempted it by going ahead.

114
00:06:49.250 --> 00:06:53.280
So it basically created a schema for
us, created a database for us.

115
00:06:53.280 --> 00:06:56.890
We'll actually see that in a second,
and it actually created the resolvers.

116
00:06:56.890 --> 00:07:03.962
So I'll just show you when we get down
to a query, let's actually hit Save.

117
00:07:07.184 --> 00:07:09.471
&gt;&gt; Steve Kinney: Cool,
I'm gonna zoom out a little bit.

118
00:07:12.692 --> 00:07:13.860
&gt;&gt; Steve Kinney: Cool.

119
00:07:13.860 --> 00:07:16.960
I think this actually takes a second
to create all the databases.

120
00:07:16.960 --> 00:07:18.139
Let's go to data sources.

121
00:07:19.200 --> 00:07:25.050
You can see that I made this grudge
table in DynamoDB, ready to go.

122
00:07:25.050 --> 00:07:27.286
We can take a look at it but
we don't really need to,

123
00:07:27.286 --> 00:07:28.433
he says as he clicks on it.

124
00:07:32.589 --> 00:07:33.790
&gt;&gt; Steve Kinney: So let's go take a look.

125
00:07:33.790 --> 00:07:35.880
You can see the other ones from
Mobile Hub that I made earlier.

126
00:07:37.480 --> 00:07:39.576
There's no items in it yet.

127
00:07:39.576 --> 00:07:43.395
But it's queried the entire table for us,
it can do all the things of scanning,

128
00:07:43.395 --> 00:07:48.220
pagination, all of it is setup, we're
ready to go, with some best practices.

