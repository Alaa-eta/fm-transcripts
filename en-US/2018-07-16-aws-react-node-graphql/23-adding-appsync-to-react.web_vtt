WEBVTT

1
00:00:00.050 --> 00:00:04.280
&gt;&gt; Steve Kinney: So what we're gonna
do is we looked at some graphql in

2
00:00:04.280 --> 00:00:06.670
the playground.

3
00:00:06.670 --> 00:00:10.480
What I'd like to do is show it in the
example application that we were working

4
00:00:10.480 --> 00:00:13.210
on earlier,
keeping track of the list of grudges.

5
00:00:13.210 --> 00:00:17.740
So I'm back on the master branch, which is
a clean slate of just the client's side

6
00:00:17.740 --> 00:00:21.330
application, and
what we'll do is we will implement

7
00:00:23.650 --> 00:00:27.060
the CRUD inputs we had earlier
with an added bonus of

8
00:00:27.060 --> 00:00:31.900
we'll also add the ability to be
notified when a new grudge gets added.

9
00:00:31.900 --> 00:00:36.487
We could clearly do this as well for
the update and removals, but for

10
00:00:36.487 --> 00:00:39.900
the sake of keeping it,
avoiding redundancy.

11
00:00:39.900 --> 00:00:43.100
We'll look at it in that case, cuz we
can see how we could apply that further.

12
00:00:44.240 --> 00:00:47.630
So yeah, like I said,
this is a back to the master branch.

13
00:00:47.630 --> 00:00:56.540
And let's actually just git checkout,
&gt;&gt; Steve Kinney: graphql app sync.

14
00:00:56.540 --> 00:00:59.650
So I have my new branch.

15
00:00:59.650 --> 00:01:04.480
At one point, I will go ahead and
do some of the AWS init.

16
00:01:04.480 --> 00:01:06.300
In fact, what I'll actually do is,

17
00:01:06.300 --> 00:01:10.710
I will run that now while I
go do a few other things.

18
00:01:11.740 --> 00:01:17.320
So you saw that there was
appsync in the Amplifier.

19
00:01:17.320 --> 00:01:19.410
That was very recently added.

20
00:01:19.410 --> 00:01:23.420
And the reason that I donâ€™t use it is
cuz even if you do dash dash prompt,

21
00:01:23.420 --> 00:01:25.635
at this moment, to ask we record this.

22
00:01:25.635 --> 00:01:28.691
If you do dash dash prompt it, it'll
actually do the entire scheme up of those

23
00:01:28.691 --> 00:01:30.395
events and comments, and all that stuff.

24
00:01:30.395 --> 00:01:34.035
And I'm not super interested
in clearing that out.

25
00:01:35.195 --> 00:01:38.255
And I think it's a really great way to
show that you could actually take other

26
00:01:38.255 --> 00:01:40.485
things from the AWS ecosystem, and

27
00:01:40.485 --> 00:01:45.455
pull it into your Amplify project,
or your MobileHub project as well.

28
00:01:45.455 --> 00:01:47.829
So we'll go ahead and
awsmobile init in here.

29
00:01:49.230 --> 00:01:50.428
I should have done the dash yes.

30
00:01:55.482 --> 00:01:56.170
&gt;&gt; Steve Kinney: We'll just hit enter.

31
00:01:57.460 --> 00:02:00.710
Cool, while that cooks for a little bit,

32
00:02:00.710 --> 00:02:05.030
we do want to get
the configuration from here.

33
00:02:05.030 --> 00:02:08.017
So if I go to Grudges and I scroll down.

34
00:02:08.017 --> 00:02:12.636
You can see that you can get
the configuration for iOS,

35
00:02:12.636 --> 00:02:15.560
Android, Web, or React Native.

36
00:02:15.560 --> 00:02:17.500
We'll actually go ahead and

37
00:02:17.500 --> 00:02:22.600
hit download on this one and
I will go ahead and open it.

38
00:02:23.970 --> 00:02:27.570
And this is all,
this is basically just configuration.

39
00:02:27.570 --> 00:02:31.620
And this isn't exactly the way
that amplify needs it, so

40
00:02:31.620 --> 00:02:33.370
we'll have to modify a little bit.

41
00:02:33.370 --> 00:02:36.400
Also in npm,
there is an appsync client as well.

42
00:02:36.400 --> 00:02:39.790
If you only want appsync, and
you don't want all the rest of this,

43
00:02:39.790 --> 00:02:43.640
there is an appsync library as well,
an appsync SDK that you can use.

44
00:02:43.640 --> 00:02:45.750
It works a little bit different
than everything else.

45
00:02:45.750 --> 00:02:49.090
So for consistency, we're just
gonna stick with Amplify for now.

46
00:02:49.090 --> 00:02:51.820
But definitely worth checking
out if you're only interested in

47
00:02:51.820 --> 00:02:53.720
the graphql stuff.

48
00:02:53.720 --> 00:02:55.688
So what I'll do is I'm gonna
copy this JavaScript object.

49
00:02:58.324 --> 00:03:02.825
&gt;&gt; Steve Kinney: And in my index
&gt;&gt; Steve Kinney: It looks like I have some

50
00:03:02.825 --> 00:03:04.760
of this in place already still.

51
00:03:04.760 --> 00:03:13.357
So I'll just make an appSyncConfig.

52
00:03:13.357 --> 00:03:15.030
We'll paste that.

53
00:03:15.030 --> 00:03:17.430
The syntax is a little bit different.

54
00:03:17.430 --> 00:03:21.214
Luckily, it's pretty easy,

55
00:03:21.214 --> 00:03:27.480
which is all of these prefixes,
aws_appsync_.

56
00:03:27.480 --> 00:03:31.590
That's how because Amplify is keeping
track of a lot of different configuration.

57
00:03:31.590 --> 00:03:34.390
It's just letting Amplify know
exactly what we're doing.

58
00:03:34.390 --> 00:03:37.730
If you were just using the AppSync client
by itself, exactly what we copy and

59
00:03:37.730 --> 00:03:39.360
pasted would've been fine.

60
00:03:39.360 --> 00:03:43.810
So what we'll do here is we'll say

61
00:03:45.870 --> 00:03:49.830
all the configuration plus
all of the appSyncConfig.

62
00:03:49.830 --> 00:03:52.980
And so that will be the merged

63
00:03:52.980 --> 00:03:56.400
Amplify configuration along
with the appSyncConfiguration.

64
00:03:56.400 --> 00:03:58.540
So now we're getting both in this case.

65
00:03:59.760 --> 00:04:01.410
All right, very cool.

66
00:04:01.410 --> 00:04:02.285
And so that's kinda in place.

67
00:04:05.271 --> 00:04:10.303
&gt;&gt; Steve Kinney: So
now we have that going, I'm just going to

68
00:04:10.303 --> 00:04:15.348
go ahead and we'll do awsmobile features.

69
00:04:17.721 --> 00:04:19.750
&gt;&gt; Steve Kinney: Turn off what
I don't need in this case.

70
00:04:19.750 --> 00:04:20.620
Looks like the only thing.

71
00:04:20.620 --> 00:04:24.160
AppSync is not turned on cuz I
didn't turn it on in Mobile Hub.

72
00:04:24.160 --> 00:04:26.980
I kind of brought it in by myself.

73
00:04:26.980 --> 00:04:29.397
We'll just turn off analytics for now.

74
00:04:29.397 --> 00:04:32.460
Cool, all right.

75
00:04:32.460 --> 00:04:36.070
So, we have,
just hosting have AppSync in place.

76
00:04:36.070 --> 00:04:38.280
And we are ready to get started.

77
00:04:38.280 --> 00:04:42.990
What I'm probably gonna do is I'm
gonna go ahead and write a query.

78
00:04:44.170 --> 00:04:48.670
The first one that makes sense is to get
all of the grudges from the database.

79
00:04:48.670 --> 00:04:51.598
Now, because we played in the playground,
there's actually already grudges in there,

80
00:04:51.598 --> 00:04:53.420
so we'll have fun stuff to
see from the very beginning.

81
00:04:53.420 --> 00:04:58.880
But what we can do is actually
if I go back to that playground,

82
00:04:58.880 --> 00:05:02.320
I'm actually just going to steal it.

83
00:05:04.840 --> 00:05:08.390
I have to modify it a little bit but
that'll be fine.

84
00:05:08.390 --> 00:05:10.730
For the sake of simplicity,
what I'm gonna do is,

85
00:05:10.730 --> 00:05:16.820
I'm gonna make a single file that is
gonna keep track of all of my graphic QL.

86
00:05:16.820 --> 00:05:19.280
On a larger app,
that's not really gonna work.

87
00:05:19.280 --> 00:05:22.551
You'll see structures that we'll have
a directory for all the queries or

88
00:05:22.551 --> 00:05:23.447
all the mutations,

89
00:05:23.447 --> 00:05:27.051
as your application grows you're gonna
like be putting everything in one file.

90
00:05:27.051 --> 00:05:29.140
It's not really gonna work.

91
00:05:29.140 --> 00:05:33.630
You'll likely have a directory and then
a file for every kind of query mutation or

92
00:05:33.630 --> 00:05:34.700
subscription.

93
00:05:34.700 --> 00:05:37.963
But just for the sake of like,
I've noticed that when showing stuff if

94
00:05:37.963 --> 00:05:40.855
I jump around files a lot,
everyone wants to cry a little bit.

95
00:05:40.855 --> 00:05:43.260
So we'll just keep it all in one file for
now.

96
00:05:43.260 --> 00:05:50.245
So let's say export const
&gt;&gt; Steve Kinney: ListGrudges,

97
00:05:50.245 --> 00:05:54.060
and it's really just gonna be a string.

98
00:05:55.530 --> 00:05:57.780
And that will turn that string
into something in a second.

99
00:05:57.780 --> 00:06:00.183
But the way we can store
all of these queries,

100
00:06:00.183 --> 00:06:04.293
very similar to when I was first learning
SQL and I have to do a bunch of like Data

101
00:06:04.293 --> 00:06:08.175
analysis, which is I tweaked the SQL
query over the course of like a day.

102
00:06:08.175 --> 00:06:11.041
And then I copy and
pasted it into a notes file, and

103
00:06:11.041 --> 00:06:14.740
just use that forever and ever and
never thought about it again.

104
00:06:14.740 --> 00:06:17.110
Not dissimilar from what
we're doing right now.

105
00:06:17.110 --> 00:06:18.860
I'm just gonna give
this a consistent name.

106
00:06:21.110 --> 00:06:22.574
And I'm gonna ask for
everything in this case.

107
00:06:22.574 --> 00:06:28.230
ID Person deed avenged.

108
00:06:28.230 --> 00:06:31.660
I'm gonna keep my data small so
I won't need pagination.

109
00:06:31.660 --> 00:06:34.530
But we've seen effectively
how it works in this case.

110
00:06:36.880 --> 00:06:39.730
So this is gonna get me
everything out of the database.

111
00:06:39.730 --> 00:06:42.180
I just need to wire it up.

112
00:06:42.180 --> 00:06:45.237
So we'll go into the application
&gt;&gt; Steve Kinney: And

113
00:06:45.237 --> 00:06:47.790
we're gonna need a few things.

114
00:06:47.790 --> 00:06:51.220
It looks like I branched
off the last thing I did.

115
00:06:52.950 --> 00:06:54.810
No, this is just the wrong file.

116
00:06:54.810 --> 00:06:56.750
One moment, I'm in the wrong project.

117
00:06:56.750 --> 00:06:57.630
One moment please.

118
00:06:59.220 --> 00:07:01.569
I'll go ahead and
actually I can just grab all of that.

119
00:07:10.035 --> 00:07:11.260
&gt;&gt; Steve Kinney: We'll go into the.

120
00:07:16.462 --> 00:07:17.890
&gt;&gt; Steve Kinney: Bring
in that configuration.

121
00:07:19.830 --> 00:07:21.490
It's called reinforcing
what we've just learned.

122
00:07:21.490 --> 00:07:26.350
It's a teaching technique
where I do something,

123
00:07:26.350 --> 00:07:28.000
making you believe I
did in the wrong place.

124
00:07:28.000 --> 00:07:29.560
You can watch me copy and paste it.

125
00:07:29.560 --> 00:07:31.000
All right, very cool.

126
00:07:31.000 --> 00:07:35.953
So we have list of grudges,
we have index dot JS where we've done

127
00:07:35.953 --> 00:07:40.008
the configuration and
we'll go into application.

128
00:07:40.008 --> 00:07:44.331
And if you remember from my earlier slide,
I'm like, the API, it has a git, and

129
00:07:44.331 --> 00:07:46.120
a put, and a post, and a delete.

130
00:07:46.120 --> 00:07:48.210
And I was like, yeah, and
it's got a graphical one at the bottom,

131
00:07:48.210 --> 00:07:49.320
don't worry about that.

132
00:07:49.320 --> 00:07:51.260
We're gonna worry about it now.

133
00:07:51.260 --> 00:07:57.039
So what we'll do is, we will import API,

134
00:07:57.039 --> 00:08:03.491
and this graphqlOperation
from AWS amplify.

135
00:08:10.759 --> 00:08:11.725
&gt;&gt; Steve Kinney: Cool.

136
00:08:11.725 --> 00:08:16.680
Now, we also need to get that
query that we just made.

137
00:08:16.680 --> 00:08:22.372
So we'll say Import List grudges

138
00:08:22.372 --> 00:08:27.054
from dot slash .graphql.

139
00:08:27.054 --> 00:08:31.387
So now we have the means from
Amplify to go get stuff and

140
00:08:31.387 --> 00:08:35.540
we have a directive of what
it is we'll like to get.

141
00:08:36.580 --> 00:08:40.199
We'll start by saying
the componentDidMount again

142
00:08:43.567 --> 00:08:48.990
&gt;&gt; Steve Kinney: I'll say API.graphql.

143
00:08:48.990 --> 00:08:52.920
Now I have to actually use this
graphql operation helper, and

144
00:08:52.920 --> 00:08:55.840
that's because it takes
the string of graphql and

145
00:08:55.840 --> 00:09:00.870
it parses it and turns it into an actual
object that it can use as a query.

146
00:09:00.870 --> 00:09:04.390
So I'll say ListGrudges.

147
00:09:04.390 --> 00:09:06.660
So this will pass it in there correctly.

148
00:09:06.660 --> 00:09:08.100
And I'll say then response.

149
00:09:09.490 --> 00:09:14.815
Now, probably don't remember, but
way back when I first was playing

150
00:09:14.815 --> 00:09:19.135
with the playground you'll notice it was
very nested, it had data and then it had

151
00:09:19.135 --> 00:09:23.375
the name of the query, in some cases it
had items if I was doing the overall one.

152
00:09:23.375 --> 00:09:28.085
So before I get carried away, what I'm
going to do is console log the response.

153
00:09:34.065 --> 00:09:36.211
Cool and
let's verify that everything works.

154
00:09:36.211 --> 00:09:42.045
I don't trust this one that's running,

155
00:09:42.045 --> 00:09:45.552
so I'll start it again.

156
00:09:45.552 --> 00:09:51.672
I think it was running since earlier
today so that's not to be trusted.

157
00:09:51.672 --> 00:09:55.219
Cool, that's firing up.

158
00:09:57.630 --> 00:09:59.700
Those are some of the analytics.

159
00:10:01.500 --> 00:10:02.870
So I've got to turn that off in a second.

160
00:10:06.270 --> 00:10:10.605
There is an object in there, but the
development server is still starting up.

161
00:10:12.043 --> 00:10:13.590
&gt;&gt; Steve Kinney: Cool.

162
00:10:22.162 --> 00:10:24.954
&gt;&gt; Steve Kinney: So you can see there's a
response and it's got data, list grudges,

163
00:10:24.954 --> 00:10:26.360
and then it's got the items in it.

164
00:10:26.360 --> 00:10:29.329
So we need to drill all the way down
to actually get the actual grudges out.

165
00:10:32.884 --> 00:10:38.698
&gt;&gt; Steve Kinney: I'll do a awsmobile
push while I work on that.

166
00:10:49.233 --> 00:10:53.753
&gt;&gt; Steve Kinney: All right,
let that go ahead, all right, so we had.

167
00:10:56.954 --> 00:11:01.105
&gt;&gt; Steve Kinney: We'll say const grudges
is actually, so it's a little bit nested

168
00:11:01.105 --> 00:11:05.400
in there, but still for
the power we get it's definitely worth it.

169
00:11:05.400 --> 00:11:08.820
So we'll say, response.data.

170
00:11:08.820 --> 00:11:10.920
Name of the query was listGrudges.

171
00:11:10.920 --> 00:11:14.280
And then items which is from
that Grudge connection, right?

172
00:11:14.280 --> 00:11:18.026
So, those will actually be everything
that we're looking for, and

173
00:11:18.026 --> 00:11:19.454
we'll just say Grudges.

174
00:11:24.769 --> 00:11:26.174
&gt;&gt; Steve Kinney: We'll go back over and
see what we get.

175
00:11:30.943 --> 00:11:33.360
&gt;&gt; Steve Kinney: There are my Grudges.

176
00:11:33.360 --> 00:11:36.899
It turns out that a console log will not
add it to the state of your application.

177
00:11:40.422 --> 00:11:41.759
&gt;&gt; Steve Kinney: So
we'll say that this.setState.

178
00:11:44.807 --> 00:11:48.254
&gt;&gt; Steve Kinney: You can see from
the console log that exactly the stuff we

179
00:11:48.254 --> 00:11:51.810
played in the playground was there,
and here it all is.

180
00:11:51.810 --> 00:11:55.034
We queried everything out of
the database very, very quickly.

