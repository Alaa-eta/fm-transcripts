WEBVTT

1
00:00:02.430 --> 00:00:04.730
&gt;&gt; Estelle: Let's move along and
talk about alignment.

2
00:00:04.730 --> 00:00:07.825
This is gonna be very similar to what
we talk about with Flexbox yesterday.

3
00:00:09.290 --> 00:00:13.090
We have several properties
that are on the parent,

4
00:00:13.090 --> 00:00:16.020
including justify items,
align items, justify content,

5
00:00:16.020 --> 00:00:21.130
align content, grid auto columns,
grid auto rows, grid auto flow and grid.

6
00:00:21.130 --> 00:00:24.175
And then we have justify-self and
align-self,

7
00:00:24.175 --> 00:00:27.374
which are properties on
the grid items themselves.

8
00:00:29.225 --> 00:00:34.166
&gt;&gt; Estelle: So justify-items has a few new

9
00:00:34.166 --> 00:00:39.110
values that we never heard of.

10
00:00:39.110 --> 00:00:44.183
One of them is legacy, and
then two are safe and unsafe.

11
00:00:44.183 --> 00:00:46.240
And I'll go over those in a minute.

12
00:00:46.240 --> 00:00:48.166
The default is actually legacy,

13
00:00:48.166 --> 00:00:54.436
which is left.
&gt;&gt; Estelle: That's what it comes out to,

14
00:00:54.436 --> 00:00:58.625
so the only thing that's actually what it
means, but that's what it ends up being.

15
00:00:58.625 --> 00:01:02.687
I guess it would be right
in left to right languages.

16
00:01:02.687 --> 00:01:05.994
So justify-items.

17
00:01:05.994 --> 00:01:11.450
It aligns items in the inline direction,
which for us is horizontal.

18
00:01:13.470 --> 00:01:14.889
Let's just go and do it by example.

19
00:01:24.418 --> 00:01:27.413
&gt;&gt; Estelle: So when we're doing Flexbox,

20
00:01:27.413 --> 00:01:34.220
we sometimes align the whole row and
we sometimes align just the item.

21
00:01:35.460 --> 00:01:41.520
So when it says justify items,
it's actually taking that grid item and

22
00:01:41.520 --> 00:01:44.965
aligning just each item individually.

23
00:01:44.965 --> 00:01:47.737
But it's doing it globally to all of them,
but

24
00:01:47.737 --> 00:01:51.780
it's individual within each
item putting it at the end.

25
00:01:51.780 --> 00:01:53.540
Here, we could put it at the start.

26
00:01:56.610 --> 00:01:58.720
What are the other values we have?

27
00:01:58.720 --> 00:02:01.710
We have stretch and
we have center and we have self-end.

28
00:02:01.710 --> 00:02:02.780
So let's do center.

29
00:02:06.560 --> 00:02:11.970
Now the thing is, this stuff is really
ugly, and I've never used this property,

30
00:02:11.970 --> 00:02:16.280
because I've never needed to do this,
because I don't find it attractive.

31
00:02:16.280 --> 00:02:18.660
But it is important to
understand that it's doable.

32
00:02:21.840 --> 00:02:27.524
So the new values are safe,
which means if it overflows the container,

33
00:02:34.308 --> 00:02:35.340
&gt;&gt; Estelle: If the text overflows

34
00:02:35.340 --> 00:02:38.810
the container then you actually
still show the content.

35
00:02:38.810 --> 00:02:41.500
And unsafe basically says
you're gonna crop it.

36
00:02:43.180 --> 00:02:49.830
So legacy is basically, you could
say legacy left, center, or right.

37
00:02:49.830 --> 00:02:51.150
And that's about it.

38
00:02:51.150 --> 00:02:56.050
Okay, so then we have a line, column
alignment, which we do with align items.

39
00:02:56.050 --> 00:02:57.570
So we did justify items,

40
00:02:57.570 --> 00:03:02.099
right, which was kinda left to
right in left to right languages.

41
00:03:03.170 --> 00:03:09.228
Here if we do flex-start,
which you'll notice it's a flex property,

42
00:03:09.228 --> 00:03:13.119
it's the same thing as it was in flex,
right?

43
00:03:13.119 --> 00:03:15.650
We could do flex-end.

44
00:03:15.650 --> 00:03:21.076
So it's aligning each item
within its grid line,

45
00:03:21.076 --> 00:03:24.310
right, along the row track.

46
00:03:26.660 --> 00:03:29.293
The previous one did
along the column track.

47
00:03:34.339 --> 00:03:38.140
&gt;&gt; Estelle: Stretch is nice.

48
00:03:38.140 --> 00:03:40.030
I think that's the default.

49
00:03:40.030 --> 00:03:44.907
I forgot to highlight which one is
the default, but I'm pretty sure it's

50
00:03:44.907 --> 00:03:50.383
that.
&gt;&gt; Estelle: There's a property

51
00:03:50.383 --> 00:03:56.850
called place-items which is basically
align-items and then justify items.

52
00:03:56.850 --> 00:03:57.710
And it's just a shorthand.

53
00:03:59.030 --> 00:04:00.277
We also get order does matter.

54
00:04:00.277 --> 00:04:05.610
You have to put align-items first and
then justify items.

55
00:04:05.610 --> 00:04:09.930
If you only put one property there,
if you just include the align items,

56
00:04:09.930 --> 00:04:12.480
that value will be given
to justified items as well.

57
00:04:13.760 --> 00:04:16.320
So let's play with making this
hideous just for a minute.

58
00:04:18.340 --> 00:04:20.034
So we have align-items,

59
00:04:27.007 --> 00:04:29.215
&gt;&gt; Estelle: Which is aligning items,

60
00:04:32.918 --> 00:04:34.730
&gt;&gt; Estelle: Within its column, right?

61
00:04:34.730 --> 00:04:37.614
That's what justify-items does,
left or right or

62
00:04:37.614 --> 00:04:43.629
center,
&gt;&gt; Estelle: Horizontally.

63
00:04:43.629 --> 00:04:49.311
And then align-items is vertical.
&gt;&gt; Estelle: So

64
00:04:49.311 --> 00:04:54.910
here we put it at the top, here we put
it at the end, here we stretched it.

65
00:04:58.190 --> 00:05:04.360
But notice, even though it's stretched in
the height, it's still at the flex-end.

66
00:05:04.360 --> 00:05:09.090
And we can center, and center.

67
00:05:12.560 --> 00:05:15.080
Now, you might wanna
actually create this effect.

68
00:05:16.450 --> 00:05:17.270
I don't think you do.

69
00:05:18.330 --> 00:05:21.957
I don't use these but
it's important to know that they exist,

70
00:05:21.957 --> 00:05:26.120
right?
&gt;&gt; Estelle: When would you use this?

71
00:05:26.120 --> 00:05:30.920
So remember that example
with the unicorns?

72
00:05:30.920 --> 00:05:34.146
And it was a unicorn, and
then a paragraph, and there was space, and

73
00:05:34.146 --> 00:05:35.939
then there was a button at the bottom.

74
00:05:35.939 --> 00:05:40.450
You would just put the button at
the baseline, I mean, at the flex-end.

75
00:05:40.450 --> 00:05:44.770
But the way we did it before,
was we actually put,

76
00:05:44.770 --> 00:05:48.990
what we did with the flex items,
we put the image and

77
00:05:48.990 --> 00:05:53.030
then we put the button in the third item.

78
00:05:53.030 --> 00:05:55.664
And then we'd allow the middle one to
grow, and we didn't allow the first one or

79
00:05:55.664 --> 00:05:59.364
the third one to grow.
&gt;&gt; Estelle: Okay.

80
00:06:01.382 --> 00:06:02.657
&gt;&gt; Speaker 2: Quick question,

81
00:06:02.657 --> 00:06:07.140
if we're using legacy how do we
declare that it can inherit.

82
00:06:07.140 --> 00:06:08.350
&gt;&gt; Estelle: You don't even have to use it,

83
00:06:08.350 --> 00:06:10.900
you can just omit it, it's legacy.
&gt;&gt; Speaker 2: Okay.

84
00:06:13.640 --> 00:06:14.670
&gt;&gt; Estelle: Yeah, basically you just have

85
00:06:14.670 --> 00:06:15.980
to overwrite legacy if you want something

86
00:06:15.980 --> 00:06:17.170
else.
&gt;&gt; Speaker 2: All right.

87
00:06:17.170 --> 00:06:18.403
That's a default value.

