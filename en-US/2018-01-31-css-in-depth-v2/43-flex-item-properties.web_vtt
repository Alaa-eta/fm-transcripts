WEBVTT

1
00:00:02.760 --> 00:00:05.560
&gt;&gt; Estelle Weyl: Next,
we're gonna talk about Flex Items.

2
00:00:05.560 --> 00:00:07.461
So we've been talking so far,

3
00:00:07.461 --> 00:00:12.373
all the properties have controlled the
flex items based on the flex container.

4
00:00:12.373 --> 00:00:15.103
But you can actually control
flex items individually.

5
00:00:18.152 --> 00:00:20.027
&gt;&gt; Estelle Weyl: So
we have the align-self property,

6
00:00:20.027 --> 00:00:22.730
remember we had the align-items property?

7
00:00:22.730 --> 00:00:26.900
Which will align an item within its line,
and they all went to the top, or

8
00:00:26.900 --> 00:00:30.350
they all went to the bottom,
or they were all stretched.

9
00:00:30.350 --> 00:00:35.820
You can overwrite that align-items
on each individual one.

10
00:00:35.820 --> 00:00:38.070
So here,

11
00:00:41.050 --> 00:00:44.950
see by default, the whole container is
gonna be the same height as C because C is

12
00:00:44.950 --> 00:00:47.170
the one with the most information.

13
00:00:47.170 --> 00:00:50.506
And I've aligned all
the items in the center, but

14
00:00:50.506 --> 00:00:52.740
I said just B I wanted to stretch.

15
00:00:52.740 --> 00:00:57.840
So A and C are both centered, but
C looks it's stretched cuz it is taking

16
00:00:57.840 --> 00:01:03.536
up a 100% and B is not being align-center,
and it's actually stretched.

17
00:01:06.317 --> 00:01:10.380
&gt;&gt; Estelle Weyl: Flex-end, you can bring
it all the way down to the bottom,

18
00:01:10.380 --> 00:01:12.990
I can bring it all the way up to the top.

19
00:01:14.620 --> 00:01:16.545
I can do baseline.

20
00:01:18.972 --> 00:01:20.762
&gt;&gt; Estelle Weyl: And
since it's the only one at baseline,

21
00:01:20.762 --> 00:01:22.151
it goes all the way up to the top.

22
00:01:25.244 --> 00:01:26.850
&gt;&gt; Estelle Weyl: What does auto do?

23
00:01:26.850 --> 00:01:28.210
Someone asked that earlier, right?

24
00:01:30.330 --> 00:01:37.580
Auto basically says align center, because
that's what the parent is saying to do.

25
00:01:37.580 --> 00:01:42.227
And then we have center,
stretch, okay, so we're good.

26
00:01:42.227 --> 00:01:45.032
I could've done the same thing with a.

27
00:01:46.917 --> 00:01:52.442
&gt;&gt; Estelle Weyl: Right, so I'm only
moving one, that is the align-self,

28
00:01:52.442 --> 00:01:57.417
which overwrites the align-items
property just for

29
00:01:57.417 --> 00:02:01.077
the elements on which it's declared.

30
00:02:02.619 --> 00:02:08.220
&gt;&gt; Estelle Weyl: So here, just the H.

31
00:02:08.220 --> 00:02:12.526
So this previous one here
was a single line, right?

32
00:02:12.526 --> 00:02:17.169
This is a single line of flex items,
here we have multiple lines of flex items.

33
00:02:17.169 --> 00:02:21.445
The letter H is the one
where I'm gonna overwrite,

34
00:02:21.445 --> 00:02:24.240
because it says h align stretch.

35
00:02:24.240 --> 00:02:31.404
So all of them on the container
it says aline items flex start.

36
00:02:33.620 --> 00:02:38.601
&gt;&gt; Estelle Weyl: Align contents flex end.

37
00:02:38.601 --> 00:02:42.399
Align content flex end means that all
of the content is down at the bottem.

38
00:02:42.399 --> 00:02:47.297
Align items means that within each line
every item is aligned to the top of

39
00:02:47.297 --> 00:02:48.990
that flex line.

40
00:02:48.990 --> 00:02:51.094
So the difference between align-content.

41
00:02:51.094 --> 00:02:53.665
Align-content says go all
the way down to the bottom,

42
00:02:53.665 --> 00:02:57.950
align-item says within
each line go to the top.

43
00:02:57.950 --> 00:03:02.475
And then on align-self says just for
one item on which I'm gonna declare it.

44
00:03:02.475 --> 00:03:05.278
flex-end, op, and

45
00:03:05.278 --> 00:03:10.272
you see how the h is down at the bottom.

46
00:03:10.272 --> 00:03:15.172
So f, g, i, j, a, b, c, d, e, and k,

47
00:03:15.172 --> 00:03:23.459
they all inherit the align item from
the parent, from the container.

48
00:03:24.830 --> 00:03:26.490
And that's usually what you want to do,

49
00:03:26.490 --> 00:03:28.240
you want all of your
elements to look the same.

50
00:03:28.240 --> 00:03:31.810
You don't want one to look different,
this does not look good.

51
00:03:31.810 --> 00:03:35.140
But even if they were all looking
the same, it would still look like crap.

52
00:03:35.140 --> 00:03:37.960
Because I used a pale green,
orange, yellow,

53
00:03:39.240 --> 00:03:43.260
an icky font cause we are trying to make
things look as ugly as possible today.

54
00:03:43.260 --> 00:03:44.700
So that's the aligned self property.

55
00:03:46.480 --> 00:03:52.620
Then we have the order property,
so by default

56
00:03:52.620 --> 00:03:58.330
every single element of flex item has
the order of zero, they're all zero.

57
00:04:00.680 --> 00:04:03.990
So they all will be in the order
that they were declared.

58
00:04:05.720 --> 00:04:07.130
Every order value, so

59
00:04:07.130 --> 00:04:12.580
you can change the order to -1 to
-50 to 400, whatever you want.

60
00:04:12.580 --> 00:04:17.926
But every single item that has the flex,
the order property with

61
00:04:17.926 --> 00:04:23.076
the value of negative 1 will
come before all of those have 0.

62
00:04:23.076 --> 00:04:27.492
But all of those within the group that
have the value of zero will be in order of

63
00:04:27.492 --> 00:04:31.218
the markup, and all of those with
negative one will be in order of

64
00:04:31.218 --> 00:04:34.541
the markup in terms of the ones
that have the value of one.

65
00:04:34.541 --> 00:04:38.866
So let's show by example because
explaining it is a little bit hard.

66
00:04:38.866 --> 00:04:44.210
So here we already know that these
go in alphabetical order, right?

67
00:04:44.210 --> 00:04:49.028
So, let me just do x and x, it goes
alphabet, banana, crayons, dinosaurs,

68
00:04:49.028 --> 00:04:52.252
eggplant, foundation,
ghosts, happy, right?

69
00:04:52.252 --> 00:04:54.945
It's in alphabetical order.

70
00:04:54.945 --> 00:04:59.597
I've put "display flex", so,
it's a flex box on the parent and

71
00:04:59.597 --> 00:05:02.270
then, the flex flow it says "row".

72
00:05:02.270 --> 00:05:06.920
So, it's gonna go across from left
to right and then top to bottom,

73
00:05:06.920 --> 00:05:10.220
because it's allowed to wrap,
but it's not wrap reverse.

74
00:05:10.220 --> 00:05:13.090
So the cross axis is from top to bottom,
the main axis is from left to right.

75
00:05:14.380 --> 00:05:19.180
Then I say,
every third one given in order of -1.

76
00:05:19.180 --> 00:05:25.571
So all the dark gray ones came before
the medium gray and the white ones.

77
00:05:25.571 --> 00:05:29.206
But within the dark grey ones they
are still in alphabetical order,

78
00:05:29.206 --> 00:05:34.392
it says crayons, foundation, igloo, lasso,
orange, rancid, umbrella, and xylophone.

79
00:05:34.392 --> 00:05:39.611
I have no clue what mood I was in
when I came up with these words.

80
00:05:39.611 --> 00:05:43.076
And then, so
all the one with a order of negative one

81
00:05:43.076 --> 00:05:46.229
come before all of those
with an order of zero.

82
00:05:48.170 --> 00:05:52.990
Then I'm gonna give all of these
a positive one, which means they all come

83
00:05:54.270 --> 00:05:59.450
after the ones with the value of 0, but
they're also in alphabetical order.

84
00:05:59.450 --> 00:06:03.183
So that third group is alphabet,
dinosaurs, ghosts, janitors,

85
00:06:03.183 --> 00:06:06.272
magic eight ball, petunia,
shoelace and valentine.

86
00:06:06.272 --> 00:06:08.687
If I were to do -2.

87
00:06:11.264 --> 00:06:19.032
&gt;&gt; Estelle Weyl: Or -11, they would
come before all those with a -1.

88
00:06:19.032 --> 00:06:25.873
And then if I were to give all
of these -20, no, order -22.

89
00:06:37.000 --> 00:06:39.196
&gt;&gt; Estelle Weyl: That's on the parent,
it has to be on the child.

90
00:06:39.196 --> 00:06:41.347
Okay, that's why it didn't work.

91
00:06:41.347 --> 00:06:44.142
So do you understand how order works?

92
00:06:44.142 --> 00:06:49.250
Now it doesn't change the order
If more than one element

93
00:06:49.250 --> 00:06:54.800
has the same value for order,
it's in the order of the HTML.

94
00:06:54.800 --> 00:06:57.024
It'll be in the same order as the code,
as the marker.

95
00:07:01.130 --> 00:07:03.609
&gt;&gt; Estelle Weyl: And
this is just here because it's pretty, no,

96
00:07:03.609 --> 00:07:05.730
it's here because the navigation here.

97
00:07:09.622 --> 00:07:13.739
&gt;&gt; Estelle Weyl: I gave it
in an order of four and so

98
00:07:13.739 --> 00:07:20.612
it's at the bottom because
it's greater than zero.

99
00:07:20.612 --> 00:07:25.144
But you'll notice what I did,
I gave it, put the nav and

100
00:07:25.144 --> 00:07:31.334
the footer in order for, because by
default, nav and footer both had zero.

101
00:07:31.334 --> 00:07:36.063
If I only gave nav an order of 4,
footer would still have zero, and

102
00:07:36.063 --> 00:07:38.265
it would come before the nave.

103
00:07:38.265 --> 00:07:40.847
And I definitely want the footer
to come after the nav.

104
00:07:40.847 --> 00:07:45.695
So by giving nav and footer both
a value of 4, they're both last but

105
00:07:45.695 --> 00:07:50.982
they're still in the order in terms
of the HTML, nav came before footer.

106
00:07:50.982 --> 00:07:52.222
Does that make sense to everyone?

107
00:07:54.760 --> 00:07:57.204
&gt;&gt; Estelle Weyl: Okay, so
in terms of accessibility.

108
00:07:59.811 --> 00:08:03.901
&gt;&gt; Estelle Weyl: The screen reader's
gonna read it in the source order,

109
00:08:03.901 --> 00:08:05.996
I think except for Mozilla.

110
00:08:05.996 --> 00:08:09.951
But that was probably fixed,
but I'm not sure so don't,

111
00:08:09.951 --> 00:08:14.326
I think there's one browser that
was like maybe we should read.

112
00:08:14.326 --> 00:08:19.412
The inherency thing is and
the thing to worry about is the Tab order.

113
00:08:19.412 --> 00:08:24.103
A lot of people access websites
using the keyboard, not their mouse.

114
00:08:24.103 --> 00:08:29.870
So a visual reader will look at it and
point to something and click, that's fine.

115
00:08:29.870 --> 00:08:35.770
But if you're tabbing and you have the top
part of search engine optimization,

116
00:08:35.770 --> 00:08:42.050
you know some BS stuff on the top because
it says baseball, baseball, baseball.

117
00:08:42.050 --> 00:08:43.680
Or actually it would be sex, sex,

118
00:08:43.680 --> 00:08:48.000
sex because that will bring up
your order on many more views.

119
00:08:48.000 --> 00:08:51.870
And you put that at the bottom, and
someone starts tabbing through your page,

120
00:08:51.870 --> 00:08:54.270
they're not going to see
where their mouse is.

121
00:08:54.270 --> 00:08:59.690
Realize that you want to think about the
tab order when you're reordering things.

122
00:09:01.360 --> 00:09:06.382
And then right to left languages,
it's kind of awesome because

123
00:09:06.382 --> 00:09:12.343
it will flip it for you and source order
will It will follow the source order.

124
00:09:12.343 --> 00:09:16.615
So it will put your first
div to the right, and

125
00:09:16.615 --> 00:09:20.895
then a second one in
the order that they read.

