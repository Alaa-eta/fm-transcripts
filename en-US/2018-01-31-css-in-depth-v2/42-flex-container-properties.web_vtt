WEBVTT

1
00:00:03.640 --> 00:00:05.441
&gt;&gt; Estelle Weyl: But wait, there's more!

2
00:00:05.441 --> 00:00:07.571
Ed Valenti is the one who
did the Ginsu knives,

3
00:00:07.571 --> 00:00:12.190
some of you might be too old to remember
Ginsu knives, but yes, so there's more.

4
00:00:12.190 --> 00:00:15.972
We've basically set up a basic flex, so

5
00:00:15.972 --> 00:00:20.869
let's deep dive now into
the properties that impact

6
00:00:20.869 --> 00:00:24.882
the flex container, which is the parent.

7
00:00:28.646 --> 00:00:32.065
&gt;&gt; Estelle Weyl: So there are ways
where you can control the flex items,

8
00:00:32.065 --> 00:00:36.748
which are those children, all that
things from bananas to xylophone, and

9
00:00:36.748 --> 00:00:38.624
I can't remember what was A.

10
00:00:38.624 --> 00:00:42.524
Those are all flex items, so the flex
container is the box that they're all in

11
00:00:42.524 --> 00:00:44.814
and that's the thing we
put display flex on.

12
00:00:44.814 --> 00:00:48.945
And you can control the appearance
of the children partially

13
00:00:48.945 --> 00:00:52.267
through some properties
of the flex container.

14
00:00:52.267 --> 00:00:55.275
So there's the justify
content property and

15
00:00:55.275 --> 00:00:59.947
it has many different values including,
flex-start, flex-end,

16
00:00:59.947 --> 00:01:04.239
center, space-between,
space-around, space-evenly.

17
00:01:04.239 --> 00:01:09.207
The justify content properties
aligns flex items along the main

18
00:01:09.207 --> 00:01:12.708
axis which in this case
is from left to right.

19
00:01:12.708 --> 00:01:16.748
The align content is on the cross
axis which is top to bottom and

20
00:01:16.748 --> 00:01:22.122
that's why I want to cover across and
main axis so you'd understand those terms.

21
00:01:22.122 --> 00:01:26.060
So here, I have a display: flex, and

22
00:01:26.060 --> 00:01:31.858
only three items so
they don't take up the whole space.

23
00:01:31.858 --> 00:01:36.566
So basically,
justify-content property deals

24
00:01:36.566 --> 00:01:41.719
with what to do with this space
if the sum of the widths or

25
00:01:41.719 --> 00:01:46.649
the heights,
the main dimension of the flex items is

26
00:01:46.649 --> 00:01:50.817
not exactly equal to the parent container.

27
00:01:50.817 --> 00:01:53.602
So this case,
we have a lot of free space but sometimes,

28
00:01:53.602 --> 00:01:57.063
remember when it's overflowing,
what happens when it overflows?

29
00:01:57.063 --> 00:02:00.390
Does it start at the left, does it start
at the right, does it go in the center?

30
00:02:00.390 --> 00:02:05.400
So these are, basically,
the justify-content in,

31
00:02:05.400 --> 00:02:08.910
says what to do with the extra space or

32
00:02:08.910 --> 00:02:13.950
the lack of space along the main axis.

33
00:02:13.950 --> 00:02:18.540
So here we've put space between,
which puts even amounts, it puts

34
00:02:18.540 --> 00:02:23.530
the first one on the left or at the cross
start, I mean, at the main start.

35
00:02:24.960 --> 00:02:27.070
So number one always goes at main start,

36
00:02:27.070 --> 00:02:29.320
which is important later on
when you have too many items.

37
00:02:29.320 --> 00:02:30.550
When you have too many items,

38
00:02:30.550 --> 00:02:32.670
a is still gonna be in that corner,
it's gonna grow out.

39
00:02:33.910 --> 00:02:38.590
It puts the second one at main end, and

40
00:02:38.590 --> 00:02:42.990
then it puts these equal amounts of
space every time it adds ones in.

41
00:02:44.320 --> 00:02:47.600
So space, that's what space between does.

42
00:02:47.600 --> 00:02:53.640
Space around puts the same amount of
space on each side of each element,

43
00:02:53.640 --> 00:02:57.520
so if there's 20 pixels on the left of a,
there's 20 pixels on the right of a,

44
00:02:57.520 --> 00:02:59.610
and there's 20 pixels on the left of b,
and

45
00:02:59.610 --> 00:03:03.300
20 pixels on the right of b, and 20 pixels
on the right of c and on the left of c.

46
00:03:03.300 --> 00:03:07.590
So that means a space between a and
b is twice as wide as the space between

47
00:03:07.590 --> 00:03:12.880
the start and a, and that's ugly, right?

48
00:03:12.880 --> 00:03:14.131
Who here thinks that's ugly?

49
00:03:15.453 --> 00:03:19.150
&gt;&gt; Estelle Weyl: Okay everyone's asleep
except for one person cuz that is ugly.

50
00:03:19.150 --> 00:03:23.023
So there's also a property called space
evenly, and that takes care of it and

51
00:03:23.023 --> 00:03:26.254
it puts the same amount of space
on the outside and on the inside.

52
00:03:28.186 --> 00:03:31.517
&gt;&gt; Estelle Weyl: Space evenly is
not in the flex box specification,

53
00:03:31.517 --> 00:03:36.110
it's in the positioning specification or
something like that.

54
00:03:36.110 --> 00:03:41.230
So if you don't see it in the flex box,
it actually is, it's just they've stopped

55
00:03:41.230 --> 00:03:46.020
the flex box and they've added spacing and
stuff like that, or

56
00:03:46.020 --> 00:03:49.190
whatever that specification is,
so we might get other features.

57
00:03:50.500 --> 00:03:52.630
You have to basically click
through the specification,

58
00:03:52.630 --> 00:03:54.220
which is why this took
four years to write.

59
00:03:55.330 --> 00:04:01.270
It actually took more than that because
Eric had written the first and second and

60
00:04:01.270 --> 00:04:06.540
third edition so he already had this much
content and we had to add that much more.

61
00:04:06.540 --> 00:04:10.570
Okay, so that's just,
no, let's go a few more.

62
00:04:10.570 --> 00:04:13.340
There's center,
which groups them all at the center.

63
00:04:14.930 --> 00:04:15.935
There's flex-start.

64
00:04:18.458 --> 00:04:22.154
&gt;&gt; Estelle Weyl: Which is main start,
the main axis that starts main axis.

65
00:04:22.154 --> 00:04:23.875
There is flex-end.

66
00:04:25.856 --> 00:04:26.970
&gt;&gt; Estelle Weyl: And I think that's it.

67
00:04:28.190 --> 00:04:31.059
Okay, then we have
the align items property,

68
00:04:31.059 --> 00:04:35.010
which basically aligns
items along the cross axis.

69
00:04:35.010 --> 00:04:37.850
We just learned main axis
which is justified content,

70
00:04:37.850 --> 00:04:40.470
aligned as it along the cross axis.

71
00:04:40.470 --> 00:04:46.343
And similarly we have flex-start,
flex-end, center, baseline and stretch.

72
00:04:46.343 --> 00:04:48.357
So here are three elements that I have.

73
00:04:49.401 --> 00:04:56.490
&gt;&gt; Estelle Weyl: And they are all
centered, that is not the default.

74
00:04:57.650 --> 00:05:02.741
The default,
which is what you usually want is stretch.

75
00:05:02.741 --> 00:05:04.654
There is a three-column layout, right?

76
00:05:04.654 --> 00:05:10.839
With no work what so ever, it’s just
display flex and that's it, right?

77
00:05:10.839 --> 00:05:17.690
So, align-items center,
we can also do flex-start,

78
00:05:17.690 --> 00:05:23.290
which puts it at top, flex-end,

79
00:05:23.290 --> 00:05:27.910
which puts it at the bottom and when I
mean bottom, I actually mean cross end,

80
00:05:27.910 --> 00:05:31.350
it aligns it at cross end but
I think bottom is easier to use.

81
00:05:31.350 --> 00:05:34.654
We already showed stretch,

82
00:05:34.654 --> 00:05:39.752
we showed center, so let me show baseline.

83
00:05:39.752 --> 00:05:44.873
Baseline is a little bit weird,
but if you actually took something

84
00:05:44.873 --> 00:05:50.267
like a piece of paper and went across
the whole thing this is another and

85
00:05:50.267 --> 00:05:56.591
header width are all perfectly aligned
because they are aligned along baseline.

86
00:05:56.591 --> 00:06:00.184
So if I have more padding
on the top of one or

87
00:06:00.184 --> 00:06:05.242
more margin on the top of one,
it's aligned on baseline.

88
00:06:05.242 --> 00:06:09.114
Which is kind of interesting when
you have an aside on one side and

89
00:06:09.114 --> 00:06:13.486
a nav on another side and your main
article and you have an H1 and an H2 and

90
00:06:13.486 --> 00:06:16.230
an H3,
you can align all three at baseline.

91
00:06:16.230 --> 00:06:19.250
Everything else will just
flow in after that but

92
00:06:19.250 --> 00:06:22.180
the thing is, that does not
lead to a three-column layout.

93
00:06:22.180 --> 00:06:25.810
I would rather stretch it, right, and

94
00:06:25.810 --> 00:06:30.433
then make sure that I made
my top padding the same.

95
00:06:32.090 --> 00:06:35.145
&gt;&gt; Estelle Weyl: But
that is baseline, okay, so

96
00:06:35.145 --> 00:06:40.362
I did say that I would have
the visibility of collapse.

97
00:06:43.680 --> 00:06:46.203
&gt;&gt; Estelle Weyl: It looks
like visibility hidden.

98
00:06:49.036 --> 00:06:50.220
&gt;&gt; Estelle Weyl: Doesn’t it?

99
00:06:50.220 --> 00:06:54.790
Because that says a line items center,
that's center this way.

100
00:06:56.930 --> 00:06:59.845
The default is flex-start,
so if I do justify.

101
00:07:07.780 --> 00:07:10.650
&gt;&gt; Estelle Weyl: Okay,
see, I look things up.

102
00:07:10.650 --> 00:07:15.691
If I do justify content: flex-start; it

103
00:07:15.691 --> 00:07:20.731
doesn't change because the item is taking

104
00:07:20.731 --> 00:07:27.323
up its full width it's
basically disability hitting.

105
00:07:29.336 --> 00:07:31.536
&gt;&gt; Estelle Weyl: Okay, then we have
the align-content property and

106
00:07:31.536 --> 00:07:34.686
the values of the align-content
are flex-start, flex-end, center,

107
00:07:34.686 --> 00:07:37.596
space-between, space-around,
stretch, and space-evenly.

108
00:07:37.596 --> 00:07:42.323
Doesn't that sound exactly
like justify-content?

109
00:07:42.323 --> 00:07:46.407
But that only applies to
multi-line containers, originally,

110
00:07:46.407 --> 00:07:48.939
it was just within its one line, right?

111
00:07:51.040 --> 00:07:54.690
We were aligning thing within one line,
sometimes we have more than one line.

112
00:07:56.600 --> 00:08:03.100
So here we have
the align-content property,

113
00:08:03.100 --> 00:08:08.250
and right now the value is flex-end.

114
00:08:08.250 --> 00:08:12.347
So all the lines are at the bottom before
it was just the flex items in that one

115
00:08:12.347 --> 00:08:15.160
line were at the bottom of
their flex line, right?

116
00:08:16.270 --> 00:08:19.956
Here all the lines are at
the bottom of this container,

117
00:08:19.956 --> 00:08:24.686
so this container is like 400 pixels
high and it could be anywhere,

118
00:08:24.686 --> 00:08:29.752
it could be at flex-start, right, so
all the lines are pushed to the top.

119
00:08:32.538 --> 00:08:37.702
&gt;&gt; Estelle Weyl: We have stretch and
when I said the example doesn't work for

120
00:08:37.702 --> 00:08:42.350
stretch, it apparently does,
before the yellow and

121
00:08:42.350 --> 00:08:46.750
red lines would not be in the right spot.

122
00:08:46.750 --> 00:08:50.059
So, no it does't because these
are actually taking up the whole thing,

123
00:08:50.059 --> 00:08:53.170
they're stretching, the yellow and
red lines would actually meet.

124
00:08:53.170 --> 00:08:56.715
So when I say this examples
doesn't work for stretch,

125
00:08:56.715 --> 00:09:01.900
the lines are actually taking up the full
width, it's just you can't see it.

126
00:09:01.900 --> 00:09:08.073
Then we have baseline, and
then we have space between.

127
00:09:11.022 --> 00:09:14.654
&gt;&gt; Estelle Weyl: And so you see here,
the first line is at the top,

128
00:09:14.654 --> 00:09:18.996
the second line is placed at
the bottom and the third line,

129
00:09:18.996 --> 00:09:22.760
the space is evenly around both of those.

130
00:09:22.760 --> 00:09:27.574
So we can just space-around and
then space-evenly.

131
00:09:30.327 --> 00:09:34.962
&gt;&gt; Estelle Weyl: So the difference
between this one and the other one,

132
00:09:34.962 --> 00:09:36.715
let me just go here.

133
00:09:39.692 --> 00:09:46.353
&gt;&gt; Estelle Weyl: So I lined all items at
flex-start, I could also do a stretch.

134
00:09:48.810 --> 00:09:49.310
&gt;&gt; Estelle Weyl: Right.

135
00:09:52.124 --> 00:09:53.930
&gt;&gt; Estelle Weyl: And
that makes all of them stretch and

136
00:09:53.930 --> 00:09:56.270
then let's see what
happens when I do stretch.

137
00:09:58.750 --> 00:10:01.575
So remember I said the example
doesn't work with stretch,

138
00:10:01.575 --> 00:10:05.246
it's the examples actually working
fine with stretch, it's the yellow and

139
00:10:05.246 --> 00:10:06.786
red lines that aren't moving.

140
00:10:06.786 --> 00:10:11.688
So you see how A, B, C, D and E go all
the way from the yellow line to the yellow

141
00:10:11.688 --> 00:10:16.208
line and F, G, H, I, J goes all the way
from the yellow line to the next

142
00:10:16.208 --> 00:10:20.602
yellow line and K goes all the way
from the yellow line to the bottom.

143
00:10:20.602 --> 00:10:25.579
Because all the elements are stretched
within their own line and

144
00:10:25.579 --> 00:10:28.173
the align content is stretched.

145
00:10:28.173 --> 00:10:32.129
So let’s switch this to.

146
00:10:36.154 --> 00:10:36.885
&gt;&gt; Estelle Weyl: Center.

147
00:10:38.976 --> 00:10:43.652
&gt;&gt; Estelle Weyl: Okay, so
here they're all grouped in the center,

148
00:10:43.652 --> 00:10:49.092
they’re all stretched with
the align-items property but

149
00:10:49.092 --> 00:10:55.962
all the lines are grouped in the center
with the align-content property.

150
00:10:55.962 --> 00:11:01.105
Are you understanding the difference
between align-items and align-content?

151
00:11:01.105 --> 00:11:05.780
I would be surprised if you were, because
this took me forever to grok my head

152
00:11:05.780 --> 00:11:10.015
around, just realize that the align
items is within it's own line,

153
00:11:10.015 --> 00:11:14.750
is it at the top, at the bottom,
in the middle or stretched.

154
00:11:14.750 --> 00:11:21.740
And the align content is the full line
like all the lines within the container,

155
00:11:21.740 --> 00:11:24.072
are they all the grouped at the top
are they all grouped at the bottom,

156
00:11:24.072 --> 00:11:27.900
are they all grouped in the center,
are they spaced out or not?

157
00:11:29.560 --> 00:11:34.556
So let me put this back to flex-start or
I'm gonna put it at flex-end just

158
00:11:34.556 --> 00:11:38.355
to make life more confusing and
let me go back to the top.

159
00:11:41.761 --> 00:11:45.774
&gt;&gt; Estelle Weyl: Line content, so we did
center and then let's do space evenly.

160
00:11:49.164 --> 00:11:54.035
&gt;&gt; Estelle Weyl: So there's as
much space between main start and

161
00:11:54.035 --> 00:12:01.320
the yellow line, no,
that's cross start in the yellow line.

162
00:12:01.320 --> 00:12:04.310
Between the red and the yellow line,
between the second red and yellow line and

163
00:12:04.310 --> 00:12:07.980
between the third red line and the end.

164
00:12:07.980 --> 00:12:10.000
Does that make sense to people?

165
00:12:10.000 --> 00:12:13.219
This is one of those things where I
don't expect you to fully grok it,

166
00:12:13.219 --> 00:12:16.624
hopefully after we're done with grids,
you'll fully understand it.

