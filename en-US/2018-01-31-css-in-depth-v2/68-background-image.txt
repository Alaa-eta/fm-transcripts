[00:00:02]
>> Estelle Weyl: The next one is a background image property. Originally, background image is used to declare an image on your background. It can be one or more images. Originally, we were just given one image and we had a few properties including the background image and then background repeat, attachment, position and color.

[00:00:25]

>> Estelle Weyl: That's why I always suggest to people to not use the background shorthand. Because when you use the shorthand property, you're actually overwriting the background color, the background position, the background attachment and the background repeat. And I like to put my global reset background repeat, no repeat. Cuz I very rarely want to repeat a background image.

[00:00:48]

>> Estelle Weyl: So you could use as a value for background image either none or the URL of an image or inherit, and it would inherit the image from its parent and I don't think anyone would ever want to do that, intentionally.
>> Estelle Weyl: A few tips for background images if you're going to use a background image ensure that there's enough contrast between the text and your image.

[00:01:13]
So we were talking about clear contrast ratio a little bit yesterday for people with low vision rather, you want a significant contrast. And then when you have a background image, unless there's transparency in that image, you usually want a background color. Because if the image doesn't come through, and let's say you have a really dark image, so you have white text.

[00:01:39]
And then you have a white background cuz you didn't put a background color but you can have white text on a white background. And that's not gonna be good. Background images do not print by default, and there's no way to improve accessibility on background images. Background images should be purely decorative, because there's no way to add alt text to describe to the user what the image is what you describe to your most significant blind user which is Google.

[00:02:08]
So the multiple background image syntax is basically declaring one image comma separated and the next image. And if you notice here, it says background image green and then blue. And if you are not colorblind, you'll see that the blue one is in the back. So basically gets painted back to front.

[00:02:28]
So it's the last one gets painted first and then the first one gets painted on top of it. They are comma separated and the cross-fade function
>> Estelle Weyl: So cross-fading is the ability to basically cross-fade between two images. And it is supported in some browsers, and not in others.

[00:02:55]
So ones where it's not supported, the image you declare first will be on top.
>> Estelle Weyl: Then image set is the ability to declare a set of images. And let's go again to can I use and do image set.
>> Estelle Weyl: Again, it works only with the WebKit prefix. So this is something that you can't quite use quite yet, but I did wanna point it out.

[00:03:25]
Because it will eventually come in, and it is part of the spec. So,
>> Estelle Weyl: The type of images we can currently use is the key term none, which is very useful when you're overwriting an image that you already declared and you don't want it on this element. You can use the URL.

[00:03:47]
And so you put URL and then in parenthesis you can put a single image, you you can put the URL in parenthesis with a single image and then the comma and then the next one. You can also use data URLs. So in this first example, I have a gift and it's Bay 64 and the data URI's right there.

[00:04:06]
Not reduces a number of HTTP request. We all wanna do if it's a tinly little image because this is not the most compact way of pulling in an investment PNG with that. And then the second one is an SVG image. So you can actually just put the code right there, and not have an HTTP request, if you're gonna have an SVG.

[00:04:30]
And SVGs, depends on what you're creating with your SVG, generally my SVGs are tiny, because I am not a graphic designer and I'm basically just making shapes. So, it depends on the complexity, but that might be a useful way of reducing an http request and improving performance. Then we also have linear and radial gradients.

[00:04:50]
We also have linear repeating gradients and repeating radial gradients, and we also have conical gradients. We'll go over the linear radio and the repeating ones but not the ones later on today. In the future if you look up at the spec it says image and in parenthesis element and then parenthesis image set and then parenthesis in cross state and in parenthesis.

[00:05:15]
That's why I showed you. Can I use, because there's these four other features in the specification. And right now it kinda only works in Firefox, cuz it's been working there for a long time. The image and the element. So in Firefox you can actually say element, and you used to be able to do this.

[00:05:35]
I think they might have deprecated it. But you can actually put a canvas on the page or design a canvas in the background, give it an ID and then put it as the background of an element. And then with the image, you can do a few things. The first one is basically picking up a sprite and then putting a hash and then saying xy and then width and height so the starting poing.

[00:06:06]
And then the width and height of the area you want to show and basically clip your background image. This is not fully supported. It was supported in Firefox long time ago. I don't know if it's even still supported there. And then the second one is image. And then it's basically try finding this image.

[00:06:26]
If that doesn't work try finding the next image. If that doesn't work, try finding the third which would be really nice if we could have cuz then we could do a web p. And then a JpegXR, and then just a regular Jpeg and see which ever one is supported in that browser they could use that for backgrounds, because we do have the picture element and we do have media queries, but it would be nice to be able to declare an image, a background image in one line.

