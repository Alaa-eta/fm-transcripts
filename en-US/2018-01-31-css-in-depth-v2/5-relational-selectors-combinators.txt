[00:00:02]
>> Estelle Weyl: I wanna talk about relational selectors and combinators. So, as previously mentioned, there is the descendant selector. It's a combinator of a space. So here, it says ul li. So it matches every list item that it is a descendant of an unordered list. So here on the right-hand side, we have an ordered list and nested within that, we have an unordered list.

[00:00:37]

>> Estelle Weyl: If I say ol li, it matches everything. And so I actually added some opacity, and you'll see that a, b, and c were kind of matched twice. Because the li that is a descendant of the unordered list, is also a descendant of the ordered list. But the ones that are just a descendant of the ordered list, only match the first one.

[00:01:03]
So I basically put, it got the color twice.
>> Estelle Weyl: It got the color twice from just that. Because it is both a child and a grandchild. Here, if I click on ol > li. That means just the list items that are a descendant, I mean a child of the ordered list.

[00:01:35]
So why is a, b, and c gray?
>> Estelle Weyl: Because it actually is nested within a gray parent, which is the parent li. So that parent li has been targeted as being gray, and so the whole thing has a background of being gray. It's not those individual items that then were also targeted.

[00:01:57]

>> Estelle Weyl: Then there's the adjacent sibling selector. So number 4 has a class of hasaclass. I should come up with better names. This selector right here says, find the li that comes immediately after. Basically having the same parent, it's nested in the same parent. It comes immediately after an li that has a class of,

[00:02:28]

>> Estelle Weyl: That has a class of hasaclass. That's why I should've named it something different, cuz I said that and then I'm like, what did I just say? That's considered the adjacent sibling selector. So let me see if I can get rid of this, no, I can't.
>> Estelle Weyl: Okay.

[00:02:46]

>> Estelle Weyl: I have a small problem, which is the last one is not visible and it has a tilde. So instead of the + right here, it has a tilde. The tilde is the general sibling selector. So the general sibling selector, which was new in IE7, so it's not new anymore, targets the element.

[00:03:12]
So if it said li.hasaclass ~ li, it means match any li that comes after, not immediately after but just generally after, an li that has a class. So here number 4 has a class and 5, 6, and 7 are general siblings. They're not the adjacent sibling, which is the plus sign.

[00:03:33]
They are the tilde, which is the general sibling.
>> Estelle Weyl: Just so you know how I actually did that JavaScript, I used the selectors API. And I, basically, the reason I'm pointing this out is, in JavaScript you can say querySelector and querySelectorAll.
>> Estelle Weyl: And target, you can put any CSS selector that we cover today, you can put in there and target that element.

[00:04:04]
The first one comes back with just the first element. The second one, which is querySelectorAll, comes back with all of the elements. And then you can do something, you see this is a little bit more complex. It says find me all the elements that have the class of foo that are a descendant of bar.

[00:04:22]
And you can actually get much more complex than this. You can put,
>> Estelle Weyl: Any descendent of bar that also has a type attribute. So you can put anything in there and you can use JavaScript to find those elements if you need to. And so I basically used the selectors API with the classList, which is a feature in JavaScript as well, to add and remove classes.

[00:04:58]
And that's how I did the JavaScript that selected those. So I want you to think about the fact that you can remove and add classes. And have querySelector and querySelectorAll in your JS and add and remove classes and target elements.

