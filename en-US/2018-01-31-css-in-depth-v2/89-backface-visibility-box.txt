[00:00:03]
>> Steve Kinney: When we did, estelleweyl.cssmastery. And we had the snowflakes coming down,
>> Steve Kinney: The reasons that they're going left and right and floating is because the transform origin is actually outside of their center. So they're being translated from top to bottom but they're spinning and they're spinning around a point that is not in the center.

[00:00:28]
So they're basically spinning around going like this. But since they're going down, they're actually going like that. So [INAUDIBLE] doing this but you can't really see that it's doing that cuz it's so slow.
>> Steve Kinney: Kinda cool? Okay, so that was the magic of transform-origin. So the keyword positions are left, right, bottom, top, and center.

[00:00:49]
You can use any length value or any percentage value, the default is the center, at 50% 50%. And I should get rid of prefix. It's basically supported, any browser that supports transforms supports transform-origin and you don't need to prefix it because prefixing is no longer necessary. And we have transform-style and that is for 3D features.

[00:01:16]
If you have a 3D element on top of another 3D element, it's basically do you wanna preseve 3D or do you wanna make it flat. It's how to handle nestled elements that are also rendered in a 3D space.
>> Steve Kinney: Oddly, there's a few properties where it won't work that you have to have it at the default value.

[00:01:37]
So if you've declared overflow, clip, clip-path, filter, mask-border-source, mask-image or mix-blend-mode, which are all properties that we haven't covered yet. See why this book is so big? Then it doesn't actually do anything. It's set on the parent and I tried making it appear like what it would look like.

[00:02:03]
So basically the parent is translated in the 3D space and so is the child. And so is the child, and the child is kind of coming at you. If it was actually flat, it would not.
>> Steve Kinney: Let's just skip this one. Okay, backface-visibility. I was talking about RSVP, when you flip it, you don't want to see it, the backwards cuz you don't wanna see it upside down.

[00:02:31]
So basically here both of these have translated 180 degrees and one you can see and the other you can't. So here there actually is generated content. If I do 0, you can see both of them. If I do 90, you can see neither of them. If I do 85 degrees, you can see both of them but barely.

[00:02:58]
But if I do 105, one of them you can't see at all because I did backface-visibility: hidden. But the first one, I did backface-visibility: visible, and if you can see, you can't actually read RSVP. So let's acutally do it completely upside down.
>> Steve Kinney: Right? They're both translated in the exact same way or rotated in the exact same way.

[00:03:26]
One is backwards and I'm saying you can't look at it now.
>> Steve Kinney: And let me just see if, okay, it didn't show. So when you'll see playing cards or something like that online, you'll have a playing card here and this is the face and this is the back of the card.

[00:03:45]
And so you rotate both and you think it's doing this but really you can't do this, they're both doing that, they're both rotating. But when it hits this mark, you want this one to be seen and you don't want this one to be seen anymore. You don't want the one in front to show the backwards the back of the RSVP.

[00:04:06]
You wanna show the back of the card, you don't wanna show the ace. They're all really three, they're all basically the same. Okay, the king, you don't want the K to be backwards. If you had a king and you rotated it like this and you saw the card still, the K would be backwards.

[00:04:24]
So you wanna make it look like the face of the card is going behind here and you do that by saying, you can do it one of two ways. You can actually change the Z index or you can just say backface-visibility: hidden.
>> Steve Kinney: This isn't supported yet or it's just starting to be.

[00:04:44]
It's in Firefox. It's in Chrome 64 and Opera 51. So something I haven't played with yet but it's basically the view-box, so the transform-box property. So in the future, this will be a property.
>> Steve Kinney: And the future transform-box property will have a value of border-box which means that the border is the box reference.

[00:05:06]
And will have fill-box which will be the bounding box as a reference box, and then view-box which is currently in SVG, it's kinda like the view-box of SVG. But it's not yet supported, so I can't really explain it yet because I don't really know it.

