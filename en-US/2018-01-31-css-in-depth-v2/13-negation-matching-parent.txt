[00:00:02]
>> Estelle Weyl: Okay, so let's cover some other logical combinators, including negation, which you've seen me use, matching and parent. So, you've seen me type this a few times, what does it mean, :not? It means not whatever is inside the parentheses. So this matches any element that is not also matched by S1.

[00:00:28]
S1 is a selector, and it's a simple selector. By simple selector I don't mean easy selector, like E space F. That's actually combinator. No combinators, a simple selector is like nth of type 27, N plus three. That's a simple selector. There's no spaces, there's no combinators. So you can say if you want to do everything but the first five list items you could do E, not first of type E, not second of type, FF type two E.

[00:01:04]
Right, so that would be one way of doing it. So it's basically, matches any div that does not have the class of .excludeMe.
>> Estelle Weyl: So it's basically excludes everything that says has a class of .excludeMe. So specificity. The specificity of not is it doesn't have any specific wait.

[00:01:32]
The knowledge itself does not have any specificity. Whatever is inside there is what gives it the wait. So here the .excludeMe, you would have 010 for the excludeMe and 001 for the div, so that would be a 011. If this had been a pound sign, right? It would be,

[00:02:01]

>> Estelle Weyl: 101, because 100 for the id and 001 for the div, does that make sense? Okay. That has been supported for a long time.
>> Estelle Weyl: Not supported yet or actually just in Safari is same many things. So you can put a list of things. So we could have done,

[00:02:27]

>> Estelle Weyl: e:not S of type one or nth only of type, that kind of stuff. Still they have to be simple selectors, so no combinators within there. But you can put as many as you want and that will be supported. Safari's supporting it already. So div, you will match any div except for the ones that have either of the class of excludeMe or excuseYou.

[00:02:50]
You could also have written for right now,
>> Estelle Weyl: You can do,
>> Estelle Weyl: And string them together, that works.
>> Estelle Weyl: So let's take 60 seconds to just play with this. Play with it on your own, but I'm gonna do it up here. So all of them have the color blue to start with, and then all of them change to the color red, except for if it's the first child, which would also be the first of type.

[00:03:28]

>> Estelle Weyl: And here, I can put,
>> Estelle Weyl: nth-of-type 2n. And that actually matches, then every, it basically said don't match any even ones, just match the odd ones. And then I could do plus 1 here, and that still matches. But I could not do an,
>> Estelle Weyl: li that is a child of an li because that has a space in it, and that means that it is a complex selector.

[00:04:03]
Even though it's a really easy selector, right? An li that is a descendant of another li. Or that is the definite of an unordered list. So you'd think that that would say any li except for the ones that is the child of an unordered list, but that is complex selector, not a simple selector.

[00:04:28]

>> Estelle Weyl: And you can actually put an attribute in there, so we can say, not.
>> Estelle Weyl: That's a line within an li, so I can't do that. Not, so let's just do not nth of type 3n,
>> Estelle Weyl: And then I need to add one more there. Okay, so let's go on to the next one.

[00:04:53]
Now you play with that a little bit. [COUGH] We don't have matches yet, I don't believe. But matches is going to be cool, because it will match a whole slough of things. So you can say li that matches, and have all these things that come after it. So instead of using, it's basically using Sass selectors without producing all that extra croft because how it like just basically adds.

[00:05:27]
It puts it all in one line and it doesn't expand it. It's nicely there, same li that matches. It has a title, it has a role. Either one, and then an a, so any a that is the descendant of an li that has a title or role. It basically matches this.

[00:05:48]
So this right here is a very simple example. So the second one is actually shorter than the first one. But can you imagine if you had long class names, and 16 of them, or added here. We have any, oop.
>> Estelle Weyl: Where was I? Here. So let's just put a return in here so I can see it.

[00:06:16]
So any A that is either focused or active, right? That is necessary within a side that matches that is either a descendant of a home, an element with an ID of home, or an element with ID of contact, right? So it's one line that matches these four lines.

[00:06:39]

>> Estelle Weyl: And let me just get rid of all of this to see if there's anything else. It is supported in Safari right now.
>> Estelle Weyl: So you could actually play with it live and you can do it if you're targeting only iOS. So similar to matches, we actually have something that does match.

[00:06:57]
So this is something you can use. What I just explained and said you can't use, you actually can use with prefix, and I do. This is one of those things where I, because in terms of JavaScript when I wanna reach a bunch of elements,
>> Estelle Weyl: I can do it this way.

[00:07:16]
So I can use query selector all and match, and put these in matches. So in Safari, it's matches. In Chrome and Android, it's -webkit-any, and in Firefox it's -moz-any. So what does this not match? Edge, right? We're not targeting, but if you're gonna do mobile, who here has a Windows phone?

[00:07:49]

>> Estelle Weyl: So sad, I feel so bad for them. No I don't.
>> Group: [LAUGH]
>> Estelle Weyl: So you can actually use matches but it's a prefix with any for web kit and [INAUDIBLE]. So,
>> Estelle Weyl: This is basically showing if you just use this which is pretty simple. It expands out to that, which is not so simple, right?

[00:08:16]
So it's a span that is descendant of .ban, .bar, .foo, of a link that has either of those classes. And so you would actually have to,
>> Estelle Weyl: And you can put the node.
>> Estelle Weyl: So you can say any link other than one that has the class of .bem, .bar or .foo.

[00:08:38]
So match all the links in this entire document except for ones that have these three classes. So you can put matches inside a not and do really complex sic. So the weird thing is let's say we to had,
>> Estelle Weyl: A .foo, .bar, and .bam, right? What is the specificity of this?

[00:08:58]
It depends what is matching. So if it matched, it actually, it's basically the highest and here will be not, right? So the specificity would be one ID. One element and one element. So, when you have three things in here, I believe and I'm not 100% sure, so I would have to double check.

[00:09:23]
But I believe it's the one with the strongest weight when it's not matching, and when it is matching it is whatever the weight of the property that is matching. So here if it was .bam It would be matching at 011, and if it was .foo it will be matching at 101.

[00:09:40]
Does that make sense?
>> Estelle Weyl: So we were gonna have the reference combinator and it was removed so i don't know if it is supported anywhere. But that was basically if you could actually say find an element that is referenced by this other element which would be really good for inputs and labels and would be really good for Aria.

[00:10:05]
Because a lot of times in Aria you state like labelled by this other thing, and would be good for data list, do you all know what a data list is? Okay, so an input, have you ever seen like a select and it looks like an input and you have all these options?

[00:10:23]
And like Google Chrome, it's like what do I want for, and you think you would say Christmas but it really is going to be some inappropriate thing that you can't repeat? Because people search for really weird things online, and most people just fake it when you have those pictures and, have you ever gone to Twitter and you've seen?

[00:10:43]
That's because that's what they search for cuz I don't get the same results that they do. Yeah, they're just basically telling me what they're searching for. So, anyway, that's a drop down, right? It's kind of like it's an input but there's a drop down with options. There's a native element in HTML that does that.

[00:11:01]
It is the list attribute on the input, so you put list and then,
>> Estelle Weyl: You point it to the ID of a data list. And a data list is basically a series of options, but it's not in a select. Instead it's in a data list element. And you basically give it all source of options and when you are on, I'll show you that during the break.

[00:11:30]

>> Estelle Weyl: It's really cool, and you can basically do that natively in the browser without adding any JavaScript frameworks. So anyway, we don't get that. Instead, we go on to the parent selector. So originally it was going to be this, and now it is going to be this. Not supported yet, so that could change.

[00:11:47]
But a header that has an h1, h2, basically a header that has a heading is what this would say, right? A header that does not have a heading, right? Header not has. So the reason that we haven't been able to get a parent selector is because when I said earlier that things need to be prefix until they were ready to ship.

[00:12:10]
Performance of checking every element to see what descendants they have is very slow so they'd never figure out performing enough way to do this. And there is something down there,
>> Estelle Weyl: and I can't show it to you. Or I could. Let me just show it to you here.

[00:12:28]
Inspect. And then go to slide.
>> Estelle Weyl: And then increase the slide size, so this is an inspector. I told you I would show you the inspector. And what I wanna do is I wanna increase the size of my slides so I can actually live change my slides. And I just give it a height of 800, and then I lost everything.

[00:12:55]
Because this is live and that's how my luck works.
>> Estelle Weyl: There we are. Okay, so a header contains something that is not a header. So, it,
>> Estelle Weyl: So this one says, a header that has something, right? It has a child that is not an h1, h2, h3. So you can get really complex with these things.

[00:13:23]
So when you says you can't target something with unknown ID or a class? Yeah, you can. I wouldn't do this in production, like this is just too complex, but you can, you can actually do that. And so, let's see if the parent selector is supporting it. Open a new window.

[00:13:43]

>> Estelle Weyl: And no, parent selectors are not selected yet, so okay. So we still have to wait a while.

