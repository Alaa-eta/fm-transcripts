WEBVTT

1
00:00:02.593 --> 00:00:06.381
&gt;&gt; Estelle Weyl: The next one
is a background image property.

2
00:00:06.381 --> 00:00:10.402
Originally, background image is used
to declare an image on your background.

3
00:00:10.402 --> 00:00:13.202
It can be one or more images.

4
00:00:13.202 --> 00:00:17.624
Originally, we were just given one image
and we had a few properties including

5
00:00:17.624 --> 00:00:22.046
the background image and then background
repeat, attachment, position and

6
00:00:22.046 --> 00:00:26.270
color.
&gt;&gt; Estelle Weyl: That's why I always

7
00:00:26.270 --> 00:00:29.196
suggest to people to not use
the background shorthand.

8
00:00:29.196 --> 00:00:31.462
Because when you use
the shorthand property,

9
00:00:31.462 --> 00:00:35.474
you're actually overwriting the background
color, the background position,

10
00:00:35.474 --> 00:00:38.221
the background attachment and
the background repeat.

11
00:00:38.221 --> 00:00:42.525
And I like to put my global reset
background repeat, no repeat.

12
00:00:42.525 --> 00:00:45.328
Cuz I very rarely want
to repeat a background

13
00:00:45.328 --> 00:00:49.462
image.
&gt;&gt; Estelle Weyl: So you could use as

14
00:00:49.462 --> 00:00:53.660
a value for background image either none
or the URL of an image or inherit, and

15
00:00:53.660 --> 00:00:58.117
it would inherit the image from its parent
and I don't think anyone would ever want

16
00:00:58.117 --> 00:01:03.548
to do that, intentionally.
&gt;&gt; Estelle Weyl: A few tips for

17
00:01:03.548 --> 00:01:08.481
background images if you're going
to use a background image ensure

18
00:01:08.481 --> 00:01:13.167
that there's enough contrast
between the text and your image.

19
00:01:13.167 --> 00:01:18.659
So we were talking about clear contrast
ratio a little bit yesterday for

20
00:01:18.659 --> 00:01:23.800
people with low vision rather,
you want a significant contrast.

21
00:01:24.800 --> 00:01:27.215
And then when you have a background image,

22
00:01:27.215 --> 00:01:31.993
unless there's transparency in that image,
you usually want a background color.

23
00:01:31.993 --> 00:01:35.018
Because if the image doesn't come through,
and

24
00:01:35.018 --> 00:01:39.021
let's say you have a really dark image,
so you have white text.

25
00:01:39.021 --> 00:01:42.206
And then you have a white background cuz
you didn't put a background color but

26
00:01:42.206 --> 00:01:44.122
you can have white text
on a white background.

27
00:01:44.122 --> 00:01:46.334
And that's not gonna be good.

28
00:01:46.334 --> 00:01:49.946
Background images do not print by default,
and

29
00:01:49.946 --> 00:01:54.923
there's no way to improve
accessibility on background images.

30
00:01:54.923 --> 00:01:57.893
Background images should
be purely decorative,

31
00:01:57.893 --> 00:02:02.488
because there's no way to add alt text to
describe to the user what the image is

32
00:02:02.488 --> 00:02:06.750
what you describe to your most
significant blind user which is Google.

33
00:02:08.760 --> 00:02:12.520
So the multiple background
image syntax is basically

34
00:02:12.520 --> 00:02:16.100
declaring one image comma separated and
the next image.

35
00:02:17.160 --> 00:02:20.812
And if you notice here, it says
background image green and then blue.

36
00:02:20.812 --> 00:02:24.633
And if you are not colorblind, you'll
see that the blue one is in the back.

37
00:02:24.633 --> 00:02:28.532
So basically gets painted back to front.

38
00:02:28.532 --> 00:02:31.358
So it's the last one
gets painted first and

39
00:02:31.358 --> 00:02:34.272
then the first one gets
painted on top of it.

40
00:02:34.272 --> 00:02:38.240
They are comma separated and

41
00:02:38.240 --> 00:02:44.427
the cross-fade function
&gt;&gt; Estelle Weyl: So

42
00:02:44.427 --> 00:02:50.515
cross-fading is the ability to basically
cross-fade between two images.

43
00:02:50.515 --> 00:02:55.133
And it is supported in some browsers,
and not in others.

44
00:02:55.133 --> 00:02:59.300
So ones where it's not supported,
the image you declare first will be on

45
00:02:59.300 --> 00:03:04.719
top.
&gt;&gt; Estelle Weyl: Then

46
00:03:04.719 --> 00:03:09.269
image set is the ability
to declare a set of images.

47
00:03:09.269 --> 00:03:12.239
And let's go again to can I use and

48
00:03:12.239 --> 00:03:16.424
do image set.
&gt;&gt; Estelle Weyl: Again,

49
00:03:16.424 --> 00:03:19.737
it works only with the WebKit prefix.

50
00:03:19.737 --> 00:03:23.971
So this is something that you
can't quite use quite yet, but

51
00:03:23.971 --> 00:03:25.721
I did wanna point it out.

52
00:03:25.721 --> 00:03:31.028
Because it will eventually come in,
and it is part of the spec.

53
00:03:31.028 --> 00:03:36.398
So,
&gt;&gt; Estelle Weyl: The type of images we can

54
00:03:36.398 --> 00:03:40.657
currently use is the key term none, which
is very useful when you're overwriting

55
00:03:40.657 --> 00:03:44.500
an image that you already declared and
you don't want it on this element.

56
00:03:45.610 --> 00:03:47.300
You can use the URL.

57
00:03:47.300 --> 00:03:51.211
And so you put URL and then in
parenthesis you can put a single image,

58
00:03:51.211 --> 00:03:55.671
you you can put the URL in parenthesis
with a single image and then the comma and

59
00:03:55.671 --> 00:03:56.780
then the next one.

60
00:03:56.780 --> 00:03:58.763
You can also use data URLs.

61
00:03:58.763 --> 00:04:02.552
So in this first example,
I have a gift and

62
00:04:02.552 --> 00:04:06.898
it's Bay 64 and
the data URI's right there.

63
00:04:06.898 --> 00:04:09.249
Not reduces a number of HTTP request.

64
00:04:09.249 --> 00:04:14.175
We all wanna do if it's a tinly
little image because this is not

65
00:04:14.175 --> 00:04:20.120
the most compact way of pulling
in an investment PNG with that.

66
00:04:20.120 --> 00:04:23.640
And then the second one is an SVG image.

67
00:04:23.640 --> 00:04:27.670
So you can actually just put the code
right there, and not have an HTTP request,

68
00:04:27.670 --> 00:04:30.320
if you're gonna have an SVG.

69
00:04:30.320 --> 00:04:35.450
And SVGs, depends on what you're creating
with your SVG, generally my SVGs are tiny,

70
00:04:35.450 --> 00:04:40.240
because I am not a graphic designer and
I'm basically just making shapes.

71
00:04:40.240 --> 00:04:42.940
So, it depends on the complexity, but

72
00:04:42.940 --> 00:04:47.540
that might be a useful way of reducing
an http request and improving performance.

73
00:04:47.540 --> 00:04:50.880
Then we also have linear and
radial gradients.

74
00:04:50.880 --> 00:04:55.372
We also have linear repeating gradients
and repeating radial gradients, and

75
00:04:55.372 --> 00:04:57.285
we also have conical gradients.

76
00:04:57.285 --> 00:05:01.099
We'll go over the linear radio and
the repeating ones but

77
00:05:01.099 --> 00:05:03.572
not the ones later on today.

78
00:05:03.572 --> 00:05:07.293
In the future if you look up
at the spec it says image and

79
00:05:07.293 --> 00:05:11.349
in parenthesis element and
then parenthesis image set and

80
00:05:11.349 --> 00:05:15.095
then parenthesis in cross state and
in parenthesis.

81
00:05:15.095 --> 00:05:17.010
That's why I showed you.

82
00:05:17.010 --> 00:05:20.830
Can I use, because there's these four
other features in the specification.

83
00:05:22.080 --> 00:05:27.250
And right now it kinda
only works in Firefox,

84
00:05:27.250 --> 00:05:28.840
cuz it's been working there for
a long time.

85
00:05:28.840 --> 00:05:30.730
The image and the element.

86
00:05:30.730 --> 00:05:34.670
So in Firefox you can
actually say element, and

87
00:05:34.670 --> 00:05:35.620
you used to be able to do this.

88
00:05:35.620 --> 00:05:36.846
I think they might have deprecated it.

89
00:05:36.846 --> 00:05:44.750
But you can actually put a canvas on the
page or design a canvas in the background,

90
00:05:44.750 --> 00:05:48.400
give it an ID and then put it
as the background of an element.

91
00:05:48.400 --> 00:05:56.030
And then with the image,
you can do a few things.

92
00:05:56.030 --> 00:06:01.810
The first one is basically picking up
a sprite and then putting a hash and

93
00:06:01.810 --> 00:06:06.932
then saying xy and then width and
height so the starting poing.

94
00:06:06.932 --> 00:06:10.726
And then the width and
height of the area you want to show and

95
00:06:10.726 --> 00:06:14.150
basically clip your background image.

96
00:06:14.150 --> 00:06:15.310
This is not fully supported.

97
00:06:15.310 --> 00:06:18.310
It was supported in Firefox long time ago.

98
00:06:18.310 --> 00:06:20.710
I don't know if it's even
still supported there.

99
00:06:20.710 --> 00:06:24.050
And then the second one is image.

100
00:06:24.050 --> 00:06:26.320
And then it's basically
try finding this image.

101
00:06:26.320 --> 00:06:27.903
If that doesn't work try
finding the next image.

102
00:06:27.903 --> 00:06:31.040
If that doesn't work, try finding
the third which would be really nice if we

103
00:06:31.040 --> 00:06:32.620
could have cuz then we could do a web p.

104
00:06:33.630 --> 00:06:38.529
And then a JpegXR, and then just a regular
Jpeg and see which ever one is supported

105
00:06:38.529 --> 00:06:41.772
in that browser they could use that for
backgrounds,

106
00:06:41.772 --> 00:06:46.096
because we do have the picture element and
we do have media queries, but

107
00:06:46.096 --> 00:06:50.883
it would be nice to be able to declare
an image, a background image in one line.

