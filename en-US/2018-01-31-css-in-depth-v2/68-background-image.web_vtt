WEBVTT

1
00:00:02.595 --> 00:00:04.600
&gt;&gt; Estelle Weyl: The next one
is a background image property.

2
00:00:06.520 --> 00:00:10.540
Originally, the background image is used
to declare an image on your background,

3
00:00:10.540 --> 00:00:13.340
it can be one or more images.

4
00:00:13.340 --> 00:00:17.940
Originally, we were just given one image,
and we had a few properties including

5
00:00:17.940 --> 00:00:22.320
the background image and then background
repeat, attachment, position, and color.

6
00:00:25.360 --> 00:00:29.220
That's why I always suggest to people
to not use the background shorthand,

7
00:00:29.220 --> 00:00:31.490
because when you use
the shorthand property,

8
00:00:31.490 --> 00:00:34.960
you're actually overwriting the background
color, the background position,

9
00:00:34.960 --> 00:00:38.140
the background attachment,
and the background repeat.

10
00:00:38.140 --> 00:00:42.670
And I like to put my global reset
background repeat, no repeat.

11
00:00:42.670 --> 00:00:48.550
Cause I very rarely want to
repeat a background-image.

12
00:00:48.550 --> 00:00:51.990
So you could use as a value for
background-image either none, or

13
00:00:51.990 --> 00:00:56.640
the URI of an image, or inherit and then
would inherit the image from its parent.

14
00:00:56.640 --> 00:00:59.363
And I don't think anyone would ever
want to do that intentionally.

15
00:01:02.503 --> 00:01:03.397
&gt;&gt; Estelle Weyl: A few tips for

16
00:01:03.397 --> 00:01:08.033
background images if you're going
to use a background image ensure

17
00:01:08.033 --> 00:01:12.110
there's enough contrast between
the text and your image.

18
00:01:12.110 --> 00:01:16.950
So we were talking about color contrast
ratio a little bit yesterday for

19
00:01:16.950 --> 00:01:23.800
people with low visibility or low vision
rather you want a significant contrast.

20
00:01:24.800 --> 00:01:29.550
And then when you have a background image,
unless there's transparency in that image,

21
00:01:29.550 --> 00:01:31.170
you usually want a background color.

22
00:01:32.170 --> 00:01:35.250
Because if the image doesn't come through,
and

23
00:01:35.250 --> 00:01:38.120
let's say you have a really dark image so
you have white text.

24
00:01:39.240 --> 00:01:41.690
And then you have a white background
coz you didn't put a background color.

25
00:01:41.690 --> 00:01:44.430
Well, you're gonna have white
text on a white background, and

26
00:01:44.430 --> 00:01:45.420
that's not gonna be good.

27
00:01:46.510 --> 00:01:49.010
Background images do not print by default.

28
00:01:49.010 --> 00:01:51.780
And there's no way to improve
accessibility on background images.

29
00:01:51.780 --> 00:01:57.800
There's no way to say, background images
should be purely decorative, because

30
00:01:57.800 --> 00:02:02.870
there's no way to provide all the text to
describe to the user what the image is,

31
00:02:02.870 --> 00:02:06.750
what you describe to your most
significant blind user which is Google.

32
00:02:08.760 --> 00:02:14.260
So the multiple background image syntax
is basically declaring one image,

33
00:02:14.260 --> 00:02:16.100
commas separated, and the next image.

34
00:02:17.160 --> 00:02:21.120
And if you notice here, it says
background image green and then blue and

35
00:02:21.120 --> 00:02:24.850
if you're not color blind, you'll see
that the blue one is in the back.

36
00:02:24.850 --> 00:02:30.080
So it basically gets painted back to
front, so the last one gets painted first,

37
00:02:30.080 --> 00:02:34.530
and then the first one
gets painted on top of it.

38
00:02:34.530 --> 00:02:39.988
They are comma separated.
&gt;&gt; Estelle Weyl: And

39
00:02:39.988 --> 00:02:44.312
the cross fade function.
&gt;&gt; Estelle Weyl: So

40
00:02:44.312 --> 00:02:50.730
cross-fading is the ability to basically
cross-fade between two images.

41
00:02:50.730 --> 00:02:55.166
And it is supported in some browsers and
not in others.

42
00:02:55.166 --> 00:02:58.646
So ones where it's not supported, the one
that you declare, the image you declare

43
00:02:58.646 --> 00:03:04.751
first will be on top.
&gt;&gt; Estelle Weyl: Then

44
00:03:04.751 --> 00:03:09.560
image-set is the ability
to declare a set of images.

45
00:03:09.560 --> 00:03:11.711
And let's go again to use and

46
00:03:11.711 --> 00:03:16.635
do image-set.
&gt;&gt; Estelle Weyl: Again it works

47
00:03:16.635 --> 00:03:21.156
only with the webkit prefix,
so this is something that you

48
00:03:21.156 --> 00:03:25.678
can't quite use quite yet, but
I did want to point it out,

49
00:03:25.678 --> 00:03:31.180
because it will eventually come in,
and it is part of the spec.

50
00:03:31.180 --> 00:03:36.560
So, the type of images we can

51
00:03:36.560 --> 00:03:41.750
currently use is the key term none which
is very useful when you're overriding

52
00:03:41.750 --> 00:03:44.500
an image that you already declared and
you don't want it on this element.

53
00:03:45.610 --> 00:03:48.810
You can use the url and so you put url and

54
00:03:48.810 --> 00:03:53.620
then in parentheses you can put
a single image or you can put the url

55
00:03:53.620 --> 00:03:57.070
in parentheses with a single image and
then the comma and then the next one.

56
00:03:57.070 --> 00:04:00.930
You can also use data URIs,
so in this first example,

57
00:04:00.930 --> 00:04:07.030
I have a gif and it's base 64, and
the data uri is right there, and

58
00:04:07.030 --> 00:04:10.620
that reduces the number of HTTP requests,
but you only want to do that if it's

59
00:04:10.620 --> 00:04:16.010
a tiny little image, because this is not
the most compact way of pulling in images.

60
00:04:16.010 --> 00:04:20.120
So you wouldn't want to do a huge jpeg or
png with that.

61
00:04:20.120 --> 00:04:23.640
And then the second one is an svg image.

62
00:04:23.640 --> 00:04:26.475
So you can actually just put
the code right there, and

63
00:04:26.475 --> 00:04:29.751
not have an HTTP request,
if you're gonna have an .svg, and

64
00:04:29.751 --> 00:04:33.230
an .svg, it depends on what
you're creating with your .svgs.

65
00:04:33.230 --> 00:04:35.450
Generally my .svgs are tiny,

66
00:04:35.450 --> 00:04:40.970
because, I am not a graphic designer and
I'm basically just making shapes.

67
00:04:40.970 --> 00:04:42.840
So depends on the complexity.

68
00:04:42.840 --> 00:04:47.540
But that might be a useful way of reducing
an http request and improving performance.

69
00:04:47.540 --> 00:04:50.880
Then we also have linear and
radio gradients.

70
00:04:50.880 --> 00:04:55.840
We also have linear repeating gradients
and repeating radio gradients and

71
00:04:55.840 --> 00:04:57.260
we also have conical gradients.

72
00:04:57.260 --> 00:05:00.930
We'll go over the linear radio and
the repeating ones, but

73
00:05:00.930 --> 00:05:02.650
not the conical ones, later on today.

74
00:05:04.650 --> 00:05:08.950
In the future, if you look up at the spec,

75
00:05:08.950 --> 00:05:12.860
it says, image, and then parentheses,
element, and then parentheses, image-set,

76
00:05:12.860 --> 00:05:15.290
and then parentheses, and
cross-fade, and then parentheses.

77
00:05:15.290 --> 00:05:18.010
That's why I've showed you the can I use,

78
00:05:18.010 --> 00:05:20.830
because there's these four other
features in this specification?

79
00:05:22.080 --> 00:05:27.160
And right now,
it kind of only works in Firefox,

80
00:05:27.160 --> 00:05:30.730
because it's been working there for
a long time, the image and the element.

81
00:05:30.730 --> 00:05:34.560
So in Firefox,
you can actually say, element.

82
00:05:34.560 --> 00:05:35.620
And you used to be able to do this.

83
00:05:35.620 --> 00:05:36.838
I think they might have deprecated it.

84
00:05:36.838 --> 00:05:40.623
But you can actually put
a canvas on the page or

85
00:05:40.623 --> 00:05:45.104
design a canvas in the background,
give it an ID, and

86
00:05:45.104 --> 00:05:50.494
then put it as the background of an image,
of an element rather.

87
00:05:50.494 --> 00:05:55.840
And then with the image
you can do a few things.

88
00:05:55.840 --> 00:06:01.478
The first one is basically picking up
a sprite, and then putting in a hash, and

89
00:06:01.478 --> 00:06:07.110
then saying x, y, and then width and
height, so the starting point.

90
00:06:07.110 --> 00:06:09.090
And then the width and

91
00:06:09.090 --> 00:06:14.150
height of the area you wanna show, and
basically clip your background image.

92
00:06:14.150 --> 00:06:15.310
This is not fully supported.

93
00:06:15.310 --> 00:06:18.310
It was supported in
Firefox a long time ago.

94
00:06:18.310 --> 00:06:20.710
I don't know if it's even
still supported there.

95
00:06:20.710 --> 00:06:26.320
And then the second one is image and then
it's basically try finding this image.

96
00:06:26.320 --> 00:06:28.080
If that doesn't work,
try finding the next image.

97
00:06:28.080 --> 00:06:31.010
If that doesn't work, try finding
the third which would be really nice if we

98
00:06:31.010 --> 00:06:34.824
could have cuz then we could do
a web p and then a jpeg xr and

99
00:06:34.824 --> 00:06:39.620
then just a regular jpeg and
see whichever one is supported

100
00:06:39.620 --> 00:06:42.750
in that browser they could use that for
backgrounds.

101
00:06:42.750 --> 00:06:46.260
Cause we do have the picture element and
we do have media queries.

102
00:06:46.260 --> 00:06:49.026
But it would be nice to just to
be able to declare an image,

103
00:06:49.026 --> 00:06:50.708
a background image, in one line.

