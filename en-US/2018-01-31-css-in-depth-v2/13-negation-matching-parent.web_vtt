WEBVTT

1
00:00:02.935 --> 00:00:05.920
&gt;&gt; Estelle Weyl: Okay, so let's cover
some other logical combinators,

2
00:00:05.920 --> 00:00:09.723
including negation, which you've
seen me use, matching and parent.

3
00:00:09.723 --> 00:00:15.707
So, you've seen me type this a few times,
what does it mean, :not?

4
00:00:15.707 --> 00:00:21.437
It means not whatever is
inside the parentheses.

5
00:00:21.437 --> 00:00:28.743
So this matches any element
that is not also matched by S1.

6
00:00:28.743 --> 00:00:33.171
S1 is a selector, and
it's a simple selector.

7
00:00:33.171 --> 00:00:39.730
By simple selector I don't mean
easy selector, like E space F.

8
00:00:39.730 --> 00:00:41.946
That's actually combinator.

9
00:00:41.946 --> 00:00:47.015
No combinators, a simple selector is
like nth of type 27, N plus three.

10
00:00:47.015 --> 00:00:50.312
That's a simple selector.

11
00:00:50.312 --> 00:00:52.591
There's no spaces, there's no combinators.

12
00:00:52.591 --> 00:00:56.353
So you can say if you
want to do everything but

13
00:00:56.353 --> 00:00:59.811
the first five list items you could do E,

14
00:00:59.811 --> 00:01:04.715
not first of type E,
not second of type, FF type two E.

15
00:01:04.715 --> 00:01:10.021
Right, so
that would be one way of doing it.

16
00:01:10.021 --> 00:01:15.199
So it's basically,
matches any div that does not

17
00:01:15.199 --> 00:01:20.803
have the class of .excludeMe.
&gt;&gt; Estelle Weyl: So

18
00:01:20.803 --> 00:01:25.009
it's basically excludes everything
that says has a class of .excludeMe.

19
00:01:25.009 --> 00:01:27.817
So specificity.

20
00:01:27.817 --> 00:01:32.612
The specificity of not is it
doesn't have any specific wait.

21
00:01:32.612 --> 00:01:35.109
The knowledge itself does
not have any specificity.

22
00:01:35.109 --> 00:01:40.848
Whatever is inside there
is what gives it the wait.

23
00:01:40.848 --> 00:01:46.445
So here the .excludeMe,
you would have 010 for

24
00:01:46.445 --> 00:01:53.486
the excludeMe and 001 for
the div, so that would be a 011.

25
00:01:53.486 --> 00:01:57.110
If this had been a pound sign, right?

26
00:01:57.110 --> 00:02:02.526
It would be,
&gt;&gt; Estelle Weyl: 101,

27
00:02:02.526 --> 00:02:07.512
because 100 for the id and 001 for

28
00:02:07.512 --> 00:02:11.604
the div, does that make sense?

29
00:02:11.604 --> 00:02:13.529
Okay.

30
00:02:13.529 --> 00:02:19.222
That has been supported for a long time.
&gt;&gt; Estelle Weyl: Not supported yet

31
00:02:19.222 --> 00:02:22.530
or actually just in Safari
is same many things.

32
00:02:22.530 --> 00:02:23.849
So you can put a list of things.

33
00:02:23.849 --> 00:02:29.417
So we could have done,
&gt;&gt; Estelle Weyl: e:not S of type one or

34
00:02:29.417 --> 00:02:33.349
nth only of type, that kind of stuff.

35
00:02:33.349 --> 00:02:36.526
Still they have to be simple selectors,
so no combinators within there.

36
00:02:36.526 --> 00:02:41.251
But you can put as many as you want and
that will be supported.

37
00:02:41.251 --> 00:02:43.197
Safari's supporting it already.

38
00:02:43.197 --> 00:02:45.917
So div, you will match any div except for

39
00:02:45.917 --> 00:02:50.325
the ones that have either of
the class of excludeMe or excuseYou.

40
00:02:50.325 --> 00:02:55.293
You could also have written for right now,
&gt;&gt; Estelle Weyl: You can

41
00:02:55.293 --> 00:02:58.972
do,
&gt;&gt; Estelle Weyl: And string them together,

42
00:02:58.972 --> 00:03:04.246
that works.
&gt;&gt; Estelle Weyl: So

43
00:03:04.246 --> 00:03:07.170
let's take 60 seconds
to just play with this.

44
00:03:07.170 --> 00:03:10.612
Play with it on your own,
but I'm gonna do it up here.

45
00:03:10.612 --> 00:03:15.052
So all of them have the color
blue to start with, and

46
00:03:15.052 --> 00:03:19.493
then all of them change to the color red,
except for

47
00:03:19.493 --> 00:03:24.452
if it's the first child,
which would also be the first of

48
00:03:24.452 --> 00:03:29.625
type.
&gt;&gt; Estelle Weyl: And here, I can put,

49
00:03:33.450 --> 00:03:37.387
&gt;&gt; Estelle Weyl: nth-of-type 2n.

50
00:03:37.387 --> 00:03:41.533
And that actually matches, then every,

51
00:03:41.533 --> 00:03:48.647
it basically said don't match any
even ones, just match the odd ones.

52
00:03:48.647 --> 00:03:49.398
And then I could do plus 1 here,
and that still matches.

53
00:03:49.398 --> 00:03:55.882
But I could not do an,
&gt;&gt; Estelle Weyl: li

54
00:03:55.882 --> 00:04:00.464
that is a child of an li because
that has a space in it, and

55
00:04:00.464 --> 00:04:03.890
that means that it is a complex selector.

56
00:04:03.890 --> 00:04:06.382
Even though it's a really easy selector,
right?

57
00:04:06.382 --> 00:04:09.968
An li that is a descendant of another li.

58
00:04:09.968 --> 00:04:15.058
Or that is the definite
of an unordered list.

59
00:04:15.058 --> 00:04:17.799
So you'd think that that
would say any li except for

60
00:04:17.799 --> 00:04:22.004
the ones that is the child of an unordered
list, but that is complex selector,

61
00:04:22.004 --> 00:04:29.161
not a simple selector.
&gt;&gt; Estelle Weyl: And

62
00:04:29.161 --> 00:04:33.189
you can actually put
an attribute in there, so

63
00:04:33.189 --> 00:04:37.892
we can say, not.
&gt;&gt; Estelle Weyl: That's a line within

64
00:04:37.892 --> 00:04:39.351
an li, so I can't do that.

65
00:04:39.351 --> 00:04:45.815
Not, so let's just do not nth of type 3n,
&gt;&gt; Estelle Weyl: And

66
00:04:45.815 --> 00:04:51.421
then I need to add one more there.

67
00:04:51.421 --> 00:04:53.360
Okay, so let's go on to the next one.

68
00:04:53.360 --> 00:04:56.944
Now you play with that a little bit.

69
00:04:56.944 --> 00:05:02.160
[COUGH] We don't have matches yet,
I don't believe.

70
00:05:02.160 --> 00:05:09.105
But matches is going to be cool, because
it will match a whole slough of things.

71
00:05:09.105 --> 00:05:15.455
So you can say li that matches, and
have all these things that come after it.

72
00:05:15.455 --> 00:05:20.810
So instead of using,
it's basically using Sass selectors

73
00:05:20.810 --> 00:05:27.954
without producing all that extra croft
because how it like just basically adds.

74
00:05:27.954 --> 00:05:32.105
It puts it all in one line and
it doesn't expand it.

75
00:05:32.105 --> 00:05:35.247
It's nicely there, same li that matches.

76
00:05:35.247 --> 00:05:37.733
It has a title, it has a role.

77
00:05:37.733 --> 00:05:39.918
Either one, and then an a,

78
00:05:39.918 --> 00:05:44.868
so any a that is the descendant of
an li that has a title or role.

79
00:05:44.868 --> 00:05:48.598
It basically matches this.

80
00:05:48.598 --> 00:05:52.131
So this right here is
a very simple example.

81
00:05:52.131 --> 00:05:55.141
So the second one is actually
shorter than the first one.

82
00:05:55.141 --> 00:06:00.346
But can you imagine if you had long class
names, and 16 of them, or added here.

83
00:06:00.346 --> 00:06:02.856
We have any, oop.

84
00:06:09.586 --> 00:06:11.088
&gt;&gt; Estelle Weyl: Where was I?

85
00:06:11.088 --> 00:06:12.601
Here.

86
00:06:12.601 --> 00:06:16.738
So let's just put a return in here so
I can see it.

87
00:06:16.738 --> 00:06:21.620
So any A that is either focused or
active, right?

88
00:06:21.620 --> 00:06:26.178
That is necessary within a side that
matches that is either a descendant of

89
00:06:26.178 --> 00:06:31.115
a home, an element with an ID of home,
or an element with ID of contact, right?

90
00:06:31.115 --> 00:06:33.419
So it's one line that matches these four

91
00:06:33.419 --> 00:06:39.160
lines.
&gt;&gt; Estelle Weyl: And

92
00:06:39.160 --> 00:06:41.724
let me just get rid of all of this
to see if there's anything else.

93
00:06:41.724 --> 00:06:46.881
It is supported in Safari right now.
&gt;&gt; Estelle Weyl: So you

94
00:06:46.881 --> 00:06:51.721
could actually play with it live and you
can do it if you're targeting only iOS.

95
00:06:51.721 --> 00:06:57.182
So similar to matches, we actually
have something that does match.

96
00:06:57.182 --> 00:06:59.198
So this is something you can use.

97
00:06:59.198 --> 00:07:02.614
What I just explained and
said you can't use,

98
00:07:02.614 --> 00:07:05.866
you actually can use with prefix,
and I do.

99
00:07:05.866 --> 00:07:10.631
This is one of those things where I,
because in terms of JavaScript when I

100
00:07:10.631 --> 00:07:16.753
wanna reach a bunch of elements,
&gt;&gt; Estelle Weyl: I can do it this way.

101
00:07:16.753 --> 00:07:23.560
So I can use query selector all and
match, and put these in matches.

102
00:07:23.560 --> 00:07:26.812
So in Safari, it's matches.

103
00:07:26.812 --> 00:07:32.670
In Chrome and Android, it's -webkit-any,

104
00:07:32.670 --> 00:07:36.922
and in Firefox it's -moz-any.

105
00:07:36.922 --> 00:07:39.935
So what does this not match?

106
00:07:39.935 --> 00:07:41.142
Edge, right?

107
00:07:41.142 --> 00:07:44.936
We're not targeting, but
if you're gonna do mobile,

108
00:07:44.936 --> 00:07:49.762
who here has a Windows phone?
&gt;&gt; Estelle Weyl: So sad,

109
00:07:49.762 --> 00:07:51.157
I feel so bad for them.

110
00:07:51.157 --> 00:07:53.962
No I don't.
&gt;&gt; Group: [LAUGH]

111
00:07:53.962 --> 00:07:56.623
&gt;&gt; Estelle Weyl: So you can actually use

112
00:07:56.623 --> 00:08:03.918
matches but it's a prefix with any for
web kit and [INAUDIBLE].

113
00:08:03.918 --> 00:08:07.676
So,
&gt;&gt; Estelle Weyl: This is

114
00:08:07.676 --> 00:08:11.141
basically showing if you just
use this which is pretty simple.

115
00:08:11.141 --> 00:08:16.115
It expands out to that,
which is not so simple, right?

116
00:08:16.115 --> 00:08:21.011
So it's a span that is descendant of .ban,
.bar,

117
00:08:21.011 --> 00:08:25.815
.foo, of a link that has
either of those classes.

118
00:08:25.815 --> 00:08:28.270
And so you would actually have to,
&gt;&gt; Estelle Weyl: And

119
00:08:28.270 --> 00:08:33.088
you can put the node.
&gt;&gt; Estelle Weyl: So you can say any link

120
00:08:33.088 --> 00:08:38.426
other than one that has the class of .bem,
.bar or .foo.

121
00:08:38.426 --> 00:08:40.930
So match all the links in this
entire document except for

122
00:08:40.930 --> 00:08:42.590
ones that have these three classes.

123
00:08:42.590 --> 00:08:46.811
So you can put matches inside a not and
do really complex sic.

124
00:08:46.811 --> 00:08:53.376
So the weird thing is let's say we to had,
&gt;&gt; Estelle Weyl: A .foo,

125
00:08:53.376 --> 00:08:56.800
.bar, and .bam, right?

126
00:08:56.800 --> 00:08:58.401
What is the specificity of this?

127
00:08:58.401 --> 00:09:02.425
It depends what is matching.

128
00:09:02.425 --> 00:09:07.410
So if it matched, it actually,
it's basically the highest and

129
00:09:07.410 --> 00:09:09.453
here will be not, right?

130
00:09:09.453 --> 00:09:14.645
So the specificity would be one ID.

131
00:09:14.645 --> 00:09:18.352
One element and one element.

132
00:09:18.352 --> 00:09:22.262
So, when you have three things in here,
I believe and I'm not 100% sure, so

133
00:09:22.262 --> 00:09:23.714
I would have to double check.

134
00:09:23.714 --> 00:09:28.015
But I believe it's the one with the
strongest weight when it's not matching,

135
00:09:28.015 --> 00:09:32.529
and when it is matching it is whatever the
weight of the property that is matching.

136
00:09:32.529 --> 00:09:37.191
So here if it was .bam It
would be matching at 011, and

137
00:09:37.191 --> 00:09:40.899
if it was .foo it will be matching at 101.

138
00:09:40.899 --> 00:09:44.001
Does that make sense?
&gt;&gt; Estelle Weyl: So

139
00:09:44.001 --> 00:09:48.741
we were gonna have the reference
combinator and it was removed so

140
00:09:48.741 --> 00:09:51.921
i don't know if it is supported anywhere.

141
00:09:51.921 --> 00:09:56.946
But that was basically if you could
actually say find an element that

142
00:09:56.946 --> 00:10:01.795
is referenced by this other element
which would be really good for

143
00:10:01.795 --> 00:10:05.692
inputs and labels and
would be really good for Aria.

144
00:10:05.692 --> 00:10:11.396
Because a lot of times in Aria you state
like labelled by this other thing,

145
00:10:11.396 --> 00:10:16.557
and would be good for data list,
do you all know what a data list is?

146
00:10:16.557 --> 00:10:20.124
Okay, so an input,
have you ever seen like a select and

147
00:10:20.124 --> 00:10:23.628
it looks like an input and
you have all these options?

148
00:10:23.628 --> 00:10:25.093
And like Google Chrome,

149
00:10:25.093 --> 00:10:29.206
it's like what do I want for, and
you think you would say Christmas but

150
00:10:29.206 --> 00:10:33.546
it really is going to be some
inappropriate thing that you can't repeat?

151
00:10:33.546 --> 00:10:38.292
Because people search for really weird
things online, and most people just fake

152
00:10:38.292 --> 00:10:43.257
it when you have those pictures and, have
you ever gone to Twitter and you've seen?

153
00:10:43.257 --> 00:10:45.616
That's because that's what they search for

154
00:10:45.616 --> 00:10:48.042
cuz I don't get the same
results that they do.

155
00:10:48.042 --> 00:10:51.894
Yeah, they're just basically telling
me what they're searching for.

156
00:10:51.894 --> 00:10:53.843
So, anyway, that's a drop down, right?

157
00:10:53.843 --> 00:10:58.197
It's kind of like it's an input but
there's a drop down with options.

158
00:10:58.197 --> 00:11:01.272
There's a native element
in HTML that does that.

159
00:11:01.272 --> 00:11:04.499
It is the list attribute on the input,
so you put list and

160
00:11:04.499 --> 00:11:08.909
then,
&gt;&gt; Estelle Weyl: You point it to

161
00:11:08.909 --> 00:11:11.128
the ID of a data list.

162
00:11:11.128 --> 00:11:15.207
And a data list is basically a series
of options, but it's not in a select.

163
00:11:15.207 --> 00:11:18.746
Instead it's in a data list element.

164
00:11:18.746 --> 00:11:24.652
And you basically give it all source
of options and when you are on,

165
00:11:24.652 --> 00:11:31.180
I'll show you that during the break.
&gt;&gt; Estelle Weyl: It's really cool,

166
00:11:31.180 --> 00:11:35.264
and you can basically do that natively in
the browser without adding any JavaScript

167
00:11:35.264 --> 00:11:35.974
frameworks.

168
00:11:35.974 --> 00:11:37.757
So anyway, we don't get that.

169
00:11:37.757 --> 00:11:40.396
Instead, we go on to the parent selector.

170
00:11:40.396 --> 00:11:45.855
So originally it was going to be this,
and now it is going to be this.

171
00:11:45.855 --> 00:11:47.736
Not supported yet, so that could change.

172
00:11:47.736 --> 00:11:50.353
But a header that has an h1, h2,

173
00:11:50.353 --> 00:11:55.603
basically a header that has a heading
is what this would say, right?

174
00:11:55.603 --> 00:12:00.196
A header that does not have a heading,
right?

175
00:12:00.196 --> 00:12:03.135
Header not has.

176
00:12:03.135 --> 00:12:06.973
So the reason that we haven't been able to
get a parent selector is because when I

177
00:12:06.973 --> 00:12:10.489
said earlier that things need to be
prefix until they were ready to ship.

178
00:12:10.489 --> 00:12:15.410
Performance of checking every element
to see what descendants they have is

179
00:12:15.410 --> 00:12:20.113
very slow so they'd never figure out
performing enough way to do this.

180
00:12:20.113 --> 00:12:25.382
And there is something down there,
&gt;&gt; Estelle Weyl: and

181
00:12:25.382 --> 00:12:26.664
I can't show it to you.

182
00:12:26.664 --> 00:12:27.384
Or I could.

183
00:12:27.384 --> 00:12:28.806
Let me just show it to you here.

184
00:12:28.806 --> 00:12:31.819
Inspect.

185
00:12:31.819 --> 00:12:35.955
And then go to slide.
&gt;&gt; Estelle Weyl: And

186
00:12:35.955 --> 00:12:40.500
then increase the slide size,
so this is an inspector.

187
00:12:40.500 --> 00:12:42.351
I told you I would show you the inspector.

188
00:12:42.351 --> 00:12:46.753
And what I wanna do is I wanna
increase the size of my slides so

189
00:12:46.753 --> 00:12:49.582
I can actually live change my slides.

190
00:12:49.582 --> 00:12:55.537
And I just give it a height of 800,
and then I lost everything.

191
00:12:55.537 --> 00:12:58.757
Because this is live and
that's how my luck works.

192
00:13:02.334 --> 00:13:04.059
&gt;&gt; Estelle Weyl: There we are.

193
00:13:04.059 --> 00:13:07.977
Okay, so a header contains
something that is not a header.

194
00:13:07.977 --> 00:13:12.288
So, it,
&gt;&gt; Estelle Weyl: So this one says,

195
00:13:12.288 --> 00:13:16.510
a header that has something, right?

196
00:13:16.510 --> 00:13:19.751
It has a child that is not an h1, h2, h3.

197
00:13:19.751 --> 00:13:23.231
So you can get really
complex with these things.

198
00:13:23.231 --> 00:13:28.096
So when you says you can't target
something with unknown ID or a class?

199
00:13:28.096 --> 00:13:29.132
Yeah, you can.

200
00:13:29.132 --> 00:13:34.023
I wouldn't do this in production, like
this is just too complex, but you can,

201
00:13:34.023 --> 00:13:35.629
you can actually do that.

202
00:13:35.629 --> 00:13:39.631
And so, let's see if the parent
selector is supporting it.

203
00:13:39.631 --> 00:13:43.951
Open a new window.
&gt;&gt; Estelle Weyl: And no,

204
00:13:43.951 --> 00:13:49.181
parent selectors are not selected yet,
so okay.

205
00:13:49.181 --> 00:13:51.387
So we still have to wait a while.

