WEBVTT

1
00:00:03.958 --> 00:00:09.838
&gt;&gt; Estelle Weyl: Let's move on
to user interface selectors.

2
00:00:09.838 --> 00:00:15.165
So, in HTML, you can have elements
that are enabled or disabled.

3
00:00:15.165 --> 00:00:17.881
You can have elements that are checked or
not checked.

4
00:00:19.346 --> 00:00:25.043
&gt;&gt; Estelle Weyl: So, here it says,
can anyone read this to me?

5
00:00:25.043 --> 00:00:27.685
Well let me show you how you read it.

6
00:00:27.685 --> 00:00:29.334
You read it from the end.

7
00:00:29.334 --> 00:00:32.302
So it says, any label,
what does a plus sign mean?

8
00:00:33.493 --> 00:00:34.391
&gt;&gt; Speaker 2: Immediately following.

9
00:00:34.391 --> 00:00:35.935
&gt;&gt; Estelle Weyl: Immediately following,
very good.

10
00:00:35.935 --> 00:00:41.159
So any label that comes immediately after,

11
00:00:41.159 --> 00:00:45.262
a checked input of type check box.

12
00:00:45.262 --> 00:00:49.086
So right here we have a check box and we
have a label and we have a check box and

13
00:00:49.086 --> 00:00:49.972
we have a label.

14
00:00:49.972 --> 00:00:53.875
So if I check this check box
the color changes to red,

15
00:00:53.875 --> 00:00:58.600
if I uncheck it it changes back
because it is no longer checked.

16
00:00:58.600 --> 00:01:00.372
Same thing for here.

17
00:01:00.372 --> 00:01:04.599
And because I was thinking about
accessibility and I included a label,

18
00:01:04.599 --> 00:01:08.150
I don't actually have to
check on the checkbox.

19
00:01:08.150 --> 00:01:14.242
Check right here on the label and
that will toggle it on and off.

20
00:01:14.242 --> 00:01:16.636
So that's toggling the checkbox,

21
00:01:16.636 --> 00:01:22.002
which is then activating the CSS
because this then starts matching.

22
00:01:22.002 --> 00:01:27.065
&gt;&gt; Estelle Weyl: And so when I said
earlier, that CSS updates immediately,

23
00:01:27.065 --> 00:01:32.951
I just updated a UI feature and
this CSS said now I match, right?

24
00:01:34.503 --> 00:01:39.391
&gt;&gt; Estelle Weyl: So the UI features that
we have are default, valid, invalid,

25
00:01:39.391 --> 00:01:41.248
required, optional.

26
00:01:41.248 --> 00:01:46.078
In range and out of range, read-only and
read-write, placeholder shown, and

27
00:01:46.078 --> 00:01:49.228
we're gonna have either user error or
user invalid,

28
00:01:49.228 --> 00:01:52.230
neither of them are supported right now.

29
00:01:52.230 --> 00:01:54.097
It's in the spec, it seems to be influx.

30
00:01:54.097 --> 00:01:55.808
I read both of them
depending on which version.

31
00:01:55.808 --> 00:01:58.809
So I'm not telling you
which one it's gonna be.

32
00:01:58.809 --> 00:02:04.015
So in this form right here,
we have if it's valid,

33
00:02:04.015 --> 00:02:07.172
it has a border that's green.

34
00:02:07.172 --> 00:02:11.771
If it's invalid,
it has a border that's red.

35
00:02:11.771 --> 00:02:16.803
If it's required either
via the required attribute

36
00:02:16.803 --> 00:02:21.834
being present or
Aria-required being set to true,

37
00:02:21.834 --> 00:02:25.848
it's going to have a border of 5 pixels.

38
00:02:25.848 --> 00:02:30.267
If it's optional,
which means it's not required,

39
00:02:30.267 --> 00:02:33.815
it doesn't have the required attribute.

40
00:02:33.815 --> 00:02:36.075
The border will be 10 pixels wide.

41
00:02:36.075 --> 00:02:41.171
If it's out of range which means,

42
00:02:41.171 --> 00:02:44.859
in those it says 5 to 7,

43
00:02:44.859 --> 00:02:48.910
that means 5, 6, or 7.

44
00:02:48.910 --> 00:02:52.816
Number between 0 and 10 means 0,
1, 2, 3, 4, 5, 6, 7, 8, 9, 10.

45
00:02:52.816 --> 00:02:56.975
It does not mean 5.2,
it does not mean 5.758.

46
00:02:56.975 --> 00:03:01.790
Because in HTML when you have a range,
you have a min and a max.

47
00:03:01.790 --> 00:03:04.334
And right here we have a min and a max.

48
00:03:04.334 --> 00:03:08.290
There's a step attribute
that we did not include.

49
00:03:08.290 --> 00:03:11.345
The step attribute defaults
to the value of 1.

50
00:03:11.345 --> 00:03:17.563
If I had said step any then it would have
been 5, 5.0001 would also have been valid.

51
00:03:17.563 --> 00:03:23.421
But I did not include the step so
it defaults to the value of 1.

52
00:03:23.421 --> 00:03:27.169
In the second one, I put step 0.1, so

53
00:03:27.169 --> 00:03:32.034
0.1 would be valid,
0.11 will not be valid.

54
00:03:33.934 --> 00:03:39.787
&gt;&gt; Estelle Weyl: Here,
it is invalid because it is required.

55
00:03:39.787 --> 00:03:44.007
We see that it's required because it has
5 pixels and I don't have a number in it.

56
00:03:44.007 --> 00:03:48.773
So it's matching required equals
true of having a 5 pixel border

57
00:03:48.773 --> 00:03:51.124
instead of a 10 pixel border.

58
00:03:51.124 --> 00:03:55.610
And because it is empty and
it is not optional, it is not valid.

59
00:03:57.130 --> 00:04:00.896
So
&gt;&gt; Estelle Weyl: And so

60
00:04:00.896 --> 00:04:04.761
I've put 4, it is not valid.

61
00:04:04.761 --> 00:04:05.839
And it is out of range.

62
00:04:09.101 --> 00:04:15.367
&gt;&gt; Estelle Weyl: If I put 5,
it's valid because it is in range.

63
00:04:15.367 --> 00:04:18.553
And the background became light green.

64
00:04:18.553 --> 00:04:25.371
When there is no value and
it's not required, it's in range.

65
00:04:25.371 --> 00:04:31.980
So, here if I put -3, it's not valid.

66
00:04:34.127 --> 00:04:40.155
&gt;&gt; Estelle Weyl: It becomes valid, if I do
0.1 It's valid if I do 0.5 it's not valid.

67
00:04:40.155 --> 00:04:45.073
So that's a mixture of HTML and
CSS that you need to understand.

68
00:04:45.073 --> 00:04:49.957
So one of the things that is really
important is to understand the attributes

69
00:04:49.957 --> 00:04:50.962
that you have.

70
00:04:50.962 --> 00:04:54.871
So a lot of the CSS that we've seen so
far has just been based on selectors and

71
00:04:54.871 --> 00:04:55.877
classes, right?

72
00:04:55.877 --> 00:04:58.694
That's what we use most of the time.

73
00:04:58.694 --> 00:05:02.061
But if you understand HTML and
all the attributes that it has,

74
00:05:02.061 --> 00:05:04.472
you can really make CSS
even more powerful.

75
00:05:04.472 --> 00:05:05.398
You had a question.

76
00:05:05.398 --> 00:05:10.265
&gt;&gt; Speaker 2: Does not valid express
the same condition as invalid?

77
00:05:10.265 --> 00:05:10.807
&gt;&gt; Estelle Weyl: Yes.

78
00:05:10.807 --> 00:05:11.616
&gt;&gt; Speaker 2: Okay.

79
00:05:11.616 --> 00:05:15.548
&gt;&gt; Estelle Weyl: And you know what,
we can test it, let's just double check.

80
00:05:15.548 --> 00:05:23.752
So here I'm gonna do not.

81
00:05:32.165 --> 00:05:35.812
&gt;&gt; Estelle Weyl: Yes, so if you want to
play around with this for just a minute.

82
00:05:37.524 --> 00:05:40.749
&gt;&gt; Estelle Weyl: Okay so
when I was saying that CSS is powerful,

83
00:05:40.749 --> 00:05:42.324
if you're in the deck and

84
00:05:42.324 --> 00:05:47.053
you're playing with this you're
basically playing on a different page.

85
00:05:47.053 --> 00:05:50.792
So to move the deck forward just
click anywhere where it's pink and

86
00:05:50.792 --> 00:05:52.678
then the arrows will work again.

87
00:05:52.678 --> 00:05:54.839
So when you're in here and
you're editing this,

88
00:05:54.839 --> 00:05:57.006
the right arrow will
actually make it move right.

89
00:05:57.006 --> 00:05:59.533
So it doesn't make the deck break, right?

90
00:05:59.533 --> 00:06:03.320
So you have to just click anywhere out and
then you can move forward again, yes.

91
00:06:03.320 --> 00:06:05.752
&gt;&gt; Speaker 3: The email address
when I'm curious about,

92
00:06:05.752 --> 00:06:09.628
cuz as you're typing you know you
might be typing the email address and

93
00:06:09.628 --> 00:06:12.534
might be frustrating for
an end user to see code red.

94
00:06:12.534 --> 00:06:14.329
Is there a way around that?

95
00:06:14.329 --> 00:06:15.624
&gt;&gt; Estelle Weyl: You
would not make it go red.

96
00:06:15.624 --> 00:06:19.225
You would actually like, you do this, it's
all over the web right now, but it's so

97
00:06:19.225 --> 00:06:20.518
steadily, this obnoxious.

98
00:06:20.518 --> 00:06:26.175
So one of the things we're gonna today is
we're gonna make really ugly websites.

99
00:06:26.175 --> 00:06:28.257
And the goal is if you're
make an ugly website,

100
00:06:28.257 --> 00:06:30.874
you're not gonna worry about
whether it looks good or not.

101
00:06:30.874 --> 00:06:35.501
So this doesn't look good but your UI
designer will put a little like spinner

102
00:06:35.501 --> 00:06:39.355
when it's invalid and then yay,
check mark when it's valid.

103
00:06:39.355 --> 00:06:42.265
Something less obnoxious than red and
green,

104
00:06:42.265 --> 00:06:47.117
which we shouldn't be using colors
anyways alone because some people cannot

105
00:06:47.117 --> 00:06:50.115
see the difference between that red and
green.

106
00:06:50.115 --> 00:06:53.724
So whenever we do examples it's
fine today to make things ugly.

107
00:06:53.724 --> 00:06:57.631
Do not put this ugly
stuff into production.

108
00:06:57.631 --> 00:07:01.119
And so here's a little nifty trick which
you should also not put into production

109
00:07:01.119 --> 00:07:02.850
but it is kind of cool that you can do it.

110
00:07:02.850 --> 00:07:07.401
So, if you see at the bottom,
it says you have 0 invalid entries.

111
00:07:09.584 --> 00:07:10.333
&gt;&gt; Estelle Weyl: All right?

112
00:07:10.333 --> 00:07:13.280
Cuz none of these are required.

113
00:07:13.280 --> 00:07:18.200
So this works with the JavaScript but
if I put the number 8 and

114
00:07:18.200 --> 00:07:22.074
the number 2,
I now have two invalid entries.

115
00:07:22.074 --> 00:07:25.291
There is no JavaScript in this page.

116
00:07:25.291 --> 00:07:27.892
What I'm doing is I'm
using the CSS counter.

117
00:07:27.892 --> 00:07:31.783
And we'll talk about CSS
counters later on but

118
00:07:31.783 --> 00:07:37.069
basically saying on the about
body we set the counter to 0, and

119
00:07:37.069 --> 00:07:42.787
then every time you hit something
that's invalid, increment it.

120
00:07:42.787 --> 00:07:47.485
And then in a paragraph generate
a content that says you have whatever

121
00:07:47.485 --> 00:07:49.840
that invalid count is currently.

122
00:07:52.010 --> 00:07:55.956
The counter of invalidCount, print that.

123
00:07:55.956 --> 00:08:01.255
And the reason that it has to come after,
right, it comes after everything,

124
00:08:01.255 --> 00:08:06.238
is because I have to actually have
those invalid entries for it to count.

125
00:08:06.238 --> 00:08:09.749
So that paragraph has to be
after those invalid entries.

126
00:08:09.749 --> 00:08:15.150
Otherwise, if I put it at the top, right,

127
00:08:15.150 --> 00:08:19.955
if I did body,
&gt;&gt; Estelle Weyl: It

128
00:08:19.955 --> 00:08:20.951
wouldn't be able to count.

129
00:08:20.951 --> 00:08:22.662
If I did,

130
00:08:28.697 --> 00:08:32.184
&gt;&gt; Estelle Weyl: li nth- of-type(2),

131
00:08:32.184 --> 00:08:37.039
which we'll cover later on, right?

132
00:08:37.039 --> 00:08:42.735
It would only be able to count
the first one if I did after.

133
00:08:42.735 --> 00:08:44.930
Let's see if this works,
I've never done this before, yeah.

134
00:08:46.866 --> 00:08:49.644
&gt;&gt; Estelle Weyl: So
you can actually count your errors.

135
00:08:49.644 --> 00:08:54.626
This is not the best way to do stuff,
this is not best practices at all but

136
00:08:54.626 --> 00:09:00.045
I want to show you the power of CSS that
you can actually do all sorts of things.

137
00:09:00.045 --> 00:09:03.244
If your JavaScript isn't working or
if you want to tell user,

138
00:09:03.244 --> 00:09:06.564
how many errors they have,
that their form isn't filled out and

139
00:09:06.564 --> 00:09:09.723
have it continually counting,
you could actually do that.

140
00:09:09.723 --> 00:09:13.145
Progressive enhancement,
don't make it required.

