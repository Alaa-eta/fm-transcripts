[00:00:02]
>> Estelle Weyl: Let's move a long and talk about alignment. This is gonna be very similar to what we talked about with flex blocks yesterday. We have several properties that are on the parent, including justify-items, align-items, justify-content, align-content, grid auto columns, grid auto rows, grid auto flow, and grid. And then we have justify-self and align-self, which are properties on the grid items themselves.

[00:00:31]
So justify-items has a few new values that we never heard of. One of them is legacy and then two are safe and unsafe.
>> Estelle Weyl: And I'll go over those in a minute. The default is actually legacy. Is left.
>> Estelle Weyl: Just a found, that's what it comes out to.

[00:00:54]
So the only thing that's actually what it means but that's what it ends up being. I guess it would be right and left to right languages. So justify-items. It aligns items in the in-line direction, which for us is horizontal. Let's just go and do it by example.
>> Estelle Weyl: So when we were doing flex box, we sometimes aligned the whole row, and we sometimes aligned just the item.

[00:01:35]
So when it says justify-items, it's actually taking that grid item and aligning just each item individually. But it's doing it globally for all them but it's individual within each item, putting it at the end. Here, we can put it at the start. What are the other values we have?

[00:01:58]
We have stretch, and we have have center, and we have self-end. So, let's do center.
>> Estelle Weyl: Now the thing is, this stuff is really ugly and I've never used this property in because I've never needed to do this, cuz I don't find it attractive. But it is important to understand that it's doable.

[00:02:21]

>> Estelle Weyl: So the new values are safe, which means if it overflows the container,
>> Estelle Weyl: If the text overlines the container, then you actually still show the content. And unsafe, it basically says, you're gonna crop it. So legacy is basically, you could say legacy, left, center, or right. And that's about it, okay.

[00:02:51]
So then we have column alignment which we do with align-items. So we did justify-items, right, which was kinda left to right in left-to-right languages. Here, if we do flex start, which you'll notice is a flex property, it's the same thing as it was in flex, right? We could do flex-end.

[00:03:15]
So it's aligning each item within its grid line, right, along the road track. The previous one did along the column track.
>> Estelle Weyl: Stretch is nice. I think that's the default. I forgot to highlight which one is the default but I'm pretty sure it's that.
>> Estelle Weyl: There's a property called place-items, which is basically align-items, and then justify-items.

[00:03:56]
And this is short hand. Also the order does matter. You have to put align-items first and then justify-items. If you only put one property there, if you just include the align-items, that value will be given to justify-items as well. So let's play with making this hideous just for a minute.

[00:04:18]
So we have align-items,
>> Estelle Weyl: Which is aligning items within its column, right? That's what justify-items does. Left, or right, or center.
>> Estelle Weyl: Horizontally. And then align-items is vertical.
>> Estelle Weyl: So here we put it at the top, here we put it at the end, here we stretched it. But notice, even though it's stretched in the height, it's still at the flex-end.

[00:05:04]
And we can center,
>> Estelle Weyl: and center. Now, you might wanna actually create this effect. I don't think you do. I don't use these, but it's important to know that they exist, right.
>> Estelle Weyl: When would you use this? So remember that example with the unicorns? And there was a unicorn and then a paragraph and there was space and then there was a button at the bottom?

[00:05:36]
You would just put the button at the flex-end. But the way we did it before is we actually put,
>> Estelle Weyl: when we did with the flex items, we put the image and then we put the button in the third item. And then we'd allow the middle one to grow, and we didn't allow the first one or the third one to grow, okay.

[00:06:01]

>> Speaker 2: Quick question.
>> Estelle Weyl: Yeah.
>> Speaker 2: If we're using legacy how do we declare that it can inherit?
>> Estelle Weyl: Just, you don't even have to use- You can just omit it. It's legacy.
>> Speaker 2: Okay.
>> Estelle Weyl: Yeah.
>> Estelle Weyl: Basically, you just have to overwrite legacy if you want something else.

[00:06:16]

>> Speaker 2: All right.
>> Estelle Weyl: That's a default value.

