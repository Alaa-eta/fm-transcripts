[00:00:03]
>> Steve Kinney: Then we have @supports.
>> Steve Kinney: Okay so whenever I have a code pend it kind of messes with everything, so I'm just gonna stay on this side and then I'll move over to the next side. So @supports; it basically says, does this browser support display flex? If yes, then we can use these features.

[00:00:31]
And so a while ago I was actually talking about the @supports and how you could basically say, does it support ligature? And if it supports ligature then use this font, right, don't use material icons unless it supports ligature. Before we use to have this, which was media screen and transform 3D or and animation.

[00:01:00]
That is the old way of doing it so don't use that anymore, you might see it, so I'm putting it up just in case you come across. It used to be valid and it still is, it still works but it only works for transform-3d and animation, so what's the point?

[00:01:14]
Whereas this works for, basically, you put a property and a value and it's not gonna render that it just says, can I support it? So if you've heard of Modernizer, who here has heard of Modernizer? Pretty much everyone. It's basically a Modernizer in the browser without pulling in any JavaScript framework.

[00:01:33]
So a lot of people used to do JS and then they used to basically decide which CSS features to use based on what modernizer said was supported. You don't need to use modernizer at all for your CSS, you just say hey, do you support this? Media screen.
>> Steve Kinney: So there's also the viewport and I don't know why it's under the supports but here it's basically saying, Microsoft also has a viewport, I don't know why I put that on in there I'm sorry.

[00:02:12]
Okay, so here we can just play, open this one up in a new window and here it says, media and transform-3d.
>> Steve Kinney: It's not supporting this browser any more, I guess, or maybe it is and I just spelled it wrong.
>> Steve Kinney: It used to work, it no longer works, I'm not sure if it's still supported.

[00:02:37]
Okay, so here.
>> Steve Kinney: We do the little prayer of, please, when I reload this page, please work.
>> Steve Kinney: Yes, okay, so here it says, media screen and web can transition, so that was probably one of the words they used. We have to open up this in a window, right, Visit Site, here we go, I think it won't load.

[00:03:15]
Okay, this browser supports media and support. So what I did here, is I said, this browser supports media or supports, and which ones does it support? And then I did a class of transition, a class of animation, a class of transforms and a class of supports, right? And then here I did web kit screen and web kit transition.

[00:03:40]

>> Steve Kinney: Say transitions, yes, and it doesn't support that one anymore. So it used to, but it doesn't anymore and then, moz transition, obviously this is not a Mozilla browser, it's not gonna support that one. MS transition, it's not gonna support that one, -o- transition, not that one, then it says, does it support transition?

[00:04:00]
Well that is an old way of writing in it, it doesn't support that anymore but all the way down here are the ones where it does support it which is @supports (display: table-cell), which is what we really want to happen, right? So I'm in Chrome right now and let's name it advanced feature.

[00:04:21]

>> Steve Kinney: Anyone?
>> Speaker 2: Grid?
>> Steve Kinney: So display grid.
>> Steve Kinney: You saw that bottom one disappear? If I type in grid, it popped up, okay, so we know it supports the property value and it happens to support grid as well. So.
>> Steve Kinney: You can put any property and value prefixed or not and it's a way to basically do browser detection, cuz I could just basically do browser detection by doing moz animation.

[00:05:00]
It doesn't support moz animation.
>> Steve Kinney: And just give it a name, moz-animation-name and then colon read. Does it support that? Then I know it's a Mozilla browser, just because I prefixed it with moz. So that's that's a hack but it is a way of doing user agent detection.

