[00:00:03]
>> Estelle Weyl: Then we have @supports.
>> Estelle Weyl: Okay, so whenever I've code pinned it kinda messes with everything. So I'm just gonna stay on this slide and then I'll go over the other slide. So @dupports, it basically says does this browser support display flex? If yes, then we can use these features.

[00:00:31]
And so a while ago I was actually talking about the @supports, and how you could basically say does it support ligature, and if it supports ligature then use this font, right. Don't use material icons unless it supports ligature.
>> Estelle Weyl: Before we used to have this which was media screen and (transform-3d) or and animation, that is the old way of doing it, so don't use that anymore.

[00:01:02]
You might see it, so I'm bringing it up in case you come across it. It used to be valid. And it still is and still works. But it only works for transform-3d and animation. So what's the point? Whereas this works for basically you put a property and a value.

[00:01:19]
And it's not gonna render that, it just says, can I support it? So if you've heard of Modernizer, who here has heard of Modernizer? Pretty much everyone. It's basically Modernizer in the browser without pulling in any JavaScript framework. So a lot of people use to do JS and then they used to basically decide which CSS features to use based on what Modernizer said was supported.

[00:01:41]
You don't used to use Modernizer at all for your CSS. You just say, hey, do you support this?
>> Estelle Weyl: Media screen.
>> Estelle Weyl: So there's also the viewport, and I don't know why it's under the supports. But here, it's basically saying, Microsoft also has a viewport. I don't know why I put that point in there, I'm sorry.

[00:02:10]
Okay, so here we can just play. Open this one up in a new window. And here it says media and transform-3d.
>> Estelle Weyl: It's not supporting this browser anymore, I guess. Or maybe it is and I just spelled it wrong.
>> Estelle Weyl: It used to work. It no longer works so I'm not sure if it's still supported.

[00:02:37]
Okay, so here,
>> Estelle Weyl: We do the little prayer of please when I reload this page, please work.
>> Estelle Weyl: Yes, okay. So here, it says media screen and web can transition. So that was probably one of the words that used. We have to open this up in a window, right, does it say?

[00:03:11]
Here we go. I think it won't load. Okay, this browser supports media and supports. So what I did here is I said, this browser supports media or supports, and which ones does it support? And then I did a class of transitions, a class of animations, a class of transforms, and a class of supports, right?

[00:03:32]
And then here, I did web kit screen and web kit transition. Say transitions yes. And it doesn't support that one anymore. So it used to, but it doesn't anymore. And then -moz-transition. Obviously this is not a Mozilla browser. It's not gonna support that one. -ms-transition, it's not gonna support that one.

[00:03:54]
-o-transition, not that one. Then it says does it support transition? Well, that is an old way of writing it. It doesn't support that anymore. But all the way down here are the ones where it does support it, which is @supports (display: table-cell). Which is what we really want to happen, right?

[00:04:14]
So I'm in Chrome right now. And let's name an advanced feature.
>> Estelle Weyl: Anyone?
>> Speaker 2: Grid.
>> Estelle Weyl: So display grid.
>> Estelle Weyl: You saw that button one disappear? If I type in grid,
>> Estelle Weyl: It popped up, okay. So we know it supports the property value. And it happens to support grid as well.

[00:04:44]

>> Estelle Weyl: So,
>> Estelle Weyl: You can put any property and value, prefixed or not. And it's a way to basically do browser detection. Cuz I could just basically do browser detection by doing -moz-animation. Does it support -moz-animation?
>> Estelle Weyl: I just give it a name. -moz-animation-name: red. Right, does it support that?

[00:05:15]
Then I know I have a Mozilla browser, just because I prefixed it with moz. So that's a hack. But it is a way of doing user detection.

