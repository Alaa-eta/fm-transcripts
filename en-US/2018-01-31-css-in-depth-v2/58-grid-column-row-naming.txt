[00:00:02]
>> Estelle Weyl: There I showed you how to have the four values of grid-row-start, grid-column-start, grid-row-end, and grid-column-end. Let's say you only have three values there. If you omit grid-column-end, then the grid-column-end value will either be, if you named the grid-column-start, that's what it'll be or elso it would be auto which I think is just 1, not 100% sure, it will be one over.

[00:00:32]
So let's try that.
>> Estelle Weyl: It's just 1 wide. If however, I did
>> Estelle Weyl: Start, right?
>> Estelle Weyl: Repeat 3.
>> Estelle Weyl: Mid
>> Estelle Weyl: Repeat 9.
>> Estelle Weyl: And
>> Estelle Weyl: End.
>> Estelle Weyl: Okay, so let me just put this in here. Okay, so,
>> Estelle Weyl: Here, I actually now have named grid lines. So it's start or 1, I can use either one.

[00:01:42]
So I could do 1 here, right? Or I could say start.
>> Estelle Weyl: 1, 2,
>> Estelle Weyl: Start, that's what I meant to do. So here I do start, or I do 1. Same thing, right?
>> Estelle Weyl: Start or 1. Because the first line is called start but it's still always gonna be 1.

[00:02:18]
And the wierd thing is you can actually name many of them, use the same name. You can use the name over and over again. So I can do start, start, start, start. So if I was having a 12-column layout, I could have every third one named start and that way it would be whichever closest one is that start.

[00:02:37]
So let's go with start here.
>> Estelle Weyl: And then,
>> Estelle Weyl: Go with mid here.
>> Estelle Weyl: And 1fr,
>> Estelle Weyl: There's a typo here.
>> Speaker 2: Is there a space between 1 and fr?
>> Estelle Weyl: Thank you, perfect, thank you.
>> Estelle Weyl: So this goes back to what I had originally, which was 2, right?

[00:03:18]

>> Estelle Weyl: So it went to 2 and 5. And I need to make this 8, so it's the same as before. Okay, so that's the same as before, right?
>> Estelle Weyl: We named the columns but we didn't name the rows, cuz we didn't actually do,
>> Estelle Weyl: Let's just do the exact same thing with rows.

[00:03:42]
Okay?
>> Estelle Weyl: So now we can use start start,
>> Estelle Weyl: And mid mid. So you see, I actually reused the names, grid and column, definitely no conflict there.
>> Estelle Weyl: So if I get rid of d,
>> Estelle Weyl: It set it to auto.
>> Estelle Weyl: I have no clue why it did that.

[00:04:25]

>> Estelle Weyl: Cuz if it's a / b, it should be grid-row-end and grid-column-end are omitted. And if c,
>> Estelle Weyl: If grid-row-start was named, it should have been named the start but it wasn't.
>> Estelle Weyl: Cuz I named both of them, so I don't know why it did that. Okay. We're not gonna go deeper into that cuz no point to it.

[00:04:52]
But basically we realize that you can do four values and if you don't do four values, it defaults to one or auto. [LAUGH] Yes?
>> Speaker 3: Even though the syntax call start and end.
>> Estelle Weyl: Yeah.
>> Speaker 3: It seems like you can reverse them. They're really just boundaries. So you can do 2, 5, 5, 2 and it seems to do the same?

[00:05:12]

>> Estelle Weyl: Yes, so let's just show you that. So grid-column, 2, 5, 5, 2, very good point.
>> Estelle Weyl: That would be in the deeper dive.
>> Speaker 3: Does RTL kind of thing, what are the impacts of shifting your-
>> Estelle Weyl: Okay, so it's kinda like flexbox. If you remember yesterday when I discussed flexbox and basically said main direction is this way but in right to left languages, it will actually reverse it for you.

[00:05:38]
Yeah.

