[00:00:02]
>> Estelle: There I showed you how to have the four values of grid-row-start, grid-column-start, grid-row-end, and grid-column-end. Let's say you only have three values there.
>> Estelle: If you omit grid-column-end, then the grid column end value will either be, if you name the grid column start, that's what will it be, or else it would be auto, which I think is just one, not 100% sure, it will be one over, so let's try that.

[00:00:39]

>> Estelle: It's just one wide. If, however, I did,
>> Estelle: Start, right?
>> Estelle: Repeat three.
>> Estelle: Mid
>> Estelle: Repeat nine.
>> Estelle: And
>> Estelle: End.
>> Estelle: Okay, so let me just put this in here, okay so.
>> Estelle: Here, I actually have now named grid lines. So it's start or one.

[00:01:41]
I can use either one. So I could do one here, right? Or I could say start.
>> Estelle: One, two.
>> Estelle: Start. That's what I meant to do. So here I do start or I do one, same thing, right?
>> Estelle: Start or one because the first line is called start but still always gonna be one.

[00:02:20]
And the weird thing is you can actually name many of them use the same name. You can use the name over and over again, so I could do start, start, start, start. So if I was having like a 12 column layout, I could have every third one named start, and that way would be whichever closest one is at start.

[00:02:37]
So let's go with start here and then go with mid here. And one fr.
>> Estelle: There is a typo here.
>> Speaker 2: Is there a space between 1 and F4?
>> Estelle: Thank you perfect, thank you.
>> Estelle: So this goes back to where I had originally which was to right.

[00:03:17]
So one to two and five. And I need to make this eight so it's the same as before. Okay so that's the same as before right. So let's we named the console but we didn't name the rose because we didn't actually do. Let's just do the exact same thing with rose okay,

[00:03:48]

>> Estelle: So now we can use start / start and mid / mid. So you see how we actually reuse the names, grid-column, definitely no conflict there. So If I get rid of d.
>> Estelle: Let's say it's auto.
>> Estelle: I've no clue why I did that.
>> Estelle: Cuz if it's A, B, It should be grid-row-end and grid-column-end are omitted and

[00:04:38]

>> Estelle: If grid-row started with a name it should have been named the start but it wasn't. Cuz I named both of them so I don't know why I did that. Okay, we're not gonna go deeper into that cuz no point to it. But basically realize that you can do four values.

[00:04:57]
And if you don't do four values, it defaults to one or auto. [LAUGH] Yes?
>> Speaker 2: Even though the syntax false start and end, it seems like you can reverse them. They're really just boundaries. So you can do two five or five two and it seems to render the same?

[00:05:13]

>> Estelle: So let's just show you that. So grid column. Two five, five two. Very good point. That would be in the deeper dive.
>> Speaker 2: Does RTL kind of thing? I mean what are the impacts of shifting the arguments-
>> Estelle: Okay, so it's kind of like flex box. If you remember yesterday when I discussed flex box and basically said the main direction is this way but in right to left languages.

[00:05:37]
It will actually reverse it for you.

