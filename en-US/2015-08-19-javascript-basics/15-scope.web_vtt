WEBVTT

1
00:00:00.000 --> 00:00:04.049
[MUSIC]

2
00:00:04.049 --> 00:00:06.614
&gt;&gt; Kyle Simpson: Can I give
a default value to the parameter?

3
00:00:06.614 --> 00:00:11.142
In JavaScript ES6,
that's the coming version of JavaScript,

4
00:00:11.142 --> 00:00:15.180
we do have a syntax for
default parameter values.

5
00:00:15.180 --> 00:00:18.363
That doesn't exist in your current
JavaScript but the next version has it.

6
00:00:20.664 --> 00:00:22.670
&gt;&gt; Speaker 2: And
we have another course on that.

7
00:00:22.670 --> 00:00:24.090
&gt;&gt; Kyle Simpson: There is a course on ES6.

8
00:00:24.090 --> 00:00:25.580
So-
&gt;&gt; Speaker 2: You're asking about

9
00:00:25.580 --> 00:00:28.240
a function call back but-
&gt;&gt; Kyle Simpson: That's

10
00:00:28.240 --> 00:00:30.250
more than we'll get into right now.

11
00:00:30.250 --> 00:00:32.261
We'll probably come back
to that after lunch but

12
00:00:32.261 --> 00:00:34.500
that's more than we'll get into now.

13
00:00:34.500 --> 00:00:38.030
What I want to do in our last couple
minutes is [COUGH] talk about

14
00:00:38.030 --> 00:00:43.590
the difference between this variable
a which exists outside of the function and

15
00:00:43.590 --> 00:00:47.220
this variable b which exists
only inside of the function.

16
00:00:48.250 --> 00:00:50.640
You'll notice I have another
variable called b here,

17
00:00:50.640 --> 00:00:53.090
these bs are entirely different.

18
00:00:53.090 --> 00:00:54.750
Does everybody see that?

19
00:00:54.750 --> 00:00:58.410
There's a variable b, it's almost like
there was a var in here, there isn't.

20
00:00:58.410 --> 00:01:01.240
But it's almost like there was
a var in here that declared a b

21
00:01:01.240 --> 00:01:03.400
that exists only inside of that function.

22
00:01:03.400 --> 00:01:09.450
So if I took this part out and
I just tried to access b.

23
00:01:12.808 --> 00:01:16.734
&gt;&gt; Kyle Simpson: What we expect to have
happen is an error because there is no b

24
00:01:16.734 --> 00:01:18.235
available to line 9.

25
00:01:20.390 --> 00:01:24.480
The b exists only inside of the function,
not outside of it.

26
00:01:24.480 --> 00:01:29.430
Identically to if I said var c equals 42.

27
00:01:29.430 --> 00:01:32.428
If I put a variable inside of my function,

28
00:01:32.428 --> 00:01:37.656
it's not available outside and if I
said var c, if I take that program and

29
00:01:37.656 --> 00:01:42.652
I run it,
&gt;&gt; Kyle Simpson: We're gonna

30
00:01:42.652 --> 00:01:46.027
expect to get a reference
error because c doesn't exist.

31
00:01:48.819 --> 00:01:52.533
&gt;&gt; Kyle Simpson: And in fact we get
ReferenceError c is not defined, okay?

32
00:01:56.066 --> 00:01:59.954
&gt;&gt; Kyle Simpson: Putting a variable
outside versus inside a function

33
00:01:59.954 --> 00:02:02.660
changes where it is scoped.

34
00:02:02.660 --> 00:02:06.920
Scope is this technical term fo,r you
can think of it as sort of like there's

35
00:02:06.920 --> 00:02:10.230
a bubble around the internal
contents of foo.

36
00:02:10.230 --> 00:02:14.960
And then there's another bubble around
the outer contents of our whole program.

37
00:02:14.960 --> 00:02:17.110
Those are two different scopes.

38
00:02:17.110 --> 00:02:19.360
There's one scope here and one scope here.

39
00:02:19.360 --> 00:02:23.810
Notice that there's no a inside of our
foo and yet we didn't get a problem.

40
00:02:25.290 --> 00:02:30.750
And the reason for that is that
you can always access variables

41
00:02:30.750 --> 00:02:32.870
above you or outside of your scope.

42
00:02:34.080 --> 00:02:37.170
But you can never reference
variables that are further down, so

43
00:02:37.170 --> 00:02:38.550
that's a one-way street.

44
00:02:38.550 --> 00:02:40.123
When I ask for a here,

45
00:02:40.123 --> 00:02:45.031
it first looks to see if it sees
an a inside of foo, but it doesn't.

46
00:02:45.031 --> 00:02:48.373
And so where it goes next is it
goes out one level of scope and

47
00:02:48.373 --> 00:02:50.913
it finds an a there,
so it's able to use it.

48
00:02:53.350 --> 00:02:57.228
&gt;&gt; Kyle Simpson: But the reverse was not
true, we could not take a variable that

49
00:02:57.228 --> 00:03:00.220
was inside of it and
access it from the outside.

