[00:00:00]
>> [MUSIC]

[00:00:03]
>> Kyle Simpson: Without any further ado I probably should start off with this. But I'm Kyle Simpson, getify. Known as getify online, you can follow me on Twitter if you're into that whole online stalking thing, getify.me. There's all the different places online. Essentially I'm getify everywhere on from Gmail to everything else that you can imagine.

[00:00:20]
If I'm, if there isn't a getify registered somewhere then that site just doesn't matter.
>> Speaker 2: [LAUGH]
>> Kyle Simpson: I'm kidding of course but all the places that I can be found under getify. I will mention a couple of things. So, I said earlier that I teach for a living and that means that I'm available for teaching.

[00:00:40]
If you have an event. If you have a company, an organization, a club that would like to bring me in to teach something related to JavaScript related to the language itself I'd love to do that. So, please feel free to reach out. I'm always looking for more opportunities to spread that.

[00:00:55]
I'm sort of my self titled since I'm self employed by my own made up title is open web evangelist. That's one of the best parts of being self employed is that you get to make up your own title and it can be as fluffy as you want it to sound.

[00:01:07]
So, open up evangelist I just made up and essentially what that is intended to imply is that my goal is to evangelize the open web platform to as many people as possible. And by evangelizing that means both inspiring and teaching and those go hand in hand. I hope through the teaching it inspires you to learn more and do more with the Web Platform and so they those are sort of two sides of that same coin if you will.

[00:01:34]
So, open Web Platform and any of its associated technologies with a particular focus on JavaScript is what I spend most of my time trying to figure out. And I'll fully disclose that even with all of my experience, I don't know JavaScript. And that's why I called that book series that we'll talk about in a minute, I called it, You Don't Know JS, because I think all of us are in various states of coming to terms with what we don't know, trying to figure out what we need to learn next.

[00:01:58]
So, it's an ongoing process rather than a fixed point in time. So, in addition to being in classrooms and teaching corporate workshops or speaking at conferences or whatever, I do a fair amount of open source development. Most of my open source development these days is designed to aid in my teaching but I'll just quickly highlight a couple of projects.

[00:02:19]
So, you can get a sense of the code that I try to write and I open source pretty much all the code that I write, so LABjs is a script loader, dynamic script loader for performance optimization purposes. It's just designed to replace the script tag with something that will load it more performantly and give you more control over the loading profile.

[00:02:37]
Lot of people think script loading is sort of a dead or dying sort of technology. I predict that there are changes that are happening with the way our industry works right now script loaders are going to have a renaissance, they're going to make a comeback, and I'd say over the next 12 to 18 months you're going to see more attention given to that topic then has been given over the last several years.

[00:02:57]
LABjs has been around for almost six years now. Stable for four. That's its most important feature is that it hasn't changed cuz it hasn't needed to. Although it will if these changes coming down the pike. And it's been battle tested on the big sites like Twitter, and and Zappos and so forth.

[00:03:14]
So, you can know and rely upon that technology. Grip is a templating engine and actually the second half of the second day when we get into shared JavaScript between client and server and talk about that when we get to that part of the course we're gonna talk slightly more about groups.

[00:03:33]
But it's a templating engine designed to approach this problem differently than what I've seen almost every other templating engine do cuz most fall into two extreme categories either, it's all about no logic, zero logic. Like mustache or it's all about a full programming language inside of the template engine and both of those have significant drawbacks to them.

[00:03:55]
And so, to try to address some of those drawbacks, I tried to ask, I think a better set of questions about templating. I don't propose that grips is the best solution, that it's the right answer but I think it's the right set of questions to be asking about what we should expect from templeting how we should organize our approach to templeting.

[00:04:14]
I am approaching that not only from the text in HTML sort of templeting world but I'm also approaching C.S.S. pre-processing from the same perspective. So, there is C.S.S. pre-processing. Somewhat like labs that's built into that whole concept so if those are pain points that you've ever dealt with you might check out groups.

[00:04:31]
Yeah?
>> Speaker 2: Did you say you were gonna discuss that tomorrow?
>> Kyle Simpson: We'll just briefly talk about it cuz it is one of the technologies that we'll use in the demo tomorrow, yeah. So, even if you look at it and you hate the syntax of the actual approach that I take, I think those questions are the right questions.

[00:04:47]
How can we find the right balance between those two extremes? And finally asynquence, this won't be something we cover in this course but if you have other courses that cover asynchronous programming, this is a little library that I built to weave together lots of asynchronous flow. Concern like promises and generators and higher level patterns like reactive programming and things like that this are all sort of lightly woven into this little single library instead of having to get lots of different libraries all paired together.

[00:05:17]
So, those are just a quick summary of some of the stuff I work on there's probably. Two dozen projects that I've got up and get home in various states. I do a lot of conference speaking as well, so I'm not going to talk any at all about these conferences but there's lots of my lots of videos and other things that my decks are on, the slides are all up at my speaker deck.

[00:05:39]
There's also on my lanyard account there's lots of Links to videos and audio recordings and things like that from these conference talks. So, if you'd like to hear more about some of the stuff that I've talked about at conferences, there's probably two dozen different talks that I've given over the last six or seven years up there.

[00:05:56]
I've mentioned several times now, wo we'll specifically talk about the You Don't Know JS book series. If you go to YouDontKnowJS.com It redirects to the repo for the book series because I'm writing all of these books in the open for free to freely read and access and they are also being professionally edited and produced and published through.

[00:06:17]
So, you can purchase the e-book or print book form of the books if you prefer. And I always appreciate that but I encourage you to check out the content first to see if you like it. It's a series of books six books in the series. Five of them are done.

[00:06:31]
Four and a half of them are on shelves. So, the up and going one the one that we're talking about will literally be on shelves in the next few days and it's already been off to the printers for a couple weeks. So, five books done. The sixth book which is talking about ES6, the new changes to language and beyond.

[00:06:49]
ES6 and beyond is about 50 to 60% done of course you can see it online. It's about 50, 60% done and expected to be on shelves. My goal is to have that on shelves around the middle of June which coincides with the final ratification vote for approving ES6 from The ECMA Committee.

[00:07:07]
So, hopefully, this book will land at exactly that same period of time on shelves. So, that's the book series, the goal of this book series was to try to attack this mindset and if you're just starting to learn, please don't adopt this habit, you will see lots of people in this industry that take the habit that all I need to do is learn just enough to get this one feature done so my boss is happy and then I don't go any further.

[00:07:31]
And I know we can chuckle about that and say yes but there is truth to this. That in our part of this industry that in the JavaScript world, there's a lot of that mindset that prevails. In fact our industry rewards that type of mindset. Just learn enough about this framework to get a feature done and that's what you get rewarded by bigger and bigger projects and promotions at work and better and better job titles and things like that.

[00:07:56]
And there isn't a built in reward for truly learning the thing, there's a built in reward for applying the thing. So, my goal with the books, with the trainings, with everything I do basically as a career is to try to provide or fill in that other side of the puzzle.

[00:08:11]
To provide deep learning that's what these books are about, that's what the trainings are about. So, if you were to try to compare for example the You Don't Know JS book series to something more well known like Douglas Crockford's the good parts. I would say essentially by the way it's a if it's a great book and I'm not knocking the book at all.

[00:08:30]
We owe a lot of our industry to the fact that that came out at a really critical time when JavaScript could have been forgotten. And Doug Crawford's a big reason why JavaScript survived and began to thrive. So, all due credit to it but it also taught an entire generation and now we've got a second whole generation of developers and at least, maybe more, that have come along with this perspective that you only need to know a little bit of the language to be productive and my approach is the opposite.

[00:08:57]
You need to know all the language, so if you're looking for a comparison instead of the good parts that you know, J.S. is the is the opposite. It doesn't mean it's the bad parts, it means it's all the parts looking at all the parts of JavaScript and making proper use of those, through real understanding, okay.

