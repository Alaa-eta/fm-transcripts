WEBVTT

1
00:00:00.000 --> 00:00:03.640
[MUSIC]

2
00:00:03.640 --> 00:00:07.103
&gt;&gt; Kyle Simpson: I mentioned before our
break that there is this practice section

3
00:00:07.103 --> 00:00:09.731
at the bottom of chapter one and,
essentially,

4
00:00:09.731 --> 00:00:14.154
it's building on that metaphor that this
whole chapter goes through asking you to

5
00:00:14.154 --> 00:00:18.990
write a program to calculate the total
price of your phone purchase, or whatever.

6
00:00:18.990 --> 00:00:23.560
I'm not gonna bore you by repeating this,
but I will point you specifically to this

7
00:00:23.560 --> 00:00:27.760
section of description there, including
also the bonus challenge if you'd like.

8
00:00:27.760 --> 00:00:31.670
And what I'm going to do here
is suggest that you try that,

9
00:00:31.670 --> 00:00:34.770
before scrolling down and
looking at how I did it.

10
00:00:34.770 --> 00:00:36.980
And that may feel a little
uncomfortable to you,

11
00:00:36.980 --> 00:00:42.310
especially if you're slightly more on
the beginner side of this, but just try.

12
00:00:42.310 --> 00:00:44.220
There's more value in the attempt,

13
00:00:44.220 --> 00:00:47.410
than there is in the successful
completion of something.

14
00:00:47.410 --> 00:00:51.160
So just try to take what
I've described here and

15
00:00:51.160 --> 00:00:53.200
construct a program based
upon what you've learned.

16
00:00:53.200 --> 00:00:56.490
And there are hints, in terms of,
you wanna use a variable here,

17
00:00:56.490 --> 00:00:58.250
you wanna use a function there.

18
00:00:58.250 --> 00:01:01.069
And so what I'm gonna do is, essentially,
stop talking for a little bit.

19
00:01:01.069 --> 00:01:03.982
And I'll probably give about five or
ten minutes here for

20
00:01:03.982 --> 00:01:07.805
you to work on this practice exercise,
available for questions either for

21
00:01:07.805 --> 00:01:10.920
those of you online or for
those of you here in the class.

22
00:01:10.920 --> 00:01:13.640
I expect that there will be several
questions, and if I need to come back and

23
00:01:13.640 --> 00:01:17.280
address something to everyone, we'll
break back in and address it to everyone.

24
00:01:17.280 --> 00:01:19.770
But we're gonna actively
work on this exercise, and

25
00:01:19.770 --> 00:01:22.290
I'm gonna encourage you to try it.

26
00:01:22.290 --> 00:01:26.800
It's a big enough exercise, not big,
it's like 20 lines of code, but

27
00:01:26.800 --> 00:01:29.550
it's a big enough exercise that I'm
gonna encourage you to write it

28
00:01:29.550 --> 00:01:31.720
in a code editor, like I've been doing.

29
00:01:31.720 --> 00:01:34.582
Write something in a code editor,
like Sublime, or a text file, or

30
00:01:34.582 --> 00:01:35.599
whatever you wanna do.

31
00:01:35.599 --> 00:01:40.030
And then, copy and
paste that into a console to run it.

32
00:01:40.030 --> 00:01:42.890
Rather than trying to write
yourself in the console,

33
00:01:42.890 --> 00:01:46.440
cuz it's very easy to be on four or five
lines of code in your console, it's very

34
00:01:46.440 --> 00:01:49.870
easy to get mixed up and accidentally
hit enter too early or something.

35
00:01:49.870 --> 00:01:52.010
So I encourage you to
try it in a code editor.

36
00:01:53.330 --> 00:01:58.110
And, so we'll take some time
to work on the exercise and

37
00:01:58.110 --> 00:01:59.130
if there are questions, let me know.

38
00:01:59.130 --> 00:02:02.240
But definitely read through
this sort of description.

39
00:02:02.240 --> 00:02:05.650
Your goal is, essentially,
to write a program that simulates

40
00:02:05.650 --> 00:02:09.250
parts of purchasing a phone and
calculating the price, and so forth.

41
00:02:09.250 --> 00:02:11.850
So go for that, and
let me know if you have questions.

