WEBVTT

1
00:00:00.110 --> 00:00:01.394
&gt;&gt; Bianca: So
we're gonna talk about binarySearch.

2
00:00:01.394 --> 00:00:05.800
Again, binarySearch is our search where
we are expecting our array to be sorted.

3
00:00:05.800 --> 00:00:11.250
And we are going to break our list in half
every time, and we're gonna say, is our

4
00:00:11.250 --> 00:00:17.280
value that we're searching for less than
or greater than this current location?

5
00:00:17.280 --> 00:00:19.530
So if it's less,
we're gonna go to the left.

6
00:00:19.530 --> 00:00:22.010
If it's greater than,
we're gonna go to the right.

7
00:00:22.010 --> 00:00:25.280
All right,
what does this look like in reality?

8
00:00:26.290 --> 00:00:32.250
All right, so
we could do a call stack game with this.

9
00:00:32.250 --> 00:00:39.270
That'll be a fun one, all right.
&gt;&gt; [SOUND]

10
00:00:45.090 --> 00:00:48.390
&gt;&gt; Bianca: My goodness, this is a mess.

11
00:00:48.390 --> 00:00:52.270
All right, so
we're going to delete all of that.

12
00:00:54.210 --> 00:01:01.030
And so we just called our
binarySearch with these values.

13
00:01:03.922 --> 00:01:06.120
I'm gonna keep them up here for reference.

14
00:01:06.120 --> 00:01:08.420
So we're initializing a minimum.

15
00:01:08.420 --> 00:01:10.557
Our maximum is the list.length minus 1.

16
00:01:10.557 --> 00:01:14.331
Which is is one, two, three,
four, five, which is four.

17
00:01:14.331 --> 00:01:17.600
Initializing a guess,
that's gonna be empty.

18
00:01:17.600 --> 00:01:20.840
So while the minimum is less than max,
right?

19
00:01:20.840 --> 00:01:24.846
So while we aren't looping outside
of the bounds of our function,

20
00:01:24.846 --> 00:01:28.890
we are going to grab the center.

21
00:01:28.890 --> 00:01:35.880
So our guess is,
let's just start in the middle.

22
00:01:35.880 --> 00:01:40.020
This is common for a divide and
conquer algorithm, we start in the middle.

23
00:01:40.020 --> 00:01:42.090
But if you take a look at Quicksort,

24
00:01:42.090 --> 00:01:48.070
which we won't have time to cover today,
it's not always gonna be in the middle.

25
00:01:48.070 --> 00:01:52.067
Sometimes you'll pick a point to do
a divide and conquer at the end,

26
00:01:52.067 --> 00:01:53.621
in the case of Quicksort.

27
00:01:53.621 --> 00:01:55.220
But there's different implementations.

28
00:01:55.220 --> 00:01:58.770
However, you can kind of reason
that if it's divide and conquer,

29
00:01:58.770 --> 00:02:00.220
you're probably gonna
split it in the middle.

30
00:02:00.220 --> 00:02:02.651
Although sometimes that's not the case.

31
00:02:02.651 --> 00:02:03.880
Okay, so we're splitting in the middle.

32
00:02:05.200 --> 00:02:12.739
So if, so let's say min plus max,
so that's 5 divided by 2, is 2.5.

33
00:02:12.739 --> 00:02:17.840
You're gonna floor it, so that's 2.
&gt;&gt; Bianca: So that's 2.

34
00:02:17.840 --> 00:02:19.893
So list[guess].

35
00:02:19.893 --> 00:02:25.743
So if list[guess],
which is 2, is the item,

36
00:02:25.743 --> 00:02:30.036
we're going to return that index.

37
00:02:30.036 --> 00:02:34.891
Again, we're returning the index,
&gt;&gt; Bianca: Of where we find it.

38
00:02:34.891 --> 00:02:40.140
Okay, let's see, so our index is 2.

39
00:02:40.140 --> 00:02:43.510
Zero, one, two, we're so
close, but not quite.

40
00:02:43.510 --> 00:02:45.490
So we didn't quite meet this condition.

41
00:02:45.490 --> 00:02:52.740
So we're gonna hop into the else.
&gt;&gt; Bianca: So if (list[guess]), right?

42
00:02:52.740 --> 00:02:58.500
So that's 7 is less than the item,

43
00:02:58.500 --> 00:03:02.850
then let's increment the min by one.

44
00:03:02.850 --> 00:03:04.370
So let's see, what is the current item?

45
00:03:04.370 --> 00:03:09.930
Our item is 90, is 7 less than 90?

46
00:03:09.930 --> 00:03:13.688
Yes, so
we're going to increment our guess by 1.

47
00:03:15.657 --> 00:03:20.120
&gt;&gt; Bianca: I'm sorry, our min by 1, 2, 3.

48
00:03:20.120 --> 00:03:23.453
Otherwise, we're going
to look on the other

49
00:03:23.453 --> 00:03:28.120
side.
&gt;&gt; Bianca: This is driving me

50
00:03:28.120 --> 00:03:29.380
a little bit crazy.

51
00:03:29.380 --> 00:03:31.425
Yeah, I can't fix it right now,
I don't have time.

52
00:03:31.425 --> 00:03:37.662
Okay so,
&gt;&gt; Bianca: Great,

53
00:03:37.662 --> 00:03:41.577
so we need to, so our min is now 3.

54
00:03:41.577 --> 00:03:45.690
Okay, you saw how we got that here?

55
00:03:46.770 --> 00:03:49.550
So now, we're going to loop here again.

56
00:03:49.550 --> 00:03:51.849
So is min less than max, is 3 less than 5?

57
00:03:51.849 --> 00:03:52.885
Yes, great.

58
00:03:52.885 --> 00:04:00.900
So let's add our min and max,
and we're gonna chop it in two.

59
00:04:00.900 --> 00:04:02.690
Where does that bring us?

60
00:04:02.690 --> 00:04:05.859
To 4, so now our center is 4.

61
00:04:05.859 --> 00:04:13.510
So in the middle of that, is the fourth
item in the list equal to our item?

62
00:04:13.510 --> 00:04:20.260
So zero, one, two, three!
&gt;&gt; Bianca: Did we do it wrong?

63
00:04:21.770 --> 00:04:27.022
Zero, one, two, three, well, maybe.

64
00:04:27.022 --> 00:04:30.610
Yeah, no, we were just, gotta keep going.

65
00:04:31.870 --> 00:04:36.520
So the fourth one,
&gt;&gt; Bianca: So we overshot it this time.

66
00:04:39.020 --> 00:04:44.760
And then we're gonna say if we found it,
great, let's return it.

67
00:04:44.760 --> 00:04:47.290
But we didn't, so is it less?

68
00:04:47.290 --> 00:04:48.700
No, it's not.

69
00:04:48.700 --> 00:04:52.280
So we're going to subtract it instead.

70
00:04:52.280 --> 00:04:55.005
So our max is guess minus 1.

71
00:04:55.005 --> 00:04:58.290
So it was guess 4, so now we're back at 3.

72
00:04:59.400 --> 00:05:04.547
And then we're gonna do this again.
&gt;&gt; Bianca: Hold on,

73
00:05:04.547 --> 00:05:10.423
are you guys checking my math?
&gt;&gt; Bianca: So

74
00:05:10.423 --> 00:05:14.825
we go,
&gt;&gt; Bianca: Hm?

75
00:05:17.977 --> 00:05:21.675
&gt;&gt; Bianca: Okay, so it was 4, our max.

76
00:05:21.675 --> 00:05:23.510
But min is still 3, okay?

77
00:05:24.670 --> 00:05:27.720
We're good, so our max is now 3.

78
00:05:27.720 --> 00:05:32.170
And so, 3 plus 3,
we're gonna divide it by 2.

79
00:05:32.170 --> 00:05:34.070
And now we back at 3.

80
00:05:34.070 --> 00:05:39.710
I think we were off by one somewhere.
&gt;&gt; Bianca: Are we off by one somewhere?

81
00:05:42.030 --> 00:05:47.861
Let's debug this.
&gt;&gt; Bianca: All right, so

82
00:05:47.861 --> 00:05:56.305
let's start from the beginning, shall we?
&gt;&gt; Bianca: So

83
00:05:56.305 --> 00:06:02.778
we're going, so
I'm initializing min at zero.

84
00:06:02.778 --> 00:06:08.850
This is [INAUDIBLE] length minus one,
two, three, four, five, four.

85
00:06:08.850 --> 00:06:12.700
Maybe that's what I did wrong, we'll see.

86
00:06:12.700 --> 00:06:13.820
Yes, that's what I did wrong.

87
00:06:15.390 --> 00:06:16.610
We had an off by one error.

88
00:06:16.610 --> 00:06:19.632
Okay, off by one error, sorry, guys.

89
00:06:19.632 --> 00:06:23.935
I just because I didn't subtract
this correctly in my head.

90
00:06:23.935 --> 00:06:28.260
Okay, so is min less than or
equal to the max?

91
00:06:28.260 --> 00:06:35.480
It sure is, and then now our guess is
going to be the second index, okay?

92
00:06:35.480 --> 00:06:37.750
So did we find it?

93
00:06:37.750 --> 00:06:40.670
Zero, one, two, no, we didn't.

94
00:06:40.670 --> 00:06:42.320
So we're gonna go into this else.

95
00:06:42.320 --> 00:06:46.890
Is 7 less than 90, yes.

96
00:06:46.890 --> 00:06:52.210
So we're going to
increment our min now to 1.

97
00:06:52.210 --> 00:07:00.130
And then we are going to
loop back into our while.

98
00:07:00.130 --> 00:07:03.610
So is 1 less than or equal to max?

99
00:07:03.610 --> 00:07:10.330
Sure is, so now we are going
to Math.floor, 5 divided by 2.

100
00:07:10.330 --> 00:07:15.346
So we're kind of narrowing

101
00:07:15.346 --> 00:07:21.006
the,
&gt;&gt; Bianca: Range

102
00:07:21.006 --> 00:07:23.000
that we're looking in, okay?

103
00:07:24.470 --> 00:07:28.993
So then that is going to 2,

104
00:07:28.993 --> 00:07:33.690
Math.floor, 5 over 2.

105
00:07:33.690 --> 00:07:38.740
2.5, Math.floor, let's just double check.

106
00:07:42.320 --> 00:07:44.189
&gt;&gt; Bianca: Let me just double check this.

107
00:07:48.520 --> 00:07:49.830
Brutal, yeah.

108
00:07:49.830 --> 00:07:51.000
It is 2, that's what I thought.

109
00:07:51.000 --> 00:07:56.271
Okay, so
we keep getting back to where we started.

110
00:08:01.321 --> 00:08:03.217
&gt;&gt; Speaker 2: Why is that not okay?

111
00:08:03.217 --> 00:08:04.171
&gt;&gt; Bianca: Maybe it is fine.

112
00:08:04.171 --> 00:08:07.240
Zero, one, two, three, maybe it's fine.

113
00:08:07.240 --> 00:08:10.168
It's not how I think about it in my head,
but maybe it's fine.

114
00:08:10.168 --> 00:08:15.950
Okay, so we're back at 2.

115
00:08:15.950 --> 00:08:17.410
Did we find it?

116
00:08:17.410 --> 00:08:23.740
No, otherwise we are going to,
so is 7 less than 90, yes.

117
00:08:23.740 --> 00:08:25.326
So then we increment it again,

118
00:08:25.326 --> 00:08:29.235
so now this is 2.
&gt;&gt; Bianca: Okay, and

119
00:08:29.235 --> 00:08:32.070
then 2 plus 4 is 6, so now this is 3.

120
00:08:33.220 --> 00:08:35.430
So is zero, one, two, three.

121
00:08:35.430 --> 00:08:36.410
Then we find it, okay.

122
00:08:37.580 --> 00:08:42.820
Then we find it and we return it.
&gt;&gt; Bianca: We did it, there it is.

123
00:08:45.760 --> 00:08:50.724
Any questions about this?
&gt;&gt; Speaker 2: So if you were dealing with

124
00:08:50.724 --> 00:08:55.706
a larger array, instead of incrementing or

125
00:08:55.706 --> 00:08:58.938
lowering your guess by one,

126
00:08:58.938 --> 00:09:04.055
you'd want to add
the array length divided by

127
00:09:04.055 --> 00:09:09.080
two in each time?
&gt;&gt; Bianca: You can do it that way.

128
00:09:10.690 --> 00:09:13.719
So, you could just divide the length.

129
00:09:13.719 --> 00:09:20.586
And you could also just say, or you can
just choose an index in the middle and

130
00:09:20.586 --> 00:09:25.055
compare your item to
the index in the middle, and

131
00:09:25.055 --> 00:09:28.780
say is it greater than or is it less than?

132
00:09:28.780 --> 00:09:35.580
And then you can change your
starting index to the one after it.

133
00:09:35.580 --> 00:09:41.112
So your minimum, so say your index,

134
00:09:41.112 --> 00:09:45.860
you were looking for something
that's on the right of your array.

135
00:09:45.860 --> 00:09:48.860
So it's gonna be greater
than your min index.

136
00:09:48.860 --> 00:09:53.080
You can just set your min
index to that current one.

137
00:09:53.080 --> 00:09:58.930
So then the min, and
then you can just look on in the left.

138
00:09:58.930 --> 00:10:00.075
That's another way of doing it, yeah.

139
00:10:00.075 --> 00:10:01.530
Yeah, cool.

