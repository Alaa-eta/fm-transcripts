[00:00:00]
>> Bianca: So we're gonna talk about binarySearch. Again, binarySearch is our search where we are expecting our array to be sorted. And we are going to break our list in half every time, and we're gonna say, is our value that we're searching for less than or greater than this current location?

[00:00:17]
So if it's less, we're gonna go to the left. If it's greater than, we're gonna go to the right. All right, what does this look like in reality? All right, so we could do a call stack game with this. That'll be a fun one, all right.
>> [SOUND]
>> Bianca: My goodness, this is a mess.

[00:00:48]
All right, so we're going to delete all of that. And so we just called our binarySearch with these values. I'm gonna keep them up here for reference. So we're initializing a minimum. Our maximum is the list.length minus 1. Which is is one, two, three, four, five, which is four.

[00:01:14]
Initializing a guess, that's gonna be empty. So while the minimum is less than max, right? So while we aren't looping outside of the bounds of our function, we are going to grab the center. So our guess is, let's just start in the middle. This is common for a divide and conquer algorithm, we start in the middle.

[00:01:40]
But if you take a look at Quicksort, which we won't have time to cover today, it's not always gonna be in the middle. Sometimes you'll pick a point to do a divide and conquer at the end, in the case of Quicksort. But there's different implementations. However, you can kind of reason that if it's divide and conquer, you're probably gonna split it in the middle.

[00:02:00]
Although sometimes that's not the case. Okay, so we're splitting in the middle. So if, so let's say min plus max, so that's 5 divided by 2, is 2.5. You're gonna floor it, so that's 2.
>> Bianca: So that's 2. So list[guess]. So if list[guess], which is 2, is the item, we're going to return that index.

[00:02:30]
Again, we're returning the index,
>> Bianca: Of where we find it. Okay, let's see, so our index is 2. Zero, one, two, we're so close, but not quite. So we didn't quite meet this condition. So we're gonna hop into the else.
>> Bianca: So if (list[guess]), right? So that's 7 is less than the item, then let's increment the min by one.

[00:03:02]
So let's see, what is the current item? Our item is 90, is 7 less than 90? Yes, so we're going to increment our guess by 1.
>> Bianca: I'm sorry, our min by 1, 2, 3. Otherwise, we're going to look on the other side.
>> Bianca: This is driving me a little bit crazy.

[00:03:29]
Yeah, I can't fix it right now, I don't have time. Okay so,
>> Bianca: Great, so we need to, so our min is now 3. Okay, you saw how we got that here? So now, we're going to loop here again. So is min less than max, is 3 less than 5?

[00:03:51]
Yes, great. So let's add our min and max, and we're gonna chop it in two. Where does that bring us? To 4, so now our center is 4. So in the middle of that, is the fourth item in the list equal to our item? So zero, one, two, three!

[00:04:18]

>> Bianca: Did we do it wrong? Zero, one, two, three, well, maybe. Yeah, no, we were just, gotta keep going. So the fourth one,
>> Bianca: So we overshot it this time. And then we're gonna say if we found it, great, let's return it. But we didn't, so is it less?

[00:04:47]
No, it's not. So we're going to subtract it instead. So our max is guess minus 1. So it was guess 4, so now we're back at 3. And then we're gonna do this again.
>> Bianca: Hold on, are you guys checking my math?
>> Bianca: So we go,
>> Bianca: Hm?

[00:05:17]

>> Bianca: Okay, so it was 4, our max. But min is still 3, okay? We're good, so our max is now 3. And so, 3 plus 3, we're gonna divide it by 2. And now we back at 3. I think we were off by one somewhere.
>> Bianca: Are we off by one somewhere?

[00:05:42]
Let's debug this.
>> Bianca: All right, so let's start from the beginning, shall we?
>> Bianca: So we're going, so I'm initializing min at zero. This is [INAUDIBLE] length minus one, two, three, four, five, four. Maybe that's what I did wrong, we'll see. Yes, that's what I did wrong. We had an off by one error.

[00:06:16]
Okay, off by one error, sorry, guys. I just because I didn't subtract this correctly in my head. Okay, so is min less than or equal to the max? It sure is, and then now our guess is going to be the second index, okay? So did we find it?

[00:06:37]
Zero, one, two, no, we didn't. So we're gonna go into this else. Is 7 less than 90, yes. So we're going to increment our min now to 1. And then we are going to loop back into our while. So is 1 less than or equal to max? Sure is, so now we are going to Math.floor, 5 divided by 2.

[00:07:10]
So we're kind of narrowing the,
>> Bianca: Range that we're looking in, okay? So then that is going to 2, Math.floor, 5 over 2. 2.5, Math.floor, let's just double check.
>> Bianca: Let me just double check this. Brutal, yeah. It is 2, that's what I thought. Okay, so we keep getting back to where we started.

[00:08:01]

>> Speaker 2: Why is that not okay?
>> Bianca: Maybe it is fine. Zero, one, two, three, maybe it's fine. It's not how I think about it in my head, but maybe it's fine. Okay, so we're back at 2. Did we find it? No, otherwise we are going to, so is 7 less than 90, yes.

[00:08:23]
So then we increment it again, so now this is 2.
>> Bianca: Okay, and then 2 plus 4 is 6, so now this is 3. So is zero, one, two, three. Then we find it, okay. Then we find it and we return it.
>> Bianca: We did it, there it is.

[00:08:45]
Any questions about this?
>> Speaker 2: So if you were dealing with a larger array, instead of incrementing or lowering your guess by one, you'd want to add the array length divided by two in each time?
>> Bianca: You can do it that way. So, you could just divide the length.

[00:09:13]
And you could also just say, or you can just choose an index in the middle and compare your item to the index in the middle, and say is it greater than or is it less than? And then you can change your starting index to the one after it.

[00:09:35]
So your minimum, so say your index, you were looking for something that's on the right of your array. So it's gonna be greater than your min index. You can just set your min index to that current one. So then the min, and then you can just look on in the left.

[00:09:58]
That's another way of doing it, yeah. Yeah, cool.

