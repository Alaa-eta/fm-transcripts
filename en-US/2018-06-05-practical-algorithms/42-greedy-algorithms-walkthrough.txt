[00:00:00]
>> Bianca: Let's just say that you're a banker in monopoly. Your family they just lose all their game pieces, so they only have three bills. First of all, you have a $5 bill, a $10 bill and a $25 bill, for some reason. And whenever you pay out your family, you want to make sure that you're using the least number of bills because once you run out of bills, monopoly is over, okay?

[00:00:24]
So how might you write an algorithm to solve this problem? This is one version of the make change problem which is the same thing except, you'll see different versions of this. So monopoly money, or it'll be coins, or it'll be weight, something like that where you need to minimize or maximize something.

[00:00:45]
And in this case, we want to minimize the number of coins that add up to our amount. So in this case, it's always going to be divisible by five. Because otherwise it wouldn't work. Okay, so if our input is 40 and we would want an output of 3, right?

[00:01:07]
So it would be 25, 10 and 5. And if our input is 35, it would be 2, 25, and 10. So your task right now is to write a function, make change such that we get the correct result.
>> Bianca: All right.
>> Bianca: Good luck!
>> Bianca: All right, so the greedy solution to something like the make change problem is to simply choose the largest coin that you can at any given time.

[00:02:12]
So if you're starting with 40, you're gonna pick the largest one, 25. So you're gonna subtract 40 minus 25. What do you have left? 15, so then you're gonna do that again, subtract 10, subtract 5. So this is the greedy algorithm, and it seems reasonable, right? It works in this scenario.

[00:02:31]
And for 40, it's gonna give us the right answer. And here is how you might do that. You can sort the coins first if you'd like. And then you're just gonna do this while loop. While you have a certain amount, you're going to decrement the largest coin you possibly can and keep going with that.

[00:02:55]
Seems pretty straight forward.

