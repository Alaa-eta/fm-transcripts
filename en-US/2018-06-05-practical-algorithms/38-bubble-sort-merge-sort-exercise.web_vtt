WEBVTT

1
00:00:00.000 --> 00:00:03.970
&gt;&gt; Bianca Gandolfo: So our first sorting
exercise is implementing bubble sort.

2
00:00:03.970 --> 00:00:09.990
Remember, this is the sort that
loops through your array and

3
00:00:09.990 --> 00:00:14.250
it bubbles up the highest value each time.

4
00:00:15.560 --> 00:00:19.100
And our first task is to
implement bubble sort.

5
00:00:19.100 --> 00:00:20.490
So I'm gonna let you do that.

6
00:00:22.800 --> 00:00:24.040
&gt;&gt; Bianca Gandolfo: But not really.

7
00:00:25.710 --> 00:00:28.880
The second task that we have for
sorting is to implement merge sort.

8
00:00:28.880 --> 00:00:31.769
We went though the pseudo
code quite a bit.

9
00:00:31.769 --> 00:00:34.765
So just a reminder that we're
gonna split the array in halves,

10
00:00:34.765 --> 00:00:37.480
and we're gonna merge them recursively.

11
00:00:37.480 --> 00:00:42.720
And once we hit our base case, which
is a sorted list of length one, right?

12
00:00:42.720 --> 00:00:47.595
So we're gonna check for that base case
with length is either less than two or

13
00:00:47.595 --> 00:00:49.279
equals equals equals 1.

14
00:00:49.279 --> 00:00:50.873
However you want to do it is fine.

15
00:00:50.873 --> 00:00:53.468
And then that's the base case.

16
00:00:53.468 --> 00:00:56.702
You're going to start returning
up from your recursion.

17
00:00:56.702 --> 00:01:00.535
And you're going to compare
the arrays item by item and

18
00:01:00.535 --> 00:01:03.213
you're going to return that result.

19
00:01:03.213 --> 00:01:07.522
So this is the conquer part of
the divide and conquer paradigm.

