WEBVTT

1
00:00:00.060 --> 00:00:04.900
&gt;&gt; Sean: So if you wanna return kind
of safely to where we left off.

2
00:00:04.900 --> 00:00:11.160
The branch that you wanna use is
the feature, here let's clear the console.

3
00:00:11.160 --> 00:00:15.964
So feature/0310.

4
00:00:15.964 --> 00:00:19.910
Let's see if I can make that bigger,
there we go.

5
00:00:19.910 --> 00:00:26.366
Add first config

6
00:00:26.366 --> 00:00:30.979
mode none.

7
00:00:35.960 --> 00:00:36.676
&gt;&gt; Sean: Now, really,

8
00:00:36.676 --> 00:00:40.180
we're kind of at a point where we've
created our first webpack.config.

9
00:00:40.180 --> 00:00:42.972
We understand that, by default,

10
00:00:42.972 --> 00:00:47.415
Webpack is trying to consume
this config if it exists.

11
00:00:47.415 --> 00:00:50.970
And it's just a JavaScript module.

12
00:00:50.970 --> 00:00:55.000
Like, this is probably one
of the standout pieces about

13
00:00:56.040 --> 00:00:59.270
Webpack's configuration
is that it is code.

14
00:01:00.640 --> 00:01:03.930
And so, like any JavaScript that we write,

15
00:01:03.930 --> 00:01:07.130
it's gonna be subject to the same
symptoms of JavaScript, right?

16
00:01:07.130 --> 00:01:09.300
Like can it get out of hand?

17
00:01:09.300 --> 00:01:10.200
Absolutely.

18
00:01:10.200 --> 00:01:11.910
Can it be really hard to read?

19
00:01:11.910 --> 00:01:15.410
Yes, because JavaScript
can be out of hand, and

20
00:01:15.410 --> 00:01:19.080
can be hard to read, but
that's why we have modules, right?

21
00:01:19.080 --> 00:01:23.072
That's what modules exist to help us
encapsulate behavior and functionality.

22
00:01:25.490 --> 00:01:29.435
&gt;&gt; Sean: Now,
&gt;&gt; Sean: Before I start diving into

23
00:01:29.435 --> 00:01:33.808
actually kind of building out our
config and adding new features,

24
00:01:33.808 --> 00:01:37.230
I'm gonna talk about
webpack's core concepts.

25
00:01:37.230 --> 00:01:42.620
So I'm gonna share some slides.

26
00:01:42.620 --> 00:01:45.230
And you may have even seen
me talk about this before

27
00:01:45.230 --> 00:01:47.230
if you've seen some of my talks.

28
00:01:47.230 --> 00:01:52.962
The webpack, the core concepts was like
one of the first talks I ever gave.

29
00:01:52.962 --> 00:01:56.690
But to this day,
it's still very evergreen.

30
00:01:56.690 --> 00:02:01.230
I don't really even try to mess with
much of the content because the concepts

31
00:02:01.230 --> 00:02:05.460
itself are still evergreen
throughout Webpack.

32
00:02:05.460 --> 00:02:08.090
And I don't think many of
those are gonna change.

33
00:02:08.090 --> 00:02:11.270
So, the goal for you is to now understand.

34
00:02:11.270 --> 00:02:13.650
So, once we're done with this section.

35
00:02:13.650 --> 00:02:19.350
We're gonna dive into actually building
up the config, adding features,

36
00:02:19.350 --> 00:02:23.020
adding loaders, adding support for
things, and maybe talking about, why?

37
00:02:24.080 --> 00:02:27.290
And it's gonna be a lot more
comfortable once you understand what

38
00:02:27.290 --> 00:02:28.080
these things are doing.

39
00:02:29.120 --> 00:02:32.955
I find that more useful then just having
you arbitrarily code with me a bunch of

40
00:02:32.955 --> 00:02:34.846
stuff that you're like what is this?

41
00:02:34.846 --> 00:02:38.350
So there's four core concepts.

42
00:02:39.610 --> 00:02:40.976
So the first one is called entry.

43
00:02:40.976 --> 00:02:45.340
And we kind of have
an introduction to this already.

44
00:02:46.430 --> 00:02:51.220
The entry point you know really is not
like the entry property in the config,

45
00:02:51.220 --> 00:02:52.770
we're talking about more as the concept.

46
00:02:52.770 --> 00:02:55.860
So, say you have this diagram, and

47
00:02:55.860 --> 00:03:00.750
you have some codes and some modules,
and you have a toppable file.

48
00:03:00.750 --> 00:03:03.470
I think I was writing Angular at
the time when I created this, and so

49
00:03:03.470 --> 00:03:05.820
there was a bootstrap file.

50
00:03:05.820 --> 00:03:10.600
And it imports a component, and
that component imports some lib, and

51
00:03:10.600 --> 00:03:12.670
also some other components.

52
00:03:12.670 --> 00:03:17.890
And like that Lib has a dependency,
like this is how JavaScript works.

53
00:03:17.890 --> 00:03:20.740
And let's say we get really weird and

54
00:03:20.740 --> 00:03:24.340
sometimes your dependencies
aren't just JavaScript.

55
00:03:24.340 --> 00:03:26.440
Sometimes for

56
00:03:26.440 --> 00:03:30.640
a component library you might rely
on some SaaS or CSS or whatever.

57
00:03:32.710 --> 00:03:36.320
But the point is, is at that top file,
that is your entry point.

58
00:03:36.320 --> 00:03:37.740
That is the entry.

59
00:03:37.740 --> 00:03:41.450
It is the root of what is now
kind of a graph here, right?

60
00:03:42.590 --> 00:03:46.100
And it's the first JavaScript file to
kind of kick off your functionality.

61
00:03:49.880 --> 00:03:53.340
And so, we define this using an entry
property in the configuration.

62
00:03:55.160 --> 00:03:56.390
There's a couple ways or

63
00:03:56.390 --> 00:04:00.150
a couple different types of data types
that you can pass into the entry property.

64
00:04:00.150 --> 00:04:04.060
But the simplest is just a string,
which is just a relative path.

65
00:04:04.060 --> 00:04:09.535
And you can even see here,
you can step through the code.

66
00:04:09.535 --> 00:04:15.529
Webpack's gonna trace through each of
these imports, and then recursively

67
00:04:15.529 --> 00:04:20.887
look for other dependencies in those
files until it creates a graph.

68
00:04:20.887 --> 00:04:24.040
And that's the entry point,
that's what the entry is.

69
00:04:24.040 --> 00:04:29.580
It's very simple to, in terms,
it's not complex in what is happening

70
00:04:29.580 --> 00:04:34.230
behind the scenes either like we just
passed that stream to webpack's compiler,

71
00:04:34.230 --> 00:04:37.710
and then it goes and resolves it,
and tries to create a graph.

72
00:04:37.710 --> 00:04:39.980
So like when you think about
entry as like the concept.

73
00:04:41.760 --> 00:04:45.750
The entry point or the entry property,
the entry concept is really about

74
00:04:45.750 --> 00:04:49.140
telling webpack what you want
to include in the browser.

75
00:04:49.140 --> 00:04:52.870
What do you want your code to
be bundled and its contents?

76
00:04:52.870 --> 00:04:55.050
And it works together
with the output property.

