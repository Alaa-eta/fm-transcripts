WEBVTT

1
00:00:02.848 --> 00:00:09.080
&gt;&gt; Sean Larkin: What I really wanna do is
just start diving into, using Webpack.

2
00:00:09.080 --> 00:00:14.950
Let's use it for the first time,
&gt;&gt; Sean Larkin: From scratch.

3
00:00:14.950 --> 00:00:21.816
A lot of the code we're gonna work on
today is gonna be coding along with me.

4
00:00:21.816 --> 00:00:29.030
And you'll [LAUGH], I love to preface
this and say, I'm probably one

5
00:00:29.030 --> 00:00:34.440
of the least creative people as possible
when it comes to building the web app.

6
00:00:34.440 --> 00:00:36.970
And we're just gonna talk
about the core pieces.

7
00:00:36.970 --> 00:00:38.700
So it may not be the most visual.

8
00:00:38.700 --> 00:00:42.950
It's not gonna be Sara Drasner doing
these beautiful page transitions with SVG

9
00:00:42.950 --> 00:00:44.590
animations, not at all.

10
00:00:46.090 --> 00:00:48.290
Although, those are really great.

11
00:00:48.290 --> 00:00:50.770
We're gonna be just doing barebones.

12
00:00:50.770 --> 00:00:53.750
Because the whole point is that you,

13
00:00:53.750 --> 00:00:57.050
every single one of your workflows
are completely different.

14
00:00:57.050 --> 00:01:01.220
And so trying to pull up something
that's already created and

15
00:01:01.220 --> 00:01:04.250
walk through is not going to
provide as much value as it is

16
00:01:04.250 --> 00:01:09.260
being able to just start from scratch,
build as you go, and then

17
00:01:09.260 --> 00:01:13.436
understanding that you had the flexibility
to do anything any way that you want.

18
00:01:13.436 --> 00:01:20.760
And especially like, I think some people
would say, Shawn, there is no, actually.

19
00:01:20.760 --> 00:01:22.560
There was a Twitter thread yesterday,

20
00:01:22.560 --> 00:01:26.510
somebody who is from the rails community
was ripping on Webpack and like his first

21
00:01:26.510 --> 00:01:31.480
response was, I guess the problem is that
there isn't one right way to do things.

22
00:01:31.480 --> 00:01:32.930
I'm like, yeah, it's the web.

23
00:01:34.190 --> 00:01:36.740
There is no one solution for
what you're trying to create.

24
00:01:36.740 --> 00:01:41.900
If every web application was made the
exact same way, Webpack wouldn't exist.

25
00:01:41.900 --> 00:01:43.230
We wouldn't need it.

26
00:01:43.230 --> 00:01:45.690
But that's not the case.

27
00:01:45.690 --> 00:01:47.430
We all have unique challenges.

28
00:01:47.430 --> 00:01:49.790
We either work for finance or e-commerce,

29
00:01:49.790 --> 00:01:53.400
completely different domains of things
that you're trying to solve, and

30
00:01:53.400 --> 00:01:57.720
things are going to be completely More or
not important to you.

31
00:01:57.720 --> 00:02:02.290
So if you haven't cloned this
repo already go ahead and do so.

32
00:02:02.290 --> 00:02:06.140
And I actually want you to check out.

33
00:02:06.140 --> 00:02:08.410
So there's a lot of
branches that are there and

34
00:02:08.410 --> 00:02:10.060
we'll probably jump back and forth.

35
00:02:10.060 --> 00:02:16.130
If you feel like you're lost
at any time please speak up.

36
00:02:16.130 --> 00:02:22.210
Because this is the most important part
is you experiencing how to do it and

37
00:02:22.210 --> 00:02:24.650
having the confidence of doing it.

38
00:02:24.650 --> 00:02:28.440
So there is a branch you can check out.

39
00:02:28.440 --> 00:02:29.740
And so, let's see.

40
00:02:29.740 --> 00:02:32.080
Let's just pretend I'm on master, okay.

41
00:02:34.060 --> 00:02:37.530
All right, so our master you'll look and
eat Sean there is nothing here.

42
00:02:37.530 --> 00:02:39.840
That's the point I mean,
we're starting from scratch.

43
00:02:40.910 --> 00:02:42.290
So you can.

44
00:02:42.290 --> 00:02:46.671
We're gonna jump to Get Checkout feature,
feature.

45
00:02:46.671 --> 00:02:47.406
Can't spell.

46
00:02:47.406 --> 00:02:51.031
01 FEM per script.

47
00:02:55.966 --> 00:02:58.890
&gt;&gt; Sean Larkin: All right.

48
00:02:58.890 --> 00:03:03.370
So you're going to see that there are like
a billion dependencies in here but

49
00:03:03.370 --> 00:03:04.914
that's intentional.

50
00:03:04.914 --> 00:03:07.550
I wanna make it as easy for you to.

51
00:03:07.550 --> 00:03:10.430
So the first thing I want
to have you do is just run.

52
00:03:10.430 --> 00:03:14.540
So I use yarn myself, who uses mpm?

53
00:03:14.540 --> 00:03:19.230
Okay, so the commands are gonna
be the exact same if I run,

54
00:03:19.230 --> 00:03:24.440
the only difference is if I'm running
a script or if I am installing anything.

55
00:03:24.440 --> 00:03:26.090
I'd probably use yarn.

56
00:03:26.090 --> 00:03:30.260
I will just type yarn
instead of mpm install.

57
00:03:30.260 --> 00:03:33.990
So if you want to go ahead right now,
you can run mpm install.

58
00:03:33.990 --> 00:03:36.490
And it's going to pull down
a whole bunch of dependencies.

59
00:03:36.490 --> 00:03:40.560
Because of course the Webpack
ecosystem is huge and so

60
00:03:40.560 --> 00:03:44.400
you have a lot of different
integrations and things to choose from.

61
00:03:44.400 --> 00:03:48.350
And we may not cover every
single one of these but

62
00:03:48.350 --> 00:03:51.450
we are gonna touch on the fundamentals.

63
00:03:51.450 --> 00:03:56.060
And how to include these
features into your application or

64
00:03:56.060 --> 00:04:00.672
as you're building it, and so,
let's just, I'll run it myself.

65
00:04:00.672 --> 00:04:04.550
Run yarn or mpm install, either is fine.

66
00:04:04.550 --> 00:04:10.750
You might see some dependency warnings,
that's okay, that's mpm.

67
00:04:11.860 --> 00:04:13.260
Now, while you're doing that and

68
00:04:13.260 --> 00:04:16.860
I hear like the multicore fans
kicking in on your Macs and your PCs.

69
00:04:19.140 --> 00:04:24.120
So while this is happening, I'm gonna give
kind of like a high level overview or

70
00:04:24.120 --> 00:04:25.890
we're just gonna look and

71
00:04:25.890 --> 00:04:29.010
work through understanding
like how scripts work, right?

72
00:04:29.010 --> 00:04:33.810
So if you've never been
familiar with the mpm ecosystem

73
00:04:33.810 --> 00:04:38.150
you'll probably wonder how
that run anything right?

74
00:04:38.150 --> 00:04:43.600
You're using Node that's a prerequisite,
and you need to actually run Webpack.

75
00:04:43.600 --> 00:04:46.980
So when you install packages, or

76
00:04:46.980 --> 00:04:52.130
you might notice like if you do mpm
install, you could do --savedev.

77
00:04:52.130 --> 00:04:55.920
Like I usually recommend if it's mpm,
you do mpm.install -dev.

78
00:04:55.920 --> 00:04:57.138
If you don't, that's okay too.

79
00:04:57.138 --> 00:05:03.593
But regardless, what Webpack or
what mpm does it takes and

80
00:05:03.593 --> 00:05:08.479
adds a bin folder inside
your node modules.

81
00:05:09.570 --> 00:05:14.620
And these are the executables for all of
the modules that have been downloaded.

82
00:05:15.630 --> 00:05:18.610
And so
each of these have some sort of CLI, or

83
00:05:18.610 --> 00:05:23.970
binary executable
including Webpack itself.

84
00:05:23.970 --> 00:05:28.710
And so to actually run these,
if was to try to just do

85
00:05:28.710 --> 00:05:33.467
Webpack in here,
it doesn't work it fails see.

86
00:05:33.467 --> 00:05:38.482
It says Webpack not found, so
what mpm does is allows you to run

87
00:05:38.482 --> 00:05:43.401
scripts that hoist that binary
package within it's scope So

88
00:05:43.401 --> 00:05:46.110
this gives you the opportunity.

89
00:05:46.110 --> 00:05:48.800
So the first thing we'll
literally do here,

90
00:05:48.800 --> 00:05:50.600
now I know that there is
a script field already.

91
00:05:50.600 --> 00:05:54.900
But if you wanted to have
that from scratch experience,

92
00:05:54.900 --> 00:05:59.520
you can literally just
add a scripts key or

93
00:05:59.520 --> 00:06:03.460
a scripts key and
then the object is the value.

94
00:06:05.340 --> 00:06:10.310
And then, now, basically how this works
is, you can have anything in here.

95
00:06:10.310 --> 00:06:11.890
It could be like seanlarkin.

96
00:06:13.480 --> 00:06:20.340
And then what mpm will allow you to do, is
you can run any sort of command from here.

97
00:06:20.340 --> 00:06:22.536
It can be any sort of even bash command.

98
00:06:22.536 --> 00:06:25.360
But the difference is now
you have those binary

99
00:06:25.360 --> 00:06:27.500
those binary executables in this scope.

100
00:06:27.500 --> 00:06:28.090
So for

101
00:06:28.090 --> 00:06:33.370
example, if I wanted to run Webpack all I
have to do is type Webpack here, right?

102
00:06:33.370 --> 00:06:40.801
So now to run it, it's either mpm run and
name of that script, right?

103
00:06:43.290 --> 00:06:47.037
&gt;&gt; Sean Larkin: So in this case but why
don't we just for the sake of following

104
00:06:47.037 --> 00:06:50.870
along we just rename it to build or
we can even call it Webpack.

105
00:06:50.870 --> 00:06:53.990
I like that because then I know
exactly what that's running.

106
00:06:53.990 --> 00:06:57.820
So if I just said mpm run Webpack and
I save this.

107
00:07:01.710 --> 00:07:03.820
There we go,
that's the feedback I'm used to seeing.

108
00:07:05.070 --> 00:07:07.758
That's the default console output for
Webpack.

