WEBVTT

1
00:00:00.380 --> 00:00:05.720
&gt;&gt; Sarah Drasner: Let's say you're like
me and you like working with javascript.

2
00:00:05.720 --> 00:00:10.180
I was just mentioning to someone earlier,
I love javascript for

3
00:00:10.180 --> 00:00:13.640
animation, javascript is really,
really powerful for animation.

4
00:00:13.640 --> 00:00:16.100
So, what if we want to use one
of these transition hooks but

5
00:00:16.100 --> 00:00:18.820
we want to use it with Java
scripts instead of CSS.

6
00:00:18.820 --> 00:00:22.520
We are allowed to because we
can use Java Script texts.

7
00:00:22.520 --> 00:00:24.480
Here are all the hooks available to us.

8
00:00:24.480 --> 00:00:26.260
We don't have to use all of these.

9
00:00:26.260 --> 00:00:26.810
We can plug in.

10
00:00:26.810 --> 00:00:28.640
It's just like the life cycle hooks.

11
00:00:28.640 --> 00:00:29.980
We don't have to plug in to any of them,

12
00:00:29.980 --> 00:00:33.190
we can plug in to ones that we want or
not.

13
00:00:33.190 --> 00:00:37.410
These transition hooks are before,
enter, after

14
00:00:38.600 --> 00:00:43.830
enter, enter cancelled, beforeLeave,
leave, afterLeave, leaveCancelled.

15
00:00:43.830 --> 00:00:48.680
It's important to write
v-bindings css="false".

16
00:00:48.680 --> 00:00:49.310
That's so

17
00:00:49.310 --> 00:00:53.290
that you're letting Vue know okay
we're not gonna be using CSS for this.

18
00:00:53.290 --> 00:00:57.340
If you see CSS around that has to
do with these namings, ignore them.

19
00:00:57.340 --> 00:00:59.720
We're using JavaScript right now.

20
00:00:59.720 --> 00:01:04.040
So that's to avoid any kind of like race
conditions or collisions, basically make

21
00:01:04.040 --> 00:01:07.680
sure that you're not naming things the
same thing anyway but it's possibly you're

22
00:01:07.680 --> 00:01:12.400
on a giant code base and you don't know
that there's a collision happening.

23
00:01:12.400 --> 00:01:15.570
So, these are just, these are the hooks,

24
00:01:15.570 --> 00:01:19.030
those like of course we've
got that v on or at.

25
00:01:19.030 --> 00:01:20.620
And you can name this whenever you want,

26
00:01:20.620 --> 00:01:25.480
I just was naming them things
that made sense to me.

27
00:01:25.480 --> 00:01:27.830
So the most basic example, I would say,

28
00:01:27.830 --> 00:01:30.850
we probably not usually
gonna use all of those.

29
00:01:30.850 --> 00:01:35.750
So the most basic example here,
we've got that transition component,

30
00:01:35.750 --> 00:01:38.190
we've got an enter, and we've got a leave.

31
00:01:38.190 --> 00:01:41.090
Those are gonna be the hooks that
we're going to use in order to

32
00:01:41.090 --> 00:01:45.500
create our animation, and we're gonna say
css false and we put that element there.

33
00:01:45.500 --> 00:01:48.310
So that's the most basic example.

34
00:01:48.310 --> 00:01:51.640
So we can plug into and
inside our methods,

35
00:01:51.640 --> 00:01:55.050
because they're basically now
methods that we're going to use.

36
00:01:55.050 --> 00:01:59.810
We're gonna say enterEl,
we have access to that element.

37
00:01:59.810 --> 00:02:03.060
So that is always going to come through
and then we've got done as well.

38
00:02:03.060 --> 00:02:04.710
We've got to let it know when it's done.

39
00:02:04.710 --> 00:02:07.480
Part of the reason we have
to do this is that so

40
00:02:07.480 --> 00:02:11.380
the transition modes can work right you've
got those transition modes that are firing

41
00:02:11.380 --> 00:02:15.500
after the other thing is done, we've got
to let it know the other thing is done.

42
00:02:15.500 --> 00:02:20.445
So we've got leave A]and we've got el and
we're passing those in so

43
00:02:20.445 --> 00:02:24.538
any time we need to use like
most animation libraries need

44
00:02:24.538 --> 00:02:28.970
a reference to work off of that
where you can use that el in order

45
00:02:28.970 --> 00:02:33.570
to create that reference
&gt;&gt; Sarah Drasner: So

46
00:02:33.570 --> 00:02:36.570
now you actually know
fully how this was done.

47
00:02:36.570 --> 00:02:39.760
First you knew how
the input part was done,

48
00:02:39.760 --> 00:02:42.010
now you know how all of this was done.

49
00:02:42.010 --> 00:02:49.000
I'm writing in here this, hi,
we all]] ready had lunch,

50
00:02:49.000 --> 00:02:53.970
so no more tacos, and

51
00:02:53.970 --> 00:02:58.900
I am gonna write it and you probably have

52
00:02:58.900 --> 00:03:03.530
guessed that I didn't have it into
the dorm until I pressed the button and

53
00:03:03.530 --> 00:03:10.690
then we can use that hook to have it
cascade and then bounce in total location.

54
00:03:10.690 --> 00:03:15.060
The other thing I'm doing is I'm using
a library called Green Sock which lets me

55
00:03:15.060 --> 00:03:16.260
same from.

56
00:03:16.260 --> 00:03:19.560
Like, it's going to take
from a bunch of values and

57
00:03:19.560 --> 00:03:21.260
bring it to where it needs to be.

58
00:03:21.260 --> 00:03:24.940
So I don't need to specifically say
go over here and go over here and

59
00:03:24.940 --> 00:03:25.740
go over here.

60
00:03:25.740 --> 00:03:26.868
That wouldn't make a lot of sense.

61
00:03:26.868 --> 00:03:32.450
I'm saying take, go from all of these
different locations and come to this area.

62
00:03:34.580 --> 00:03:35.640
So this is a lot of code.

63
00:03:35.640 --> 00:03:37.780
Don't worry,
we're gonna zoom in to some of it and

64
00:03:37.780 --> 00:03:41.090
then we're gonna look at it
a little bit more closely.

65
00:03:41.090 --> 00:03:44.790
In this before Enter,
remember we had a before Enter hook,

66
00:03:44.790 --> 00:03:49.150
there might be some values that you
need to apply to your animation.

67
00:03:49.150 --> 00:03:52.690
And in this case for
those letters, I wanted it to do,

68
00:03:52.690 --> 00:03:55.120
I wanted them to do lots of weird things.

69
00:03:55.120 --> 00:03:58.190
I wanted them to transform in space,

70
00:03:58.190 --> 00:04:03.240
preserve 3D and bounce around in this,
like, I didn't want them just bouncing,

71
00:04:03.240 --> 00:04:08.280
I wanted them bouncing and spinning and
doing all sorts of crazy things.

72
00:04:08.280 --> 00:04:10.750
So the things I had to do was

73
00:04:10.750 --> 00:04:14.510
using this thing in GreenSock called
TweenMax.set which basically applies

74
00:04:14.510 --> 00:04:18.650
a bunch of characteristics to
the animation right before it gets going.

75
00:04:18.650 --> 00:04:20.840
I could also do this in CSS.

76
00:04:20.840 --> 00:04:25.085
I wouldn't necessarily need to use
Before enter hook if I didn't want to.

77
00:04:25.085 --> 00:04:26.395
But sometimes I do it this way,

78
00:04:26.395 --> 00:04:30.985
because these properties don't actually
do anything until I start animating.

79
00:04:30.985 --> 00:04:34.515
So it's possible that if I'm sharing
the code base with someone else, and

80
00:04:34.515 --> 00:04:38.355
they come along, and
they like what's all this stuff, and

81
00:04:38.355 --> 00:04:43.520
they delete these properties, and they're
like, still looks the same, we're good,

82
00:04:43.520 --> 00:04:49.860
T]that's totally possible or me later
like a year later is like what is that?

83
00:04:49.860 --> 00:04:51.050
I don't know and

84
00:04:51.050 --> 00:04:55.020
like removes it and then I'm like
the animation broke, that's weird.

85
00:04:55.020 --> 00:04:56.770
Like why did that happen?

86
00:04:56.770 --> 00:05:00.590
So sometimes keeping them together It
makes a lot of sense because you're

87
00:05:00.590 --> 00:05:03.490
actually saying,
these are the things I need just for this.

88
00:05:03.490 --> 00:05:06.780
The other thing that's really nice
about it is if I need to adjust it,

89
00:05:06.780 --> 00:05:10.580
I'm not going back and forth from the CSS
to the JavaScript and back again.

90
00:05:10.580 --> 00:05:13.550
I'm just staying directly
with the JavaScript code, and

91
00:05:13.550 --> 00:05:16.020
I'm making my small changes here.

92
00:05:16.020 --> 00:05:18.960
I think I started off
with 600 perspective, and

93
00:05:18.960 --> 00:05:21.870
I was able to slowly adjust
until I got what I wanted.

94
00:05:22.930 --> 00:05:27.660
So then in the enter, and
then el, I'm passing it that el.

95
00:05:27.660 --> 00:05:33.230
And I'm doing a for loop, and
I'm splitting the words apart, and

96
00:05:33.230 --> 00:05:38.380
I'm able to say, on the z-axis,
do some Math.random(),

97
00:05:38.380 --> 00:05:43.550
and use this bouncing ease
A]and I'm plotting this along

98
00:05:43.550 --> 00:05:46.350
a timeline that I've
created that has labels.

99
00:05:46.350 --> 00:05:48.830
But we're not gonna delve
too far into this library,

100
00:05:48.830 --> 00:05:51.810
that's very library specific code there.

101
00:05:51.810 --> 00:05:54.980
So I'm able to create a timeline and

102
00:05:54.980 --> 00:05:59.170
do a lot of calculations on there
that I need for my animation.

103
00:05:59.170 --> 00:06:03.640
And we're hanging everything
off of that that enter, so

104
00:06:03.640 --> 00:06:05.730
everything kind of plugs in to that enter.

105
00:06:07.190 --> 00:06:10.160
We mentioned this before,
we kind of went over that before.

106
00:06:10.160 --> 00:06:14.770
The other thing that's worth
mentioning is, I had done a bunch of,

107
00:06:14.770 --> 00:06:18.650
here are some the variables that I
was creating to use my animation.

108
00:06:18.650 --> 00:06:23.850
But, the most important variable of
all is, I'm creating a time line,

109
00:06:23.850 --> 00:06:28.190
oops, I'm creating a time line and
I'm passing in this onComplete done.

110
00:06:28.190 --> 00:06:31.750
So I had mentioned before that
when we need to pass in the EL and

111
00:06:31.750 --> 00:06:34.110
we need to pass in done we
need to let them, you know,

112
00:06:34.110 --> 00:06:37.980
the animation know when it's
done executing to call done.

113
00:06:37.980 --> 00:06:42.135
But some animation libraries need you
to pass that into a timeline I think.

114
00:06:42.135 --> 00:06:44.180
Anime has something like this.

115
00:06:44.180 --> 00:06:47.790
GreenSock has something like this,
mo.js has something like this.

116
00:06:47.790 --> 00:06:52.010
So, in some instances, just writing
done in there is not going to work,

117
00:06:52.010 --> 00:06:54.450
because it doesn't execute
the code that way.

118
00:06:54.450 --> 00:06:57.230
It's going to grab everything
that's on that timeline and

119
00:06:57.230 --> 00:07:00.920
we need to pass it in the way that's
kind of native to that library.

120
00:07:00.920 --> 00:07:04.550
So, if you're working with an external
JavaScript library, a lot of the more

121
00:07:04.550 --> 00:07:09.470
sophisticated ones will offer you some
sort of hook for when it's completed.

122
00:07:09.470 --> 00:07:11.080
And that's where you should put the done.

