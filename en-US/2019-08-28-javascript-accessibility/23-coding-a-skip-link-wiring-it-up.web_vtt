WEBVTT

1
00:00:00.610 --> 00:00:03.975
&gt;&gt; Marcy Sutton: So that should be it for
this custom wrap heading and

2
00:00:03.975 --> 00:00:06.094
now I'm gonna go implement it.

3
00:00:06.094 --> 00:00:09.476
So I've still got an import here,

4
00:00:09.476 --> 00:00:14.034
it's looking for
it in the better directory.

5
00:00:14.034 --> 00:00:15.259
So we're in the right spot.

6
00:00:15.259 --> 00:00:17.971
It's grayed out because I haven't
actually referrenced it yet.

7
00:00:17.971 --> 00:00:21.289
But I'm just gonna grab
that component name, and

8
00:00:21.289 --> 00:00:25.565
I'm gonna change this h2 to
a route target heading component.

9
00:00:25.565 --> 00:00:30.927
I'm gonna pass in a level of two so
it'll give me that h2.

10
00:00:30.927 --> 00:00:35.515
And a quick note about headings is that
we want to start with h1 on a page and

11
00:00:35.515 --> 00:00:36.332
go in order.

12
00:00:36.332 --> 00:00:43.098
So the h1 on our app is this top level
accessibility in JavaScript applications.

13
00:00:43.098 --> 00:00:48.058
Sometimes you wanna change the h1
to be the name of the page.

14
00:00:48.058 --> 00:00:49.830
You can play with the heading
levels a little bit.

15
00:00:49.830 --> 00:00:53.030
Just, I think the most important
thing is that they go in order so

16
00:00:53.030 --> 00:00:54.250
that you don't skip levels.

17
00:00:54.250 --> 00:00:57.250
So I'm not skipping straight to h2.

18
00:00:57.250 --> 00:00:58.980
I already have an h1 also.

19
00:01:00.000 --> 00:01:05.600
So I've got that, the other prop
I need to pass in is targetID.

20
00:01:05.600 --> 00:01:07.650
I'm just gonna say navigation.

21
00:01:07.650 --> 00:01:13.020
And if we go, I think I need the back

22
00:01:13.020 --> 00:01:16.670
here in my site chrome directory,
I have a navigation snippet.

23
00:01:16.670 --> 00:01:20.530
So what's nice about working with react
components is you can break up different

24
00:01:20.530 --> 00:01:24.140
parts of your site chrome
into different components.

25
00:01:24.140 --> 00:01:29.100
They're reusable, but also you can just
focus on that one part of your site or

26
00:01:29.100 --> 00:01:30.360
that one part of your application.

27
00:01:30.360 --> 00:01:32.890
And this is where my navigation lives.

28
00:01:32.890 --> 00:01:36.177
And there is an ID of navigation here.

29
00:01:36.177 --> 00:01:38.960
I've also got a visually hidden
heading here in the nav section.

30
00:01:38.960 --> 00:01:44.710
So in that left sidebar, there is
a heading here that says navigation.

31
00:01:44.710 --> 00:01:49.030
But the part that I really want
to focus on are these demos.

32
00:01:49.030 --> 00:01:53.760
Like if I am coming from the drop
down link here in the left and

33
00:01:53.760 --> 00:01:58.130
I wanna send focus into it's matching
content, and then I wanna skip back,

34
00:01:58.130 --> 00:02:02.270
I think the most appropriate place is to
focus on these links where I came from.

35
00:02:02.270 --> 00:02:05.560
So that's why am putting
the id right here.

36
00:02:05.560 --> 00:02:09.960
So navigation, that will match,
this use case.

37
00:02:09.960 --> 00:02:14.430
So I'm actually gonna copy this,
because we need this on all of our pages.

38
00:02:14.430 --> 00:02:17.852
I've just used h2's here.

39
00:02:17.852 --> 00:02:19.530
I'm gonna go change these real quick.

40
00:02:19.530 --> 00:02:23.110
So that when I'm clicking around,
they match.

41
00:02:23.110 --> 00:02:25.010
And it won't matter what page I'm on.

42
00:02:25.010 --> 00:02:27.210
So I'm gonna change all these.

43
00:02:27.210 --> 00:02:29.720
And hopefully we can just automate
this stuff so it's easier and

44
00:02:29.720 --> 00:02:30.940
you don't really have to think about it.

45
00:02:30.940 --> 00:02:33.580
But for now, this'll work.

46
00:02:33.580 --> 00:02:35.680
I mean, this is how frameworks get made.

47
00:02:35.680 --> 00:02:37.610
We prototype it, we see if it works.

48
00:02:37.610 --> 00:02:40.200
We get more user testing,
which is something I'm doing.

49
00:02:40.200 --> 00:02:43.930
And then we see, you know,
how can we make that easier for everyone?

50
00:02:45.380 --> 00:02:49.570
So route target heading, and you can
honestly call this whatever you want.

51
00:02:49.570 --> 00:02:52.230
Naming things is one of the hardest
things in computer science.

52
00:02:52.230 --> 00:02:54.920
So maybe the name will change.

53
00:02:54.920 --> 00:02:56.740
Maybe it makes sense to me and
no one else.

54
00:02:57.950 --> 00:03:00.850
I think I've got two more here.

55
00:03:00.850 --> 00:03:06.370
I kept the imports in there,
so it should be fine.

56
00:03:06.370 --> 00:03:08.860
The semantics pages an example for
you all to use later.

57
00:03:10.010 --> 00:03:11.710
Rep target heading is not fine.

58
00:03:11.710 --> 00:03:14.090
Okay, so
I do need to import that somewhere.

59
00:03:15.780 --> 00:03:17.630
Let's see which one was complaining?

60
00:03:17.630 --> 00:03:19.147
The Index page.

61
00:03:21.429 --> 00:03:23.830
&gt;&gt; Marcy Sutton: So
I'm just going to paste this import, so

62
00:03:23.830 --> 00:03:26.040
it knows where to find that component.

63
00:03:27.110 --> 00:03:33.440
So now if I hover here, I've got this
little anchor thing that shows up.

64
00:03:33.440 --> 00:03:36.560
It looks kind of funky because
there's a caret and an underline.

65
00:03:36.560 --> 00:03:38.604
So I'm actually gonna go
turn off the underline.

66
00:03:40.771 --> 00:03:44.123
&gt;&gt; Marcy Sutton: For this case, it's
an interactive thing I really recommend

67
00:03:44.123 --> 00:03:47.020
keeping underlines on for
regular text links.

68
00:03:47.020 --> 00:03:52.510
This is sort of a special case so
I'm going to say text decoration, none.

69
00:03:54.190 --> 00:03:57.380
For this one little interactive thing.

70
00:03:57.380 --> 00:04:00.844
And probably I would use it
like a more graceful arrow,

71
00:04:00.844 --> 00:04:03.650
but that's what I had
off the top of my head.

72
00:04:03.650 --> 00:04:10.120
Okay, so I think the other part that I
need to hook up is back in Gatsby browser.

73
00:04:10.120 --> 00:04:11.910
So I guess let's go.

74
00:04:11.910 --> 00:04:13.850
What I'm gonna do here, so.

75
00:04:13.850 --> 00:04:17.820
At this level,
this API method doesn't really,

76
00:04:17.820 --> 00:04:20.710
I don't really have insight into
what's inside my application.

77
00:04:20.710 --> 00:04:23.090
And frankly, I don't really wanna know.

78
00:04:23.090 --> 00:04:25.130
I just want to go look on the page and
see,

79
00:04:25.130 --> 00:04:28.460
is there a skip link kind of
like the one I'm looking for?

80
00:04:28.460 --> 00:04:29.970
I'm just going to write it like that.

81
00:04:31.030 --> 00:04:31.650
Let's go see.

82
00:04:31.650 --> 00:04:36.960
I'm going to do, set a variable and
call it skip link.

83
00:04:36.960 --> 00:04:42.460
And I'm just going to go look for
it query, document.queryselector.

84
00:04:42.460 --> 00:04:47.249
And it was called route skip link was
the CSS class that I added in here.

85
00:04:47.249 --> 00:04:51.379
Route, skip link.

86
00:04:51.379 --> 00:04:53.192
So if there's a skip link on the page,

87
00:04:53.192 --> 00:04:55.415
I don't want to error
out if there isn't one.

88
00:04:55.415 --> 00:04:59.135
And if there isn't one,
it'll fall back to reach router or

89
00:04:59.135 --> 00:05:01.845
doing some routing focus handling for us.

90
00:05:01.845 --> 00:05:06.650
But if there is a skip link,
I'm gonna say skiplink.focus.

91
00:05:06.650 --> 00:05:09.280
And so this will go look for
that component.

92
00:05:09.280 --> 00:05:15.490
In the event that there is a previous
location because we've navigated,

93
00:05:15.490 --> 00:05:19.750
that'll be no on the first load of a page
because you you're just getting there you

94
00:05:19.750 --> 00:05:25.150
know, there isn't a previous location and
hopefully that works.

95
00:05:25.150 --> 00:05:26.470
Go look.

96
00:05:26.470 --> 00:05:31.390
So now If I use, let's go see,
I have an error.

97
00:05:32.800 --> 00:05:33.330
And by the way,

98
00:05:33.330 --> 00:05:37.300
if you see this unchecked runtime
last error message in the dev tools,

99
00:05:37.300 --> 00:05:40.820
I see that all over the web, it might be
from a browser extension or something.

100
00:05:40.820 --> 00:05:43.160
It doesn't actually have anything
to do with this application.

101
00:05:43.160 --> 00:05:44.940
So don't worry about that.

102
00:05:46.370 --> 00:05:49.460
So, I don't think I got my
conditional right here.

103
00:05:49.460 --> 00:05:52.502
So I'm actually gonna do
a little bit of logging and say,

104
00:05:52.502 --> 00:05:57.130
console.log(location, prevlocation).

105
00:05:57.130 --> 00:06:00.720
And we'll just go make sure
that this method is working.

106
00:06:00.720 --> 00:06:05.570
So yeah, we've got a location and
null here for

107
00:06:07.560 --> 00:06:10.430
when there is a different one.

108
00:06:10.430 --> 00:06:13.070
I was on the drop down page already,
I think

109
00:06:13.070 --> 00:06:16.510
maybe some styling to indicate to me that
that's the page I'm on would have helped.

110
00:06:18.280 --> 00:06:23.950
So it's actually working because this
Is showing our little route skip link.

111
00:06:23.950 --> 00:06:26.942
So I'm going to do that with the keyboard,
I'm gonna close the dev tools.

112
00:06:26.942 --> 00:06:30.150
And that was our focus
outline on the navigation.

113
00:06:30.150 --> 00:06:31.380
So it's actually working.

114
00:06:32.940 --> 00:06:34.220
So I can go back and forth.

115
00:06:35.410 --> 00:06:38.610
It's working better than kicking
me all the way back to the top of

116
00:06:38.610 --> 00:06:40.210
the application.

117
00:06:40.210 --> 00:06:43.640
So I'm pretty happy with that.

118
00:06:43.640 --> 00:06:48.210
I can go on to one of these links
with the keyboard, hit the enter key,

119
00:06:48.210 --> 00:06:52.560
it sends my focus to a skip link but it
doesn't take up much space on the screen.

120
00:06:52.560 --> 00:06:55.460
I could opt to style that however I want.

121
00:06:55.460 --> 00:06:59.310
I can make it look like an icon button and
give it an accessible name.

122
00:06:59.310 --> 00:07:03.650
I could make it look like an actual
skip link and say skip to navigation.

123
00:07:03.650 --> 00:07:06.670
So there's some subjectivity
involved with the design.

124
00:07:06.670 --> 00:07:11.360
But it functionally serves purposes.

125
00:07:11.360 --> 00:07:15.820
We're not just sending focus to this
wrapper element and then being like,

126
00:07:15.820 --> 00:07:17.520
all right, you're on your own.

127
00:07:17.520 --> 00:07:20.050
Go tab around and
figure out where you are.

128
00:07:20.050 --> 00:07:22.710
This link is actually useful.

129
00:07:22.710 --> 00:07:26.220
It serves a purpose and so
through research I found that,

130
00:07:26.220 --> 00:07:28.660
that just made a lot more sense.

131
00:07:28.660 --> 00:07:32.820
That's for where we skip back to,
we could play that a little bit.

132
00:07:32.820 --> 00:07:36.470
I'm sending focus back to
the wrapper element of the nav.

133
00:07:36.470 --> 00:07:39.230
Maybe I should send it back
to the link I came from.

134
00:07:39.230 --> 00:07:41.490
That's an improvement that
we can make potentially.

135
00:07:42.770 --> 00:07:45.880
But that's how I would
build this component.

136
00:07:45.880 --> 00:07:49.460
I guess one more thing we should look at
is the accessible name of this just to

137
00:07:49.460 --> 00:07:52.076
make sure that we've got that working.

138
00:07:52.076 --> 00:07:54.700
So I'm gonna,
I'm focused on this in the dev tools.

139
00:07:54.700 --> 00:07:59.234
I'm going to go over the accessibility
inspector and it says skip to navigation.

140
00:07:59.234 --> 00:08:05.474
So the aria label is stomping over
the contents of that pseudo element.

141
00:08:05.474 --> 00:08:10.640
Because aria label on the parent will take
preference over whatever's inside of it.

142
00:08:10.640 --> 00:08:15.470
So something good to know about that and
I can see in this accessibility

143
00:08:15.470 --> 00:08:20.300
inspector how the accessible name
calculation is like what's winning,

144
00:08:20.300 --> 00:08:23.170
if I have multiple things,
trying to like give it a name.

145
00:08:23.170 --> 00:08:26.120
I love this tool because it
will show me which one wins.

146
00:08:27.130 --> 00:08:28.840
That can get a little tricky sometimes.

147
00:08:28.840 --> 00:08:31.790
And so I love that it shows
what's crossed out and

148
00:08:31.790 --> 00:08:37.510
what's actually going to be
exposed to assistive technology.

149
00:08:37.510 --> 00:08:40.420
All right, so that's some routing.

150
00:08:40.420 --> 00:08:42.250
I'm now going to have you work on that.

151
00:08:43.600 --> 00:08:46.090
And you can choose how
you want to work on this.

152
00:08:46.090 --> 00:08:50.810
So you can play around with that on
route update method in Gatsby and

153
00:08:50.810 --> 00:08:52.610
play with it and react.

154
00:08:52.610 --> 00:08:57.270
I think success would just look
like handling focus somehow,

155
00:08:57.270 --> 00:08:58.200
I think you can play.

156
00:08:58.200 --> 00:09:00.620
It's up for exploration and
playing around.

157
00:09:00.620 --> 00:09:03.840
I also have a vanilla JS version here.

158
00:09:05.730 --> 00:09:10.480
That because the routing in Gatsby is
kind of like hidden away from you,

159
00:09:10.480 --> 00:09:14.560
I think it can conceptually be a little
bit harder to follow what's happening.

160
00:09:14.560 --> 00:09:20.159
So I added this little sandbox that I'm
using to debug Gatsby itself, actually.

161
00:09:21.700 --> 00:09:27.370
This little routing prototype you just
can switch between these two routes.

162
00:09:27.370 --> 00:09:29.970
It's pretty rudimentary.

163
00:09:29.970 --> 00:09:34.810
But it gives you all of the scripts over
here for actually rendering the page.

164
00:09:34.810 --> 00:09:38.680
So this is like what a JavaScript
framework is doing under the hood.

165
00:09:38.680 --> 00:09:40.800
Is replacing what's on the screen.

166
00:09:40.800 --> 00:09:45.650
And so this gives us a little more handles
to go in and play with focus handling, so

167
00:09:45.650 --> 00:09:50.180
I've added a marker where you can go and
play with focus.

168
00:09:50.180 --> 00:09:54.910
So let's experiment with, as you're
changing routes where focus goes.

169
00:09:54.910 --> 00:09:58.300
And make sure that you test it
with not just the mouse but

170
00:09:58.300 --> 00:10:01.477
play with the keyboard and
see where your focus is.

171
00:10:01.477 --> 00:10:04.820
So yeah, and I guess the the one
last thing I will mention

172
00:10:04.820 --> 00:10:09.090
that's different between the two
versions is that in this prototype,

173
00:10:09.090 --> 00:10:11.670
it's just got the browser default focus.

174
00:10:12.700 --> 00:10:16.150
In the Gatsby version,
I'm using focus visible,

175
00:10:16.150 --> 00:10:20.520
which I'm going to actually show
you where that is hooked up.

176
00:10:20.520 --> 00:10:26.680
So in, there's a layout CSS file
in that site chrome directory.

177
00:10:26.680 --> 00:10:27.910
Just if you're curious.

178
00:10:27.910 --> 00:10:34.020
That's where I'm handling like to just
specify what the focus should be doing.

179
00:10:34.020 --> 00:10:37.670
So this is doing this for keyboard users.

180
00:10:37.670 --> 00:10:41.390
And I believe that in the layout JS file,

181
00:10:41.390 --> 00:10:44.480
which is also in this directory,
that's just where I'm importing this.

182
00:10:44.480 --> 00:10:47.730
I didn't really cover that earlier,
so just in case you're curious.

183
00:10:49.020 --> 00:10:52.320
So yeah, let's break for 10 minutes or so.

184
00:10:52.320 --> 00:10:54.060
And we'll play with routing.

185
00:10:54.060 --> 00:10:58.290
&gt;&gt; Speaker 2: Is that JS focus
visible class for the polyfill?

186
00:10:58.290 --> 00:10:59.234
&gt;&gt; Marcy Sutton: Yeah, so that's for

187
00:10:59.234 --> 00:11:02.150
a polyfill eventually
you wouldn't need that.

188
00:11:02.150 --> 00:11:05.040
Hopefully see how long that takes.

189
00:11:05.040 --> 00:11:09.070
So yeah, this import is purely just for
the polyfill purpose.

190
00:11:09.070 --> 00:11:11.960
And then if I go to the layout CSS,

191
00:11:11.960 --> 00:11:17.220
there is some polyfill
like remnants here of it.

192
00:11:17.220 --> 00:11:20.790
It adds a JS focus visible
class to the body.

193
00:11:20.790 --> 00:11:22.970
And that's how I can safely use this.

194
00:11:22.970 --> 00:11:28.090
What I wanna I avoid is if the polyfill
isn't there and it's not supported.

195
00:11:28.090 --> 00:11:30.690
I don't want to turn focus off for
everyone.

196
00:11:30.690 --> 00:11:31.790
Like that's what I want to avoid.

197
00:11:31.790 --> 00:11:33.850
And that's why the polyfills important.

198
00:11:35.640 --> 00:11:40.880
So yeah, those are the differences between
the code pen and the Gatsby version.

199
00:11:40.880 --> 00:11:42.430
So let's go forth.

